<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Uncategorized on GeekyRyan</title><link>https://rnemeth90.github.io/categories/uncategorized/</link><description>Recent content in Uncategorized on GeekyRyan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 24 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/categories/uncategorized/index.xml" rel="self" type="application/rss+xml"/><item><title>Anacron</title><link>https://rnemeth90.github.io/til/2025-08-24-anacron/</link><pubDate>Sun, 24 Aug 2025 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/til/2025-08-24-anacron/</guid><description>&lt;p>Anacron is designed for tasks that need to run periodically (daily, weekly, monthly) on systems that are not continuously powered on. If a scheduled cron task is missed because the system is off, anacron will run the task once the system is available.&lt;/p>
&lt;p>On many systems, anacron is pre-installed. If not, install it with:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo apt install anacron
Anacron&amp;#39;s configuration is in the /etc/anacrontab file, which includes helpful comments and examples. Here’s an excerpt:

$ sudo vim /etc/anacrontab
# See anacron(8) and anacrontab(5) for details.
# These entries replace cron&amp;#39;s job entries.
1 5 cron.daily run-parts --report /etc/cron.daily
7 10 cron.weekly run-parts --report /etc/cron.weekly
@monthly 15 cron.monthly run-parts --report /etc/cron.monthly
&lt;/code>&lt;/pre>&lt;p>The syntax in the anacrontab file consists of four fields:&lt;/p></description></item><item><title>Linux Process Control Blocks</title><link>https://rnemeth90.github.io/til/2025-08-23-linux-pcb/</link><pubDate>Sat, 23 Aug 2025 16:01:00 +0000</pubDate><guid>https://rnemeth90.github.io/til/2025-08-23-linux-pcb/</guid><description>&lt;p>The process control block in Linux (formally named the task_struct) is a data structure maintained by the kernel that contains all of the necessary information to maintain a process on the system. The task_struct is a large struct in the kernel containing many fields. Some example fields are process id (pid), file descriptors, environment variables, the command used to start the process, memory maps, etc. The information specific to a process can be viewed in the &lt;code>/proc/&amp;lt;pid&amp;gt;/&lt;/code> directory. You can learn more in the man pages &lt;code>man procfs&lt;/code>. You can find other relevant man pages with &lt;code>apropos proc&lt;/code>&lt;/p></description></item><item><title>todo</title><link>https://rnemeth90.github.io/projects/2025-03-29-todo/</link><pubDate>Sat, 29 Mar 2025 16:01:00 +0000</pubDate><guid>https://rnemeth90.github.io/projects/2025-03-29-todo/</guid><description>&lt;p>to do&amp;hellip;&lt;/p></description></item><item><title>Injecting multiple Kubernetes volumes to the same directory in a pod</title><link>https://rnemeth90.github.io/posts/2022-04-30-injecting-multiple-kubernetes-volumes-to-the-same-directory-in-a-pod/</link><pubDate>Sat, 30 Apr 2022 14:21:05 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-04-30-injecting-multiple-kubernetes-volumes-to-the-same-directory-in-a-pod/</guid><description>&lt;p>We can inject configuration into containers using Kubernetes config maps and secrets. These objects can be consumed by a pod as environment variables, command-line arguments, or as configuration files mounted in a volume. For the subject of this article, we will focus on mounting multiple config maps/secrets into a single directory on a pod.&lt;/p>
&lt;p>Mounting a configmap or secret in a Volume is relatively straightforward (for anyone familiar with Kubernetes primitives). Take for example the following deployment definition:&lt;/p></description></item><item><title>Deploy Azure VMs Using Azure Devops CI/CD Pipeline</title><link>https://rnemeth90.github.io/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</link><pubDate>Fri, 14 Jan 2022 18:46:35 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</guid><description>&lt;p>This article assumes that you have already created a pipeline in Azure Devops and have it linked to an Azure Devops repo. You will need to create a variable named $vmpassword and assign it the value stored in your key vault.&lt;/p>
&lt;p>To create a release pipeline that will automatically create a VM (using the password stored in key vault for the local administrator account), do the following:&lt;/p>
&lt;ol>
&lt;li>Create a new release pipeline&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-13.png" alt="">&lt;/p></description></item><item><title>Azure Devops &amp;#8211; Self Hosted Agent Service Won&amp;#8217;t Start &amp;#8211; Incorrect Function</title><link>https://rnemeth90.github.io/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</link><pubDate>Fri, 14 Jan 2022 18:45:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</guid><description>&lt;p>I setup a self hosted agent for Azure Devops this morning on Server 2012 R2 (legacy Visual Studio dependencies…) and found that I was unable to start the service. The error I received was “Error 1 Incorrect Function” when attempting to start the service in services.msc.&lt;/p>
&lt;p>I was attempting to run the agent from within my user profile downloads folder. I originally was not aware the service would be running from this directory. I thought it would copy its binary files to program files directory or programdata, like 99% of all other apps. The service installs and attempts to run itself as the “network service” authority. This account does not have permission to a user profile folder by default, and the installation script is not able to grant it permission for some reason (I didn’t investigate this further). I removed the agent, moved the installation files to the root of c:, and then reinstalled. The agent service is now able to start successfully.&lt;/p></description></item><item><title>Azure Tenant Maintenance &amp;#8211; Purge Empty Resource Groups</title><link>https://rnemeth90.github.io/posts/2022-01-14-azure-tenant-maintenance-purge-empty-resource-groups/</link><pubDate>Fri, 14 Jan 2022 18:43:35 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-azure-tenant-maintenance-purge-empty-resource-groups/</guid><description>&lt;p>This will be the first article in a series about maintaining Azure tenants and subscriptions.&lt;/p>
&lt;p>If you currently, or have ever, worked in a large Azure environment, you know how easily resource creep can occur. Resource Groups, VM disks and network interfaces, network security groups, etc. can easily fall out of sight and be forgotten about. This isn’t a big concern for resources that are free of cost, like resource groups. However, if you delete several virtual machines, the disks that were attached to those virtual machines linger, and you continue to pay the cost of storing them.&lt;/p></description></item><item><title>Exam AZ-303: Microsoft Azure Architect Technologies Study Guide</title><link>https://rnemeth90.github.io/posts/2020-12-16-exam-az-303-microsoft-azure-architect/</link><pubDate>Wed, 16 Dec 2020 14:44:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-12-16-exam-az-303-microsoft-azure-architect/</guid><description>&lt;p>&lt;span style="font-family: arial;">I recently passed the AZ-303 exam. Below are some of the resources I used to prepare for the exam. In addition to the links below, I also used Alan Rodrigues’ course on Udemy. &lt;/span>&lt;/p>
&lt;p>&lt;span style="font-family: arial;">&lt;a href="https://www.udemy.com/course/az-102-azure-administrator-certification-transition/" class="external-link" target="_blank" rel="noopener">https://www.udemy.com/course/az-102-azure-administrator-certification-transition/&lt;/a>
&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-family: arial;">The Udemy course and Microsoft Docs are enough to pass the exam. The course has some good practice exams and labs that align well with what you’ll see on the real exam regarding difficulty. I was scoring in the high 90’s on the Udemy exams. On the real exam, my score was 923. So, I think, if you comprehend the material well, and get high scores on Udemy practice exams, you’ll do well on the real exam.&lt;/span>&lt;/p></description></item><item><title>Azure AD Sync &amp;#8211; Set-MsolDirSyncEnabled : You cannot turn off Active Directory synchronization.</title><link>https://rnemeth90.github.io/posts/2020-11-26-azure-ad-sync-set-msoldirsyncenabled/</link><pubDate>Thu, 26 Nov 2020 16:31:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-26-azure-ad-sync-set-msoldirsyncenabled/</guid><description>&lt;p>I recently ran into a situation in my lab environment that required I resync all (2000+) user accounts to Azure AD. Though this sounds complex and daunting, its actually quite simple. T&lt;/p>
&lt;p>The basic steps involve disabling sync, and then removing the user objects. This can all be done with two PowerShell commands:&lt;/p>
&lt;p>1) Set-MsolDirSyncEnabled -EnableDirSync $false&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-rGK18FXw7ns/X7_WthQR0CI/AAAAAAAAyCM/gg7MsY2fcVIcWMMbvxYzPpbpPyKwgHP8ACLcBGAsYHQ/image.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image.png" alt="">&lt;/a>&lt;/p>
&lt;p>2) Get-MsolUser -All | Remove-MsolUser -force&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-miyfN7OISGo/X7_WzDCc6iI/AAAAAAAAyCQ/PtHURTTVMQ4uypzO7L1UaLfyEs0fpYGdACLcBGAsYHQ/image.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-1.png" alt="">&lt;/a>&lt;/p>
&lt;p>The account that you are currently running the commands as will not be removed.&lt;/p></description></item><item><title>Azure VM Scale Set &amp;#8211; Get Instance IP Address</title><link>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</link><pubDate>Thu, 19 Nov 2020 18:07:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</guid><description>&lt;p>If you are using VM Scale Sets in Azure, you know how important it can be to quickly obtain an instance IP address. This can of course be done using the Azure Portal. However, I am often working in a shell or VSCode, and I do not want to leave the comfort of my shell to login to the portal.&lt;/p>
&lt;p>There are a few options we have for retrieving information about a VMSS and its instances without using the Azure Portal. We can use PowerShell or the Azure CLI. Being that I am constantly flipping between Windows and Linux, I will detail both here.&lt;/p></description></item><item><title>Azure Policy &amp;#8211; Allowed Locations for Resource Deployment</title><link>https://rnemeth90.github.io/posts/2020-11-17-azure-policy-allowed-locations-for/</link><pubDate>Tue, 17 Nov 2020 17:52:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-17-azure-policy-allowed-locations-for/</guid><description>&lt;p>Azure Policy allows us to control what actions users can perform regarding creating and managing resources in Azure. We can define policies for naming standards, require that certain extensions be installed on virtual machines, audit various resources for certain configurations… the possibilities are endless.&lt;/p>
&lt;p>In this article, well focus on defining what locations users can deploy resources in. To get started, login to the Azure Portal and search for “Policy”.&lt;/p></description></item><item><title>Replicate an Azure VM Image Between Regions</title><link>https://rnemeth90.github.io/posts/2020-11-03-replicate-azure-vm-image-between-regions/</link><pubDate>Tue, 03 Nov 2020 20:15:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-03-replicate-azure-vm-image-between-regions/</guid><description>&lt;p>Let’s say you have a VM in Azure North Central. You created this VM from a custom image that you maintain in an Azure image repository. Now, what if you wanted to create that same VM in Azure South Central, and use the same reference image? A standard image repository is limited to the region that it exists in. The answer here is to create a Shared Image Library, add the image to it, and then configure the image to replicate to other Azure regions.&lt;/p></description></item><item><title>Reset GRUB/root Password for vCenter/PSC Appliance</title><link>https://rnemeth90.github.io/posts/2020-10-31-reset-grubroot-password-for-vcenterpsc/</link><pubDate>Sat, 31 Oct 2020 01:22:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-31-reset-grubroot-password-for-vcenterpsc/</guid><description>&lt;p>In Redhat/Fedora/Cent, GRUB can be protected by running the grub-md5-crypt command and pasting the outputted password hash into the grub.conf file. vSphere 6.0 password protects grub by default. If you change the root password in the VAMI, the GRUB password is changed to match. If you do not change the root password, the GRUB password is “vmware”.&lt;/p>
&lt;p>To reset the GRUB password, we need to boot into a Cent or Redhat live CD. The ISO can be obtained here: &lt;a href="https://www.centos.org/download/" class="external-link" target="_blank" rel="noopener">https://www.centos.org/download/&lt;/a>. Its best to upload the ISO to a datastore that the appliance has access to.&lt;/p></description></item><item><title>Deploy a New ADDS Forest on Server 2019 Core</title><link>https://rnemeth90.github.io/posts/2020-10-31-deploy-new-adds-forest-on-server-2019/</link><pubDate>Sat, 31 Oct 2020 01:02:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-31-deploy-new-adds-forest-on-server-2019/</guid><description>&lt;p>Prerequisites:&lt;/p>
&lt;p>Change server name and IP address
Configure time settings and NTP&lt;/p>
&lt;p>In this post we will be reviewing the basic installation of the Active Directory Domain Services role and setup of a new forest on Windows Server Core 2019.&lt;/p>
&lt;p>To get started, login to your server with administrator privileges. You will first need to type in “powershell” in the cmd prompt to start powershell. Once you do that, type in the following command to install the Active Directory Domain Services role:&lt;/p></description></item><item><title>Could not connect to VMware Directory Service via LDAP when Deploying New vCenter Appliance</title><link>https://rnemeth90.github.io/posts/2020-10-28-could-not-connect-to-vmware-directory/</link><pubDate>Wed, 28 Oct 2020 13:51:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-28-could-not-connect-to-vmware-directory/</guid><description>&lt;p>Problem:&lt;/p>
&lt;p>Deploying a brand new vCSA 6.7 appliance results in the following error during the second stage of the deployment.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h29_02.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h29_02.png" alt="">&lt;/a>&lt;span style="text-align: left;"> &lt;/span>&lt;/p>
&lt;p>Solution:&lt;/p>
&lt;p>This problem is almost always caused by DNS resolution. Once you create the appropriate A and PTR record for your appliance on a LOCAL DNS server, you should be to successfully complete the deployment. Local DNS resolution is required, you cannot use a public DNS server while installing vCenter. For example, 8.8.8.8 will not work.&lt;/p></description></item><item><title>Cisco AnyConnect &amp;#8211; VPN Establishment Capability from a Remote Desktop is Disabled</title><link>https://rnemeth90.github.io/posts/2020-10-07-cisco-anyconnect-vpn-establishment/</link><pubDate>Wed, 07 Oct 2020 13:28:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-07-cisco-anyconnect-vpn-establishment/</guid><description>&lt;p>I ran into this issue this morning when attempting to setup a VPN on a Hyper-V virtual machine. After an hour of searching the Google machine and troubleshooting, I came upon this solution.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-BYApW8vZjV8/X33B2Or4D7I/AAAAAAAAxuY/hWQwpE-fqo4xInAsx9vyUvzDJXqxe68QQCLcBGAsYHQ/image.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-16.png" alt="">&lt;/a>&lt;/p>
&lt;p>Upon installation, AnyConnect pulls down a profile from the ASA containing several settings. This profile is in xml format and is located (on a Windows machine) at %programdata%CiscoCisco AnyConnect Secure Mobility ClientProfileAnyConnectProfile.xsd.&lt;/p>
&lt;p>To resolve this issue and connect to your VPN, open this file with notepad (or any text editor, run as admin), search for the “WindowsVPNEstablishment” tag, and modify the value. The default value is “LocalUsersOnly”, you will need to change it to “AllowRemoteUsers”. Save and close the file, then restart the machine.&lt;/p></description></item><item><title>Active Directory Migration Toolkit &amp;#8211; The RPC Server is Unavailable (hr=0x800706ba)</title><link>https://rnemeth90.github.io/posts/2018-08-21-active-directory-migration-toolkit-rpc/</link><pubDate>Tue, 21 Aug 2018 17:34:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-08-21-active-directory-migration-toolkit-rpc/</guid><description>&lt;p>When migrating computer objects using the Active Directory Migration Tool, you may encounter the following error:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_09.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_09.png" alt="">&lt;/a>&lt;/p>
&lt;p>In addition, the Migration Log may show the following error:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_20.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>This is typically caused by a host-side firewall. To resolve this, deploy a GPO to disable the Windows firewall prior to migrating the computer account. I like to create a special OU for computers (I typically name it “PreMigration”) that I will move computer objects to prior to migrating them. This OU will have two policies applied. One to disable the Windows Firewall and another to start the Remote Registry service. Both are required for the computer object to successfully migrate.&lt;/p></description></item><item><title>Azure Site Recovery &amp;#8211; VMware-to-Azure: Wrong IP address discovered for VM</title><link>https://rnemeth90.github.io/posts/2018-08-21-azure-site-recovery-vmware-to-azure/</link><pubDate>Tue, 21 Aug 2018 17:26:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-08-21-azure-site-recovery-vmware-to-azure/</guid><description>&lt;p>When replicating virtual machines from VMware to Azure using Site Recovery, you may encounter an issue where the Configuration server discovers the wrong IP address for a VM. This can be caused by stale entries within the infrastructurevms MySQL table that is used by ASR to track VM attributes.&lt;/p>
&lt;p>To resolve this issue, you first need to disable replication for the VM in the Azure Portal.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-21_13h20_26.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-21_13h20_26.png" alt="">&lt;/a>&lt;/p>
&lt;p>Next, login to your ASR Configuration Server and open a CMD prompt as administrator. Browse to the bin directory for your ASR installation. For example, in my case ASR is installed on the E: partition under the following directory:&lt;/p></description></item><item><title>Azure AD Connect No-Start-Connection</title><link>https://rnemeth90.github.io/posts/2018-07-26-azure-ad-connect-no-start-connection/</link><pubDate>Thu, 26 Jul 2018 12:22:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-26-azure-ad-connect-no-start-connection/</guid><description>&lt;p>This morning, I ran into an issue with Azure AD Connect that I had never seen before. I received an email alert from Azure AD stating that Password Synchronization was not working for my forest, and the suggested fix was to restart the ADSync service on the server. I restarted the service and then forced a sync to verify it was working.&lt;/p>
&lt;p>After forcing the sync, I opened miisclient and noticed some strange errors. We sync multiple on-prem AD forests to Azure AD, and the status for one of them was “no-start-connection”. That error in itself does not seem significant to me. However, after clicking on the “failed-connection” link in the Connection Status pane, things became much more clear.&lt;/p></description></item><item><title>Azure AD Connect Health: Latest Data is not Available in Azure Portal</title><link>https://rnemeth90.github.io/posts/2018-07-18-azure-ad-connect-health-latest-data-is/</link><pubDate>Wed, 18 Jul 2018 16:38:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-18-azure-ad-connect-health-latest-data-is/</guid><description>&lt;p>I recently had to create a new Azure AD Connect server, and found that it was not able to report health status in the Azure Portal. After some troubleshooting/research, I was able to get the health status report working by registering the health agent on the server with Azure AD Health Services. Doing this involves running one PowerShell cmdlet on your AD Connect server and providing global administrator credentials.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_56.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_56.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Removing a Forest from Azure AD Connect</title><link>https://rnemeth90.github.io/posts/2018-07-13-removing-forest-from-azure-ad-connect/</link><pubDate>Fri, 13 Jul 2018 15:30:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-13-removing-forest-from-azure-ad-connect/</guid><description>&lt;p>In an organization with multiple Active Directory forests, you may want to sync objects from trusted forests. Adding trusted forests to Azure AD Sync is a simple process that I will likely cover in a future article. The focus of this post is the not-so-obvious process of removing a forest from Azure AD Connect. This can be a daunting and somewhat scary thing to do. Not fully understanding the process or having someone to guide you can leave you with thoughts like “what happens when I remove the forest from Azure AD Sync? Do on-premises objects get deleted? Are cloud objects deleted?”. I will try to answer these questions to the best of my ability and hopefully make the process simple and stress-free for you.&lt;/p></description></item><item><title>Remove Stubborn PSC or vCenter Appliance from an SSO Domain</title><link>https://rnemeth90.github.io/posts/2017-11-08-remove-stubborn-psc-or-vcenter/</link><pubDate>Wed, 08 Nov 2017 07:56:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-11-08-remove-stubborn-psc-or-vcenter/</guid><description>&lt;p>While attempting to decommission one of our vCenter sites, I ran into an issue removing one of the PSCs. This site consisted of two PSCs and one vCenter appliance. I removed the first PSC from the SSO domain successfully, and then removed the vCenter appliance. Things became a little tricky during the removal of the final PSC. This PSC did not get removed even after running the cmsso-util command. This article will detail the steps I took in decommissioning the site, as well as removing the stubborn PSC.&lt;/p></description></item><item><title>Exchange 2016 Hybrid Deploy Check: Username or Password Invalid</title><link>https://rnemeth90.github.io/posts/2017-11-07-exchange-2016-hybrid-deploy-check-username-or-password-invalid/</link><pubDate>Tue, 07 Nov 2017 13:30:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-11-07-exchange-2016-hybrid-deploy-check-username-or-password-invalid/</guid><description>&lt;p>These days, it seems every Microsoft product comes with its own unique set of head scratchers. Microsoft Exchange Server is no exception to this. I was installing Exchange 2016 earlier today, to be used as a hybrid configuration server for Office 365 (no local mailboxes). I downloaded the self depackaging executable from Microsoft, and attempted to install it. If you currently have a hybrid configuration (which we did, with Exchange 2010), the Exchange 2016 installer will detect this and run some tests to verify that the Office 365 tenant is ready for Exchange 2016 (more info here: &lt;a href="https://technet.microsoft.com/en-us/library/ms.exch.setup.hybridconfigurationstatuspage%28v=exchg.160%29.aspx" class="external-link" target="_blank" rel="noopener">https://technet.microsoft.com/en-us/library/ms.exch.setup.hybridconfigurationstatuspage(v=exchg.160).aspx&lt;/a>). You’ll be prompted for Office 365 credentials (the user must have the Organization Management role). Seems simple enough, right? Wrong.&lt;/p></description></item><item><title>Migrate Windows Deployment Services to New Server</title><link>https://rnemeth90.github.io/posts/2017-06-27-migrate-windows-deployment-services-to-new-server/</link><pubDate>Tue, 27 Jun 2017 09:21:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-27-migrate-windows-deployment-services-to-new-server/</guid><description>&lt;p>We have been making a great effort to move all of our internal services to Windows Server 2016. This past week, it was WDS’ turn to get migrated. Migrating this role is extremely simple. Here are the steps that I took:&lt;/p>
&lt;ol>
&lt;li>Create new server and install WDS role.&lt;/li>
&lt;li>Stop WDS Service on old server&lt;/li>
&lt;li>Stop WDS Service on new server&lt;/li>
&lt;li>Use my “Copy-Files” PowerShell script (Available Here: &lt;a href="https://gallery.technet.microsoft.com/scriptcenter/Copy-Files-17cba2ae" class="external-link" target="_blank" rel="noopener">Copy-Files.ps1&lt;/a>) to copy RemoteInstall Share to new server&lt;/li>
&lt;li>Start WDS Service on new Server&lt;/li>
&lt;li>Shutdown old WDS Server completely&lt;/li>
&lt;li>Update option 66/67 in DHCP scopes to reflect new WDS Server&lt;/li>
&lt;li>Update any appropriate DNS records&lt;/li>
&lt;/ol>
&lt;p>Note:&lt;/p></description></item><item><title>New Script: BulkAdd-SpamFilterWhitelist.ps1</title><link>https://rnemeth90.github.io/posts/2017-06-26-new-script-bulkadd-spamfilterwhitelist/</link><pubDate>Mon, 26 Jun 2017 22:16:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-26-new-script-bulkadd-spamfilterwhitelist/</guid><description>&lt;p>This script is capable of adding a list of domains to an Exchange Online Spam Filter policy. It can be downloaded from TechNet or Github.&lt;/p>
&lt;p>&lt;a href="https://github.com/rnemeth90/PowerShell/blob/master/BulkAdd-SpamFilterWhitelist.ps1" class="external-link" target="_blank" rel="noopener">Github&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://gallery.technet.microsoft.com/BulkAdd-SpamFilterWhitelist-2d2b596a" class="external-link" target="_blank" rel="noopener">TechNet&lt;/a>&lt;/p></description></item><item><title>Windows 8 File History</title><link>https://rnemeth90.github.io/posts/2017-06-22-windows-8-file-history-windows-8-file-history/</link><pubDate>Thu, 22 Jun 2017 22:42:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-22-windows-8-file-history-windows-8-file-history/</guid><description>&lt;p>File history in Windows 8 allows users to automatically “backup” files that are in their libraries, contacts, favorites, Skydrive, and on the desktop. If the files are lost, they can be quickly restored. You can also restore a file from a specific point in time, being that File History creates a complete history of your files over time. You will need a separate drive other than the one you have Windows 8 installed on to use File History. To begin using it, connect an external drive and search for File History on the Start Screen:&lt;/p></description></item><item><title>How to Permanently Remove Office 365 Users</title><link>https://rnemeth90.github.io/posts/2017-06-20-how-to-permanently-remove-office-365-users/</link><pubDate>Tue, 20 Jun 2017 18:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-20-how-to-permanently-remove-office-365-users/</guid><description>&lt;p>After deleting a user in Office 365, their account is moved to a ‘recycle bin’ for 30 days. This allows the user account to be easily recovered. This can often cause issues when attempting to recreate a mailbox while a hybrid configuration is in place.&lt;/p>
&lt;p>To permanently delete the user within Office 365, first delete the user in the Office 365 Admin Portal or using Powershell. Then, connect to your Azure Active Directory environment with Powershell using the “Connect-MsolService” cmdlet.&lt;/p></description></item><item><title>Access is Denied When Attempting to Delete a Dynamic Distribution Group</title><link>https://rnemeth90.github.io/posts/2017-06-12-access-is-denied-when-attempting-to-delete-a-dynamic-distribution-group/</link><pubDate>Mon, 12 Jun 2017 13:41:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-12-access-is-denied-when-attempting-to-delete-a-dynamic-distribution-group/</guid><description>&lt;p>You may receive the error below when attempting to delete a dynamic distribution group.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h29_20.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h29_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>To resolve this, open ADUC and show advanced features (Click View &amp;gt; Advanced Features). Then find the object for the dynamic distribution group and open the properties window. Browse to the “Object” tab and uncheck the “Protect object from accidental deletion” box. Wait for ADDS to replicate or force replication yourself.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h34_20.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h34_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>Go back to the ECP and you should be able to delete the group.&lt;/p></description></item><item><title>Running vSphere in VMware Workstation 12</title><link>https://rnemeth90.github.io/posts/2017-05-29-running-vsphere-in-vmware-workstation-12/</link><pubDate>Mon, 29 May 2017 01:09:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-05-29-running-vsphere-in-vmware-workstation-12/</guid><description>&lt;p>In this post I’ll be walking through how to run a vSphere lab in VMware Workstation. I recently decided to obtain VCP6-DCV. Rather than driving up my electric bill like I’ve done in the past using physical servers, I’m attempting to run the entire lab on my workstation and a Synology NAS.&lt;/p>
&lt;p>If you’ve ever installed ESXi, installing it in Workstation will be a familiar process for you. VMware tools is included in the installation disc, which makes installing ESXi in Workstation dramatically easier than it used to be. . The process is very simple, so I won’t be going through those steps here unless someone asks me to in the comments. I also will not be going through the process of installing Windows Server or configuring a domain controller/DNS/DHCP, as I am sure you have done so in the past if you are reading this.&lt;/p></description></item><item><title>WSUS: Update Files Not Downloading (Content File Download Failed)</title><link>https://rnemeth90.github.io/posts/2016-11-18-wsus-update-files-not-downloading/</link><pubDate>Fri, 18 Nov 2016 15:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-18-wsus-update-files-not-downloading/</guid><description>&lt;p>This article will discuss an issue regarding WSUS failing to download updates from Microsoft Update servers. You may notice that the home page of your WSUS console states that it has downloaded 0MB of updates:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png" alt="">&lt;/a>&lt;/p>
&lt;p>You may also see this event (or similar) in the Event Log.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png" alt="">&lt;/a>&lt;/p>
&lt;p>This problem is caused by not specifying a valid path when assigning the WSUS content drive when first installing the role. The first time you load the WSUS console after installing the role, you will be prompted to specify the path to store Windows Update files. WSUS does not like to have its content directory be the root of a partition. For example, if I were to specify “e:” as the path for the Windows Update content, the wizard would give you an error message stating that the path is not valid. However, it doesn’t prompt you to re-enter the path if you click close. The WSUS console opens immediately after and that invalid path is where WSUS will try to store your update files. This is and has been a known bug for a while and needs to be addressed by Microsoft. Evidence of the invalid path can be found in the registry under:&lt;/p></description></item><item><title>WSUS: An error occurred trying to connect the WSUS server</title><link>https://rnemeth90.github.io/posts/2016-11-10-wsus-an-error-occurred-trying-to-connect-the-wsus-server/</link><pubDate>Thu, 10 Nov 2016 15:18:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-10-wsus-an-error-occurred-trying-to-connect-the-wsus-server/</guid><description>&lt;p>Ran into this error message when configuring a new WSUS server:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_00.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_00.png" alt="">&lt;/a>&lt;/p>
&lt;p>Restarted the WSUS, WID, and IIS services to no avail. I even rebooted the server. The WSUS console would work for a short period of time, and then would randomly stop working.&lt;/p>
&lt;p>I found that the WSUS app pool in IIS was being disabled anytime new clients connected to the server. I believe this was because the app pool was running out of usable memory.&lt;/p></description></item><item><title>WDS Service: The Service did not respond in a timely fashion</title><link>https://rnemeth90.github.io/posts/2016-11-10-wds-service-the-service-did-not-respond-in-a-timely-fashion/</link><pubDate>Thu, 10 Nov 2016 02:19:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-10-wds-service-the-service-did-not-respond-in-a-timely-fashion/</guid><description>&lt;p>This was a new one for me. Usually WDS is rock solid and it just works.&lt;/p>
&lt;p>Anyway, I was getting ready to deploy some servers in my lab and found that I couldn’t get WDS to start on my deployment server. I got this error message when trying to start the service:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_29.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_29.png" alt="">&lt;/a>&lt;/p>
&lt;p>I then tried to start the service from the Services console and got this error message:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_42.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_42.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Script to Move All Disabled AD Objects to a Specified OU</title><link>https://rnemeth90.github.io/posts/2016-10-06-script-to-move-all-disabled-ad-objects-to-a-specified-ou/</link><pubDate>Thu, 06 Oct 2016 03:03:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-10-06-script-to-move-all-disabled-ad-objects-to-a-specified-ou/</guid><description>&lt;p>The title says it all. This script will move all disabled AD objects to a specified OU. This script accepts parameters that will allow you to specify whether you want to move Users or Computers and the destination OU. It also accepts a “test mode” parameter that will run the script and output the results, without actually modifying Active Directory.&lt;/p>
&lt;p>This is revision 1 of the script. There are still several improvements I would like to make, including better error handling and recovery.&lt;/p></description></item><item><title>Script for Setting the License for Multiple Office 365 User Accounts</title><link>https://rnemeth90.github.io/posts/2016-04-11-script-for-setting-the-license-for-multiple-office-365-user-accounts/</link><pubDate>Mon, 11 Apr 2016 01:25:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-04-11-script-for-setting-the-license-for-multiple-office-365-user-accounts/</guid><description>&lt;p>A script for setting the Office 365 license for multiple users. Requires a CSV file named users.csv. This file must in the same directory as the script. The CSV file must contain three columns. The title of the columns should be UPN, UsageLocation, and SKU.&lt;/p>
&lt;p>&lt;a href="https://drive.google.com/open?id=0B2K6VOnt6zeXZ2Z6OFZhZVoyenc" class="external-link" target="_blank" rel="noopener">BulkSet-MsolUserLicense.ps1&lt;/a>&lt;/p></description></item><item><title>The User Profile Service service failed the logon</title><link>https://rnemeth90.github.io/posts/2015-12-30-the-user-profile-service-service-failed-the-logon/</link><pubDate>Wed, 30 Dec 2015 10:38:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-12-30-the-user-profile-service-service-failed-the-logon/</guid><description>&lt;p>One of my clients had a really strange issue the other day. He has a domain admin account in his domain and was not able to login to a server that I recently built. The server was an Exchange 2013 box, and was used in Coexistence mode to migrate his company from an Exchange 2007 box.&lt;/p>
&lt;p>He was getting this error message when attempting to login:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h38_53.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h38_53.png" alt="">&lt;/a>&lt;/p>
&lt;p>This is a classic error message that I’m sure most technicians have seen before. Usually the resolution is to go into the registry and rename the user profile key to have a “.bak” extension and then do some other magic. However, this time, that was not the case. I looked in the registry and didn’t even see a reg key for his profile. I then looked in the c:users folder and didn’t see a folder for his profile. Strange…&lt;/p></description></item><item><title>Azure AD Connect Password Sync &amp;#8211; Disabled and Grayed Out</title><link>https://rnemeth90.github.io/posts/2015-10-15-azure-ad-connect-password-sync-disabled/</link><pubDate>Thu, 15 Oct 2015 10:18:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-10-15-azure-ad-connect-password-sync-disabled/</guid><description>&lt;p>Ran into a problem earlier with the new Azure AD Connect Wizard. We had configured the wizard and synced around 500 AD accounts. However, password sync was not working. I opened the wizard to confirm the configuration and found that “Password Hash Synchronization” was disabled. It was greyed out and could not be enabled.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_08h43_18.jpg" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_08h43_18.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>I called Microsoft and worked for a couple hours with a technician to resolve the issue. Thought I should post the resolution here in case anyone else encounters this.&lt;/p></description></item><item><title>Finding All Mailboxes with a Forwarding Address in Exchange 2003</title><link>https://rnemeth90.github.io/posts/2015-09-07-finding-all-mailboxes-with-a-forwarding-address-in-exchange-2003/</link><pubDate>Mon, 07 Sep 2015 23:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-09-07-finding-all-mailboxes-with-a-forwarding-address-in-exchange-2003/</guid><description>&lt;p>Believe it or not, the MSP I work for still has a client who is using Exchange 2003 as their primary email service. Despite several attempts at convincing them of the power of Office 365, they refuse to migrate. Last week the CFO contacted me and requested we provide them with a report of all users who have their email forwarded to another mailbox. “Ok, no problem.” I said helpfully as the client informed me of their request (at the time I didn’t even think about them having Exchange 2003…). I figured I would just connect to their server and do some quick PowerShell magic, and that would be it. Quick and painless, right? Wrong.&lt;/p></description></item><item><title>Script for Querying All AD Computers Time Source</title><link>https://rnemeth90.github.io/posts/2015-09-01-script-for-querying-all-ad-computers-time-source/</link><pubDate>Tue, 01 Sep 2015 21:05:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-09-01-script-for-querying-all-ad-computers-time-source/</guid><description>&lt;p>This script will iterate through all computers in Active Directory and return the configured time server for each computer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&amp;lt;#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> .&lt;/span>&lt;span class="sd">SYNOPSIS&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Get time source for all computers in domain
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> .&lt;/span>&lt;span class="sd">EXAMPLE&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Get-TimeSource
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> .&lt;/span>&lt;span class="sd">NOTES&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Author: Ryan Nemeth - RyanNemeth@live.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Site: http://www.geekyryan.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> .&lt;/span>&lt;span class="sd">LINK&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> http://www.geekyryan.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> .&lt;/span>&lt;span class="sd">DESCRIPTION&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> This function will iterate through all computers/servers in a domain and return the time source
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> for each.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">#&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Write-Host&lt;/span> &lt;span class="n">-foregroundcolor&lt;/span> &lt;span class="n">Red&lt;/span> &lt;span class="n">-BackgroundColor&lt;/span> &lt;span class="n">black&lt;/span> &lt;span class="s2">&amp;#34;This script must be run on a domain controller and requires that the AD Powershell module be installed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$module&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Get-Module&lt;/span> &lt;span class="n">-ListAvailable&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Select-Object&lt;/span> &lt;span class="n">-ExpandProperty&lt;/span> &lt;span class="n">Name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$module&lt;/span> &lt;span class="o">-notcontains&lt;/span> &lt;span class="s2">&amp;#34;ActiveDirectory&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="n">-foregroundcolor&lt;/span> &lt;span class="n">red&lt;/span> &lt;span class="n">-backgroundcolor&lt;/span> &lt;span class="n">black&lt;/span> &lt;span class="s2">&amp;#34;***Active Directory Powershell Module Not Found***&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="n">-foregroundcolor&lt;/span> &lt;span class="n">yellow&lt;/span> &lt;span class="s2">&amp;#34;Found Active Directory Powershell Module. Importing...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Import-Module&lt;/span> &lt;span class="n">ActiveDirectory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$computers&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">get-adcomputer&lt;/span> &lt;span class="n">-filter&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Select-Object&lt;/span> &lt;span class="n">-ExpandProperty&lt;/span> &lt;span class="n">Name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">foreach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$computer&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$computers&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$tm_source&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">w32tm&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">query&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">computer&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="nv">$computer&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">source&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">write-host&lt;/span> &lt;span class="s2">&amp;#34;The time source for&amp;#34;&lt;/span> &lt;span class="nv">$computer&lt;/span> &lt;span class="s2">&amp;#34;is&amp;#34;&lt;/span> &lt;span class="nv">$tm_source&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/rnemeth90/PowerShell/blob/master/NTP/Get-TimeSource.ps1" alt="">&lt;/p></description></item><item><title>Error When Reinstalling DirSync</title><link>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</link><pubDate>Thu, 13 Aug 2015 18:59:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</guid><description>&lt;p>Today is just not my day! After a failed attempt at installing/configuring DirSync, I removed it and tried to install and configure it again. This time did not prove any more successful. I was getting this error midway through the install process:&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/1.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/1.png" alt="">&lt;/a>&lt;/p>
&lt;p>I was able to figure this out after a little while and wanted to sure what I learned. If you are seeing this error message after removing DirSync and trying to reinstall, here’s what you need to do:&lt;/p></description></item><item><title>Failed to Mount Exchange 2010 Database</title><link>https://rnemeth90.github.io/posts/2015-08-12-failed-to-mount-exchange-2010-database/</link><pubDate>Wed, 12 Aug 2015 12:59:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-08-12-failed-to-mount-exchange-2010-database/</guid><description>&lt;p>Recently, one of my users’ came to me and said he was missing two months worth of email. This was just after migrating to Exchange Online. We were using Exchange 2010 with System Center DPM for backups.&lt;/p>
&lt;p>I restored the database that the users’ mailbox was on from a backup then copied it over to the Exchange server from the network share I restored it to. All was going well, until I tried to mount the darn thing.&lt;/p></description></item><item><title>Ping Sweeping with FPing</title><link>https://rnemeth90.github.io/posts/2015-03-09-ping-sweeping-with-fping/</link><pubDate>Mon, 09 Mar 2015 01:08:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-03-09-ping-sweeping-with-fping/</guid><description>&lt;p>I generally use NMAP for any type of host discovery, but recently started experimenting with FPing. One thing I found is that, when performing a ping sweep, not only do I see the hosts that replied to the ping, but FPing also sends any unreachable IP addresses to stdout (which is super annoying and ugly if you ask me…).&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/03/2015-03-08_21h04_50.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/03/2015-03-08_21h04_50.png" alt="">&lt;/a>&lt;/p>
&lt;p>Anyway, after a bit of research, I found a nifty way to suppress these messages. Linux allows us to redirect all error messages to /dev/null. So instead of just running the vanilla fping -a -g…. you would run the program and output all error messages /dev/null, like so:&lt;/p></description></item><item><title>Powershell: SID to Username</title><link>https://rnemeth90.github.io/posts/2014-12-08-powershell-sid-to-username-powershell-sid-to-username/</link><pubDate>Mon, 08 Dec 2014 13:43:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-powershell-sid-to-username-powershell-sid-to-username/</guid><description>&lt;p>This is a simple script to convert a SID to a username&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Returns a username based on a SID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Author: Ryan Nemeth&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Date: 12/2/2014&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$SID&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">read-host&lt;/span> &lt;span class="err">“&lt;/span>&lt;span class="n">Please&lt;/span> &lt;span class="n">enter&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">SID&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="err">”&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$object&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">New-Object&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Security&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Principal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">SecurityIdentifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$SID&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$User&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nv">$object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Translate&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">\[&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Security&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Principal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">NTAccount&lt;/span>&lt;span class="p">\])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">write-host&lt;/span> &lt;span class="err">“&lt;/span>&lt;span class="n">The&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="n">is&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="err">”&lt;/span> &lt;span class="nv">$User&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Value&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>DHCP Address Negotiation Process</title><link>https://rnemeth90.github.io/posts/2014-12-08-dhcp-address-negotiation-process/</link><pubDate>Mon, 08 Dec 2014 03:08:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-dhcp-address-negotiation-process/</guid><description>&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/12/2014-12-07_22h07_33.png" class="external-link" target="_blank" rel="noopener">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/12/2014-12-07_22h07_33.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Unlock a Domain User from CMD Line</title><link>https://rnemeth90.github.io/posts/2014-12-08-unlock-domain-user-from-cmd-line/</link><pubDate>Mon, 08 Dec 2014 02:11:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-unlock-domain-user-from-cmd-line/</guid><description>&lt;p>To unlock a domain user from the command line, use this command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">net user &lt;span class="p">&amp;amp;&lt;/span>lt&lt;span class="p">;&lt;/span>username&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> /domain /active:yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This can also be done using Powershell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Unlock-ADAccount&lt;/span> &lt;span class="n">-identity&lt;/span> &lt;span class="err">“&lt;/span>&lt;span class="n">CN&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">John&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">OU&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">myUsers&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">DC&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">myDomain&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">DC&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="err">”&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>The Case of Transitive Trusts and Dropped RPC Connections</title><link>https://rnemeth90.github.io/posts/2014-11-25-the-case-of-transitive-trusts-and-dropped-rpc-connections/</link><pubDate>Tue, 25 Nov 2014 01:27:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-25-the-case-of-transitive-trusts-and-dropped-rpc-connections/</guid><description>&lt;p>I was at a client earlier this morning, working to get a transitive forest trust setup between their two domains. Setting up the trust on ServerA to DomainB went without issue. However, when trying to create the trust between ServerB and DomainA, I received this error: The secure channel reset on Active Directory Domain Controller (Your domain controller) of domain (Your domain) to domain (your other domain) failed with error: RPC server is unavailable.&lt;/p></description></item><item><title>Creating Applocker Policies</title><link>https://rnemeth90.github.io/posts/2014-11-17-creating-applocker-policies/</link><pubDate>Mon, 17 Nov 2014 01:40:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-17-creating-applocker-policies/</guid><description>&lt;p>Application Control Policies can be used to restrict what programs a user is allowed to run. They can be created at the local Group Policy level or the Domain GPO level. There are 4 different types of Applocker RULES that you can implement, depending on what type of executable you want to control access to.&lt;/p>
&lt;p>Executable Rules – EXE’s, COM’s, etc.&lt;/p>
&lt;p>Script Rules – batch files, VB scripts, etc.&lt;/p>
&lt;p>AppX Rules – AppX Packages (Windows 8.1/Server 2012 R2 Metro Interface programs)&lt;/p></description></item><item><title>TCP/IP Network Fundamentals</title><link>https://rnemeth90.github.io/posts/2014-11-16-tcpip-network-fundamentals/</link><pubDate>Sun, 16 Nov 2014 21:20:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-16-tcpip-network-fundamentals/</guid><description>&lt;p>Going over the basics of network fundamentals and all the models and ideas behind them. The most pushed idea is the OSI networking model which consists of 7 layers, all of which deal with a certain aspect of the networking model.&lt;/p>
&lt;p>A P S T N D P&lt;/p>
&lt;p>From the top down this represents the following&lt;/p>
&lt;p>Layer 7: Application – This layer is the channel between software and external requests. For example, a web server would work with this layer to process HTTP requests.&lt;/p></description></item><item><title>BranchCache</title><link>https://rnemeth90.github.io/posts/2014-11-16-branchcache/</link><pubDate>Sun, 16 Nov 2014 21:16:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-16-branchcache/</guid><description>&lt;p>Branchcache is a technology unique to Windows 7 and Windows Server 2008 R2. It provides faster connection to shared files across wide area networks. Branchcache works by caching content hosted on remote servers on a local caching server in the LAN. When a client queries for data on a remote server, it first looks in the local caching server. If the data is not found there, the remote server is accessed and transfer’s the data to the local caching server, where it is then accessed by the client who originally made the request. That way, all future client requests will not have to go across the wide area network, rather opting to access the local caching server until the data changes.&lt;/p></description></item><item><title>File History</title><link>https://rnemeth90.github.io/posts/2014-11-15-file-history/</link><pubDate>Sat, 15 Nov 2014 20:02:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-15-file-history/</guid><description>&lt;p>File history in Windows 8 allows users to automatically “backup” files that are in their libraries, contacts, favorites, Skydrive, and on the desktop. If the files are lost, they can be quickly restored. You can also restore a file from a specific point in time, being that File History creates a complete history of your files over time. You will need a separate drive other than the one you have Windows 8 installed on to use File History. To begin using it, connect an external drive and search for File History on the Start Screen:&lt;/p></description></item><item><title>User Account Control</title><link>https://rnemeth90.github.io/posts/2012-11-15-user-account-control-copy/</link><pubDate>Thu, 15 Nov 2012 16:01:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2012-11-15-user-account-control-copy/</guid><description>&lt;p>Many people rarely pay close attention to those pesky User Account Control prompts that pop up when attempting to run a program as an administrator. When a user logs into her account, she is assigned a security token based on the level of access that she has (basic user or admin). This token is what defines what programs are allowed to do. Using this concept, the users session is incapable of making changes that would affect the entire system.&lt;/p></description></item><item><title>User Account Control</title><link>https://rnemeth90.github.io/posts/2012-11-15-user-account-control/</link><pubDate>Thu, 15 Nov 2012 16:01:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2012-11-15-user-account-control/</guid><description>&lt;p>Many people rarely pay close attention to those pesky User Account Control prompts that pop up when attempting to run a program as an administrator. When a user logs into her account, she is assigned a security token based on the level of access that she has (basic user or admin). This token is what defines what programs are allowed to do. Using this concept, the users session is incapable of making changes that would affect the entire system.&lt;/p></description></item></channel></rss>