<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GeekyRyan</title><link>https://rnemeth90.github.io/</link><description>GeekyRyan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 12 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Update Azure Devops SPN Secret</title><link>https://rnemeth90.github.io/posts/2022-09-12-update-azure-devops-spn-secret/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-09-12-update-azure-devops-spn-secret/</guid><description>&lt;p>If you need to update the secret for a service principal in Azure Devops, prior to it expiring, you may be surprised to find that this cannot be done via the Azure Portal.&lt;/p>
&lt;p>In this article, I&amp;rsquo;ll show you two methods for updating a secret for a service principal prior to expiration.&lt;/p>
&lt;h1 id="update-the-secret-via-the-azure-devops-portal" >Update the secret via the Azure Devops Portal:
&lt;span>
&lt;a href="#update-the-secret-via-the-azure-devops-portal">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;ul>
&lt;li>Go to &amp;ldquo;Service Connections&amp;rdquo; in the Azure Devops portal&lt;/li>
&lt;li>Find the SPN you want to update, then click &amp;ldquo;Manage Service Principal&amp;rdquo;&lt;/li>
&lt;li>Then on the service principal page, click Certificates &amp;amp; Secrets&lt;/li>
&lt;li>Create a &amp;ldquo;New Client Secret&amp;rdquo;, take note of the value&lt;/li>
&lt;li>Delete the &amp;lsquo;old&amp;rsquo; secret&lt;/li>
&lt;li>Return to the Service Connection in the Azure Devops portal&lt;/li>
&lt;li>Click Edit - click the verify button. It should tell you the client certificate has expired&lt;/li>
&lt;li>Now you need to make an arbitrary change and save it. I just type a character in the optional description and save.&lt;/li>
&lt;li>Now edit again and click verify, it will now pick up the new client secret and all is happy.&lt;/li>
&lt;li>You can now remove whatever you added to the description.&lt;/li>
&lt;/ul></description></item><item><title>Use ‚Äúreplace‚Äù in go.mod to Point to a Local Module</title><link>https://rnemeth90.github.io/posts/2022-09-06-go-mod-replace-copy/</link><pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-09-06-go-mod-replace-copy/</guid><description>&lt;h1 id="if-you-want-to-the-local-version-of-a-dependency-in-go-rather-than-one-in-a-remote-repository-use-the-replace-keyword" >&amp;laquo;&amp;laquo;&amp;laquo;&amp;lt; HEAD
If you want to the local version of a dependency in Go rather than one in a remote repository, use the &lt;strong>replace&lt;/strong> keyword.
&lt;span>
&lt;a href="#if-you-want-to-the-local-version-of-a-dependency-in-go-rather-than-one-in-a-remote-repository-use-the-replace-keyword">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>If you want to the local version of a dependency in Go rather than one in a remote repository, use the &lt;em>replace&lt;/em> keyword.&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>81523e22c9593c19cae2a637126f78b89f76459e&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>The replace line goes above your require statements, like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> module github.com/rnemeth90/foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> replace github.com/rnemeth90/bar &lt;span style="color:#f92672">=&lt;/span>&amp;gt; /Users/rnemeth90/Projects/bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> require &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> github.com/rnemeth90/bar v1.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="now-when-you-compile-this-module-go-build-or-go-install-it-will-use-your-local-code-rather-than-the-remote-dependency" >&amp;laquo;&amp;laquo;&amp;laquo;&amp;lt; HEAD
Now when you compile this module &lt;strong>go build&lt;/strong> or &lt;strong>go install&lt;/strong>, it will use your local code rather than the remote dependency.
&lt;span>
&lt;a href="#now-when-you-compile-this-module-go-build-or-go-install-it-will-use-your-local-code-rather-than-the-remote-dependency">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Now when you compile this module ~go build~ or ~go install~, it will use your local code rather than the remote dependency.&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>81523e22c9593c19cae2a637126f78b89f76459e&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>According to the docs, you do need to make sure that the code you‚Äôre pointing to also has a &lt;strong>go.mod&lt;/strong> file:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: if the right-hand side of a &lt;code>replace&lt;/code> directive is a filesystem path, then the target must have a &lt;code>go.mod&lt;/code> file at that location. If the &lt;code>go.mod&lt;/code> file is not present, you can create one with &lt;code>go mod init&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://github.com/golang/go/wiki/Modules#when-should-i-use-the-replace-directive">https://github.com/golang/go/wiki/Modules#when-should-i-use-the-replace-directive&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="you-can-also-create-this-line-from-the-command-line-using-the-go-mod-edit-command" >&amp;laquo;&amp;laquo;&amp;laquo;&amp;lt; HEAD
You can also create this line from the command line using the &lt;strong>go mod edit&lt;/strong> command.
&lt;span>
&lt;a href="#you-can-also-create-this-line-from-the-command-line-using-the-go-mod-edit-command">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>You can also create this line from the command line using the &lt;strong>go mod edit&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;blockquote>
&lt;p>81523e22c9593c19cae2a637126f78b89f76459e&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;/blockquote>
&lt;pre>&lt;code>$ go mod edit -replace github.com/rnemeth90/bar=/Users/rnemeth90/Projects/bar
&lt;/code>&lt;/pre>
&lt;p>Following the &lt;strong>-replace&lt;/strong> is first what you want to replace, then an equals sign, then what you‚Äôre replacing it with.&lt;/p>
&lt;p>Hopefully this helps someone who was stuck with this like me üôÇ&lt;/p></description></item><item><title>Powershell for Devops - Querying REST APIs with Powershell</title><link>https://rnemeth90.github.io/posts/2022-08-04-querying-rest-with-powershell/</link><pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-08-04-querying-rest-with-powershell/</guid><description>&lt;p>This will be a short post on querying REST APIs with Powershell.&lt;/p>
&lt;p>It&amp;rsquo;s hard to argue that REST APIs are the predominant technology for interacting
with networked services. They provide a gateway for interacting with a 3rd party (or self-hosted)
product without having to go through the exercise of a more complicated integration. REST APIs communicate
in a common format, typically JSON. However, most will allow us to choose the response format by specifying an
option in the &amp;lsquo;Accept&amp;rsquo; header. Most languages provide a native method for interacting with
REST APIs. This objective for this post is to show you how simple this is with Powershell.&lt;/p>
&lt;p>To get started, we&amp;rsquo;ll need a public API to interact with. I&amp;rsquo;m going to use &lt;a href="https://icanhazdadjoke.com/">https://icanhazdadjoke.com/&lt;/a>, because
there is no authentication and no rate-limiting (two concepts we will cover in another post).&lt;/p>
&lt;p>Calling the API is extremely simple:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>$url = &lt;span style="color:#e6db74">&amp;#34;https://icanhazdadjoke.com/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Invoke-RestMethod -Uri $url -Method Get
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, this results in the content being returned as plain text. This isn&amp;rsquo;t ideal.&lt;/p>
&lt;p>Let&amp;rsquo;s pass the &amp;lsquo;Accept&amp;rsquo; header to tell the API the format we are expecting to be returned:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>$url = &lt;span style="color:#e6db74">&amp;#34;https://icanhazdadjoke.com/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$headers = @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Accept&amp;#39;&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;application/json&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Invoke-RestMethod -Uri $url -Method Get -Headers $headers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>[15&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>04&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>34] C:\..\..\rnemeth90.github.io on &lt;span style="color:#960050;background-color:#1e0010">ÓÇ†&lt;/span>main &lt;span style="color:#960050;background-color:#1e0010">ÔÖä&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">ÔÅÑ&lt;/span> +1 &lt;span style="color:#960050;background-color:#1e0010">‚ùØ&lt;/span> Invoke-RestMethod -Uri $url -Method Get -Headers $headers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id joke status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-- ---- ------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3LmyXvsPfqc I don&lt;span style="color:#e6db74">&amp;#39;t trust stairs. They&amp;#39;&lt;/span>re always up to something. 200
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That looks a little better. For those of you familiar with Powershell, the output above probably
looks completely normal. But for those not-so-familiar with Powershell, or those expecting
more of a &amp;lsquo;json-esk&amp;rsquo; output, this may look a bit&amp;hellip; weird.&lt;/p>
&lt;p>Powershell is an object oriented language. &lt;strong>Everything is an object&lt;/strong> in Powershell, even the response
of this request. What you see in the output is simply the properties of the object.&lt;/p>
&lt;p>Luckily Powershell provides us with a cmdlet to convert an object into json (aptly named: ConvertTo-Json). We can use it like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>$url = &lt;span style="color:#e6db74">&amp;#34;https://icanhazdadjoke.com/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$headers = @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Accept&amp;#39;&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;application/json&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Invoke-RestMethod -Uri $url -Method Get -Headers $headers | ConvertTo-Json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here we are piping the output from Invoke-RestMethod to ConvertTo-Json. Pretty neat!&lt;/p>
&lt;p>Output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>[15&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>04&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>35] C:\..\..\rnemeth90.github.io on &lt;span style="color:#960050;background-color:#1e0010">ÓÇ†&lt;/span>main &lt;span style="color:#960050;background-color:#1e0010">ÔÖä&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">ÔÅÑ&lt;/span> +1 &lt;span style="color:#960050;background-color:#1e0010">‚ùØ&lt;/span> Invoke-RestMethod -Uri $url -Method Get -Headers $headers | Convertto-json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;AAdFBXnGlyd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;joke&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;If you walk into a forest and cut down a tree, but the tree doesn&amp;#39;t understand why you cut it down, do you think it&amp;#39;s stumped?&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;status&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> 200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, that looks more normal.&lt;/p>
&lt;p>There is much more we can do with Invoke-RestMethod. The &amp;lsquo;Method&amp;rsquo; parameter of this cmdlet accepts any of the common
HTTP methods (GET, PUT, PATCH, DELETE, POST, HEAD). You can also specify other headers and a body (using the -body parameter).&lt;/p>
&lt;p>Both of these parameters accept dictionaries:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>$url = &lt;span style="color:#e6db74">&amp;#34;https://icanhazdadjoke.com/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$headers = @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Accept&amp;#39;&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;application/json&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Host&amp;#39;&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;MyServer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$body = @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Eat&amp;#39;&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;Pizza&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Invoke-RestMethod -Uri $url -Method Get -Headers $headers -Body $body | ConvertTo-Json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unfortunately I won&amp;rsquo;t be able to show the other HTTP methods, as this API only supports GET requests. So that&amp;rsquo;s all for now.&lt;/p></description></item><item><title>Reading Json Files with Go</title><link>https://rnemeth90.github.io/posts/2022-07-21-reading-json-files-with-go/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-07-21-reading-json-files-with-go/</guid><description>&lt;p>JSON is a widely used format for representing structured data. Developers like it because it is easy to read, most common languages have a library for interacting
with it, and most public APIs accept JSON in HTTP requests.&lt;/p>
&lt;p>In this post, we&amp;rsquo;ll look at parsing a JSON file using Go! We will be using the io/ioutil package to open a json file on local disk, and encoding/json to parse the
JSON data within the file into a memory structure.&lt;/p>
&lt;p>Let&amp;rsquo;s assume we have the following JSON data representing an employee:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;firstName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Steve&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;lastName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Rogers&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;alias&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Captain America&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Department&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Avengers&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We need a way of representing this data in memory when decoding it from JSON. For this, we will need to create a struct:&lt;/p>
&lt;p>We will build up our go module as we progress through the article&lt;/p>
&lt;p>Let&amp;rsquo;s start:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// main.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;encoding/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;io/ioutil&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Hero represents an hero
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ALL fields must be exportable! Otherwise the JSON parsing will fail.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Hero&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Id&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">FirstName&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LastName&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Alias&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Group&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Here we set the log prefix. When reading stack traces, this makes it easier to know
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// where a failure occurred.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">SetPrefix&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;main(): &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// We first need to load the JSON file into memory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">ioutil&lt;/span>.&lt;span style="color:#a6e22e">ReadFile&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./heros.json&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error opening the file: &amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Now we parse the JSON data into a memory structure. We know our JSON file will have more than one hero object,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// so we&amp;#39;ll use make() to create a []Hero slice. Since go is a pass-by-value language, we will then use the address-of
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// operator (&amp;amp;) to unmarshal our json data into the heros slice
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">heros&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make([]&lt;span style="color:#a6e22e">Hero&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">json&lt;/span>.&lt;span style="color:#a6e22e">Unmarshal&lt;/span>(&lt;span style="color:#a6e22e">content&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">heros&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error occurred during unmarshal: &amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// now we can read/interact with the data. We&amp;#39;ll loop over the array
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// and print the values in memory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; len(&lt;span style="color:#a6e22e">heros&lt;/span>); &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">heros&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>].&lt;span style="color:#a6e22e">Id&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">heros&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>].&lt;span style="color:#a6e22e">FirstName&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">heros&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>].&lt;span style="color:#a6e22e">LastName&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">heros&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>].&lt;span style="color:#a6e22e">Group&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a file named employees.json with similar data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;firstName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Steve&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;lastName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Rogers&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;alias&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Captain America&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;group&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Avengers&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;firstName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Clark&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;lastName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Kent&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;alias&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Superman&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;group&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Justice League&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, we can run our main.go file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>11:40:47 ryan@xerxes json ‚Üí go run main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Steve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Rogers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Avengers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Clark
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Kent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Justice League
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:40:49 ryan@xerxes json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pretty simple! That&amp;rsquo;s why I love go. We accomplished all of this with ~50 lines of code.
Doing something similar in asp.net project would easily double that count and involve creating
multiple files! (nothing against asp.net or c#, I think c# is a great language and use it daily)&lt;/p>
&lt;p>Now, &amp;lsquo;go&amp;rsquo; try this!&lt;/p></description></item><item><title>AKS Scale Down Mode</title><link>https://rnemeth90.github.io/posts/2022-07-19-aks-scale-down-mode/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-07-19-aks-scale-down-mode/</guid><description>&lt;p>By default, scale-out operations performed manually or by cluster autoscale rules require the allocation and provisioning of new nodes, and scale-in operations delete nodes. Scale-down mode is a relatively newer concept that allows us to choose whether to delete &lt;em>or&lt;/em> deallocate nodes.&lt;/p>
&lt;p>Having the ability to deallocate, rather than delete, nodes is a major performance benefit, as the time it takes to spin up new nodes will be significantly decreased. You will not be charged when nodes are deallocated. However, you will still need to pay for any storage that the node is using. Having persistent storage also means that any container images that were cached on the node will still be there when the node starts back up. This can be a major performance benefit if you are using Windows containers because the images for these containers are typically very large.&lt;/p>
&lt;p>Scale down mode can be configured in several ways. Here, we will look at configuring it via the Azure CLI and Terraform.&lt;/p>
&lt;p>Azure CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>az aks nodepool update --scale-down-mode Deallocate --name nplinux01 --cluster-name myAKSCluster --resource-group myResourceGroup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Terraform:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-hcl" data-lang="hcl">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">resource&lt;/span> &lt;span style="color:#e6db74">&amp;#34;azurerm_kubernetes_cluster_node_pool&amp;#34; &amp;#34;nodepool&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;nplinux01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubernetes_cluster_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">azurerm_kubernetes_cluster&lt;/span>.&lt;span style="color:#66d9ef">example&lt;/span>.&lt;span style="color:#66d9ef">id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm_size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Standard_DS2_v2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node_count &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scale_down_mode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Deallocate&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Environment &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;lab&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>At the time of this writing, Terraform does not support configuring scale-down mode for the default AKS node pool.&lt;/em>
&lt;em>Node pools using ephemeral disks do not support &amp;lsquo;deallocate&amp;rsquo; mode&lt;/em>&lt;/p></description></item><item><title>Scheduled Kubernetes Worker Node Maintenance with Kured</title><link>https://rnemeth90.github.io/posts/2022-07-15-scheduled-kubernetes-worker-node-maintenance-with-kured/</link><pubDate>Fri, 15 Jul 2022 18:18:50 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-07-15-scheduled-kubernetes-worker-node-maintenance-with-kured/</guid><description>&lt;p>If you manage Linux nodes, you know how vital performing regular maintenance is. Installing software patches that modify Linux kernel headers requires a reboot. Normally, as in the past, we would cordon and drain the node and then manually reboot, wait for it to come back online, verify its health, and add it back to the cluster. That‚Äôs a lot of manual work! How can we automate this?&lt;/p>
&lt;p>Weaveworks created a great tool for simplifying these steps: Kured (the &lt;em>&lt;strong>Ku&lt;/strong>bernetes &lt;strong>Re&lt;/strong>boot &lt;strong>D&lt;/strong>aemon&lt;/em>). Let‚Äôs start by deploying Kured to our cluster.&lt;/p>
&lt;p>Kured can be deployed in one of several ways. In this article, we‚Äôll focus on deploying it via Helm. This is the simplest and quickest way to get it running in our cluster.&lt;/p>
&lt;p>Follow these steps to install the Helm chart:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1) Add the Kured Helm repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm repo add kured https://weaveworks.github.io/kured
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 2) Update your local Helm chart repository cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm repo update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 3) Create a dedicated namespace where you would like to deploy kured&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create namespace kured
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 4) Install kured in that namespace with Helm 3 (only on Linux nodes)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>helm install kured kured/kured --namespace kured --set nodeSelector.&lt;span style="color:#e6db74">&amp;#34;kubernetes\.io/os&amp;#34;&lt;/span>&lt;span style="color:#f92672">=&lt;/span>linux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If all went well with the command above, that‚Äôs it, you‚Äôre done! Have a nice day! üôÇ&lt;/p>
&lt;p>If you want to test Kured, login to one of your Linux nodes, and install some patches with your package manager of choice (any patch that requires a reboot, typically patches that modify kernel headers). Then, check for a file named ‚Äòreboot-required‚Äô in /var/run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ls -lisa /var/run/reboot-required
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you installed patches, and this file does not exist, none of your patches require a reboot. We can still fake the system into thinking a reboot is required by manually creating the ‚Äòreboot-required‚Äô file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo touch /var/run/reboot-required
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2022/07/image-1.png" alt="">&lt;/p>
&lt;p>Then, we‚Äôll use Kubetail to tail the logs of all our Kured pods:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubetail -label kured --namespace kured
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2022/07/image-1024x749.png" alt="">&lt;/p>
&lt;p>By default, Kured checks for the existence of the sentinel file every 60 minutes. However, this behavior can be changed. See the github repo for more info:&lt;/p>
&lt;p>&lt;img src="https://github.com/weaveworks/kured#reboot-sentinel-file--period" alt="weaveworks/kured: Kubernetes Reboot Daemon">&lt;/p>
&lt;p>Scheduling on the node should be disabled if you are within the Kured schedule&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2022/07/image-2.png" alt="">&lt;/p>
&lt;p>Now that the node is cordoned off, running pods on the node are drained, and the node is rebooted.&lt;/p>
&lt;p>That‚Äôs it for this article. Have a great day!&lt;/p></description></item><item><title>Running Docker in WSL v1</title><link>https://rnemeth90.github.io/posts/2022-06-26-running-docker-in-wsl-v1/</link><pubDate>Sun, 26 Jun 2022 15:00:28 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-06-26-running-docker-in-wsl-v1/</guid><description>&lt;p>I have somewhat of a niche issue, where I have no network connectivity while connecting to my work VPN inside of WSL v2. I have found others complaining about this issue on Github. Though no one seems to know how to fix it and I have not had the time to properly investigate.&lt;/p>
&lt;p>Because of this, I‚Äôm required to continue using WSL v1. Though, with WSL v1, Docker does not work. I receive this nice message:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ docker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The command &lt;span style="color:#e6db74">&amp;#39;docker&amp;#39;&lt;/span> could not be found in this WSL &lt;span style="color:#ae81ff">1&lt;/span> distro.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>We recommend to convert this distro to WSL &lt;span style="color:#ae81ff">2&lt;/span> and activate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>the WSL integration in Docker Desktop settings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>See https://docs.docker.com/docker-for-windows/wsl/ &lt;span style="color:#66d9ef">for&lt;/span> details.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So I‚Äôm in somewhat of a catch-22 here‚Ä¶&lt;/p>
&lt;p>To work around this problem until a proper solution is found, I was able to get Docker working with WSL v1.&lt;/p>
&lt;p>If you happen to be having a similar issue (and it seems like quite a few people are, considering the number of Github posts I found), just follow these steps:&lt;/p>
&lt;ul>
&lt;li>Expose the Docker daemon in docker desktop settings:&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2022/02/image-10-1024x585.png">&lt;/a>&lt;/p>
&lt;p>Install the stand-alone Docker client in WSL v1:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.5.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar zxvf docker-20.10.5.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Set the default Docker daemon in WSL v1:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>export DOCKER_HOST&lt;span style="color:#f92672">=&lt;/span>tcp://localhost:2375
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verify you can connect to Docker running on Windows from within WSL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>./docker info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is also beneficial in that you only have one Docker host to manage your containers, network, etc., rather than two.&lt;/p></description></item><item><title>EF Core &amp;#8211; Unable to create an object of type DbContext</title><link>https://rnemeth90.github.io/posts/2022-06-12-ef-core-unable-to-create-an-object-of-type-dbcontext/</link><pubDate>Sun, 12 Jun 2022 13:58:52 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-06-12-ef-core-unable-to-create-an-object-of-type-dbcontext/</guid><description>&lt;p>This problem has bitten me more than once, and I can never remember how to fix it. So, why not write a blog post about it!&lt;/p>
&lt;p>When running EF Core migrations in a solution, you may come across this error:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2022/06/image-1-1024x142.png">&lt;/a>&lt;/p>
&lt;p>There are several apparent causes. However, in my case (every time I have seen this), it has been caused by having multiple startup projects selected in Visual Studio.&lt;/p>
&lt;p>To fix this, simply open your Solution properties and set the startup project to ‚ÄòCurrent Selection‚Äô.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2022/06/image-2.png">&lt;/a>&lt;/p>
&lt;p>If you are using clean architecture, or some other architecture that has your startup context and your dbContext in different projects, you will need to set your startup project to your runtime, and the ‚ÄòDefault Project‚Äô in the package manager console to the project containing your dbContext.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2022/06/image-3-1024x493.png">&lt;/a>&lt;/p></description></item><item><title>Remove Kubernetes Namespace Stuck in the Terminating State</title><link>https://rnemeth90.github.io/posts/2022-06-04-remove-kubernetes-namespace-stuck-in-the-terminating-state/</link><pubDate>Sat, 04 Jun 2022 18:29:41 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-06-04-remove-kubernetes-namespace-stuck-in-the-terminating-state/</guid><description>&lt;p>In this post, we will discuss how to remove a Kubernetes namespace that is stuck in the ‚Äòterminating‚Äô state.&lt;/p>
&lt;p>A namespace is like a container. You can use it to store related objects in a Kubernetes environment. Maybe you are hosting a blog in Kubernetes. This blog will likely have a database, a frontend website, a load balancer (service) to spread the incoming traffic among ‚Äòx‚Äô number of frontend containers (pods), and maybe some middle-tier or utility applications. One day, you decide you no longer want this blog, so you plan to delete it. Rather than tediously deleting all of the various entities associated with this blog, you can delete the namespace that contains these entities. This will essentially ‚Äòcascade delete‚Äô the resources within the namespace as well.&lt;/p>
&lt;p>After deleting the namespace for your blog, you notice that it still exists, but the state of it is ‚ÄòTerminating‚Äô, and it has been like this for a long time (hours or maybe even days).&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/06/image.png">&lt;/a>&lt;/p>
&lt;p>Kubernetes will occassionally fail to delete third-party resources when deleting a namespace, causing the namespace to linger. This can happen if the third-party API managing the resource is not responding to requests. To verify if any of these resources still exist, use this command:&lt;/p>
&lt;pre tabindex="0">&lt;code>kubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --show-all --ignore-not-found -n &amp;lt;terminating-namespace&amp;gt;
&lt;/code>&lt;/pre>&lt;p>If you happen to see any resources in the output, you can try force deleting them and then try to delete the namespace again.&lt;/p>
&lt;p>In my experience, the majority of the time you will not find any resources still hanging around. Rather, the namespace will be completely empty. What is going on here?&lt;/p>
&lt;p>Let‚Äôs take a look at the namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">$ kubectl get namespace darn-c101 -o yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Namespace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">annotations&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">kubectl.kubernetes.io/last-applied-configuration&lt;/span>: &lt;span style="color:#ae81ff">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">kubernetes.io/metadata.name&lt;/span>: &lt;span style="color:#ae81ff">darn-c101&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">finalizers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">kubernetes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">status&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">conditions&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">lastTransitionTime&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2022-06-01T19:05:31Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">message: &amp;#39;Some content in the namespace has finalizers remaining&lt;/span>: &lt;span style="color:#ae81ff">darn-c101.geekyryan.io/finalizer in 1 resource instances&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">reason&lt;/span>: &lt;span style="color:#ae81ff">SomeFinalizersRemain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">status&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">NamespaceFinalizersRemaining&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">phase&lt;/span>: &lt;span style="color:#ae81ff">Terminating&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice the inclusion of the finalizers field in the above JSON. Some namespaces have a finalizer defined under spec.&lt;/p>
&lt;p>A finalizer is a special metadata key that tells Kubernetes to wait until a specific condition is met before it fully deletes a resource. Much like a finalizer in the .NET framework (does Java have those too? üòÄ )&lt;/p>
&lt;p>So when you run a command like &lt;code>kubectl delete namespace &amp;lt;namespace&amp;gt;&lt;/code>, Kubernetes checks for a finalizer in the &lt;code>metadata.finalizers&lt;/code> field. If the resource defined in the finalizer cannot be deleted, then the namespace is not deleted either. This puts the namespace into a perpetual terminating state and is never actually deleted.&lt;/p>
&lt;p>When an object has been terminating for an excessive time, check its finalizers by inspecting the &lt;code>metadata.finalizers&lt;/code> field in its YAML.&lt;/p>
&lt;p>So we now know what the problem is. How can we solve it? Well, it‚Äôs actually quite simple. If you are using bash, use this script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>namespaces&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>kubectl get ns --field-selector&lt;span style="color:#f92672">=&lt;/span>status.phase&lt;span style="color:#f92672">==&lt;/span>Terminating -o jsonpath&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;{range .items[*]}{.metadata.name}{&amp;#34;\n&amp;#34;}{end}&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -z &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$namespaces&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;No namespaces to delete.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> namespace in $namespaces
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[Removing Namespace]: &lt;/span>$namespace&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl get namespace $namespace -o json | tr -d &lt;span style="color:#e6db74">&amp;#34;\n&amp;#34;&lt;/span> | sed &lt;span style="color:#e6db74">&amp;#34;s/\&amp;#34;finalizers\&amp;#34;: \[[^]]\+\]/\&amp;#34;finalizers\&amp;#34;: []/&amp;#34;&lt;/span> | kubectl replace --raw /api/v1/namespaces/$namespace/finalize -f - &amp;gt; /dev/null 2&amp;gt;&amp;amp;&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://gist.github.com/rnemeth90/e83bb4c8808f0d28412cb40edb2487d3">Delete Terminating Kubernetes Namespaces with Bash (github.com)&lt;/a>&lt;/p>
&lt;p>It will search for any namespace that is stuck in the terminating state and forcefully remove it by removing the finalizers field and then using &lt;code> kubectl replace&lt;/code> to commit the change back to the Kube API.&lt;/p>
&lt;p>If you prefer Powershell, you can use this script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>$terminatingNamespaces = kubectl get ns --field-selector=status.phase==Terminating -o jsonpath=&lt;span style="color:#e6db74">&amp;#34;{range .items[*]}{.metadata.name}{&amp;#39;\n&amp;#39;}{end}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> ($ns &lt;span style="color:#66d9ef">in&lt;/span> $terminatingNamespaces) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Verbose &lt;span style="color:#e6db74">&amp;#39;[FOUND]: Forcefully removing $ns&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $jsonObj = kubectl get namespace $ns -o json | ConvertFrom-Json | foreach-object { $_.spec.finalizers = @(); $_ } |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> convertto-json | kubectl replace --raw /api/v1/namespaces/$namespace/finalize &lt;span style="color:#f92672">-f&lt;/span> -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://gist.github.com/rnemeth90/19d7de622a5009c1cf908c5d4deb5358">Delete Terminating Kubernetes Namespaces with Powershell (github.com)&lt;/a>&lt;/p>
&lt;p>It does the same thing as the bash script, just in more of a Window-zy way.&lt;/p>
&lt;p>It‚Äôs that simple. I hope this was helpful. If you have any questions, comments, or concerns, please feel free to reach out.&lt;/p></description></item><item><title>Injecting multiple Kubernetes volumes to the same directory in a pod</title><link>https://rnemeth90.github.io/posts/2022-04-30-injecting-multiple-kubernetes-volumes-to-the-same-directory-in-a-pod/</link><pubDate>Sat, 30 Apr 2022 14:21:05 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-04-30-injecting-multiple-kubernetes-volumes-to-the-same-directory-in-a-pod/</guid><description>&lt;p>We can inject configuration into containers using Kubernetes config maps and secrets. These objects can be consumed by a pod as environment variables, command-line arguments, or as configuration files mounted in a volume. For the subject of this article, we will focus on mounting multiple config maps/secrets into a single directory on a pod.&lt;/p>
&lt;p>Mounting a configmap or secret in a Volume is relatively straightforward (for anyone familiar with Kubernetes primitives). Take for example the following deployment definition:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ConfigMap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">application.properties&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> greeting=Hello
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> name=World&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Secret&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">credentials.properties&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;base64 goes here&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">Opaque&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">selector&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">busybox:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/bin/sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -&lt;span style="color:#ae81ff">c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sleep 5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMounts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/config/application.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/config/credentials.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">configMap&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">secret&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">secretName&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When this deployment is created, we see two directories are created in this pod (one for the configMap, and one for the secret). How can we mount these as two &lt;em>files&lt;/em> in the ‚Äòconfig‚Äô directory, rather than two individual directories?&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/04/image.png">&lt;/a>&lt;/p>
&lt;p>The ~VolumeMounts~ directive within the container spec of the deployment has an optional (less-known) parameter named ‚ÄòsubPath‚Äô. By using this parameter, we can mount a configMap and secret in the same directory within a pod.&lt;/p>
&lt;p>Let‚Äôs focus on the following deployment spec:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ConfigMap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">application.properties&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> greeting=Hello
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> name=World&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Secret&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">credentials.properties&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;base64 goes here&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">Opaque&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">selector&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">busybox:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/bin/sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -&lt;span style="color:#ae81ff">c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sleep 5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMounts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/config/application.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">subPath&lt;/span>: &lt;span style="color:#ae81ff">application.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/config/credentials.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">subPath&lt;/span>: &lt;span style="color:#ae81ff">credentials.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">configMap&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">secret&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">secretName&lt;/span>: &lt;span style="color:#ae81ff">hello-world-credentials&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, if we deploy this, we can see that we have two files in the ‚Äòconfig‚Äô directory of the pod, rather than a subdirectory for each config/secret:&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/04/image-1.png">&lt;/a>&lt;/p>
&lt;p>In this example, the key application.properties from the configuration map will be mounted to a file with the same name under /config/, and the secret value credentials.properties will be mounted to a second file under that directory. Both files will be read-only to the application.&lt;/p></description></item><item><title>Kubernetes Storage Simplified</title><link>https://rnemeth90.github.io/posts/2022-03-01-kubernetes-storage-simplified/</link><pubDate>Tue, 01 Mar 2022 08:37:58 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-03-01-kubernetes-storage-simplified/</guid><description>&lt;p>In this blog post, we will attempt to explain the current storage options that exist in Kubernetes. If you are new to Kubernetes, learning about its capabilities of managing the application state can be a daunting task.&lt;/p>
&lt;p>Container images are built-in layers, with the runtime layer being writable. However, any files on this writable layer are only available for the container‚Äôs lifetime. We can mount a volume to a directory inside the container to have persistent data.&lt;/p>
&lt;p>Kubernetes storage uses the concepts of volumes. Ephemeral volumes are called volumes and only last the lifetime of a pod, and ‚Äúpersistent volumes‚Äù are used for long-term storage. A typical use case for Ephemeral volumes is storing logs that are not sent to stdout.&lt;/p>
&lt;p>Mounting a persistent volume inside a container allows you to persist the state of your application long after the container is terminated. Persistent volumes can also take advantage of the typical storage idiosyncrasies such as backup, compression, and encryption.&lt;/p>
&lt;h2 id="persistent-volumes" >Persistent Volumes
&lt;span>
&lt;a href="#persistent-volumes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Kubernetes has several types of persistent volumes. At its core, a persistent volume is simply a directory mounted inside a pod. How that volume is created, the configuration options and the medium that backs it are all determined by the type of volume created.&lt;/p>
&lt;p>There are several types of volumes available, too many to list here. You may commonly see some volume types: NFS, iSCSI, hostpath, and local. If your Kubernetes cluster exists in a cloud environment such as Azure or AWS, other volume types are available to you (azureDisk, azureFile, and awsElasticBlockStore, respectively). A complete list of types can be found here:&lt;/p>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes">https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes&lt;/a>&lt;/p>
&lt;p>Creating a persistent volume is generally a simple task. The first step is determining the type of volume to create. In this post, we will cover creating a local volume. A local volume represents a disk, partition, or directory shared from a node. Local volumes are subject to the availability of the underlying node, meaning that if the node is offline, the volume is also offline and will not be accessible by any pod. Because of this, local volumes should not be used in production.&lt;/p>
&lt;p>A persistent volume can only be created using a declarative approach. To create a persistent local volume, use the following YAML definition:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PersistentVolume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">example-pv&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">capacity&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storage&lt;/span>: &lt;span style="color:#ae81ff">100Gi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMode&lt;/span>: &lt;span style="color:#ae81ff">Filesystem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">accessModes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">ReadWriteOnce&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">persistentVolumeReclaimPolicy&lt;/span>: &lt;span style="color:#ae81ff">Delete&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storageClassName&lt;/span>: &lt;span style="color:#ae81ff">local-storage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">local&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># the path to the volume or directory on the node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/mnt/disks/ssd1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nodeAffinity&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">required&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nodeSelectorTerms&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">matchExpressions&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">key&lt;/span>: &lt;span style="color:#ae81ff">kubernetes.io/hostname&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">operator&lt;/span>: &lt;span style="color:#ae81ff">In&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">values&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># name of the node sharing the volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node01&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When creating a persistent volume of this type, you must specify a node affinity. This ensures that the Kubernetes scheduler schedules any pods requesting access to this volume on the correct node. For example, any pod requesting access to the persistent volume named ‚Äòexample-PV will only be scheduled on the node ‚Äònode01‚Äô.&lt;/p>
&lt;p>Let‚Äôs dive into this persistent volume spec a bit more:&lt;/p>
&lt;p>You can change the capacity of the persistent volume by updating:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">capacity&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storage&lt;/span>: &lt;span style="color:#ae81ff">100Gi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The accessModes will be determined by the storage provider being used. There are generally 3 access modes available: ReadWriteOnce, ReadWriteMany, and ReadOnlyMany.&lt;/p>
&lt;ul>
&lt;li>ReadWriteOnce ‚Äì The volume can be mounted as read-write by a single node&lt;/li>
&lt;li>ReadWriteMany ‚Äì The volume can be mounted as read-write by many nodes&lt;/li>
&lt;li>ReadOnlyMany ‚Äì The volume can be mounted as read-only by many nodes&lt;/li>
&lt;/ul>
&lt;p>The ‚ÄúpersistentVolumeReclaim‚Äù policy determines what happens to a persistent volume when it is no longer mounted by any pods (i.e., there are no claims to it, more on this later). There are three options available for the reclaim policy:&lt;/p>
&lt;ul>
&lt;li>Retain ‚Äì The persistent volume is kept as-is. It must be manually removed when no longer needed.&lt;/li>
&lt;li>Recycle ‚Äì The persistent volume is scrubbed and can be re-used by other pods&lt;/li>
&lt;li>Delete ‚Äì The persistent volume is deleted.&lt;/li>
&lt;/ul>
&lt;p>Currently, only NFS and hostPath volumes support recycling. Cloud storage providers (Azure, AWS, and GCE) support deletion.&lt;/p>
&lt;p>The other aspects of this spec are unique to the volume being used. Since we are using a local volume here, we must specify the path to the directory or volume on the host and the host which is sharing the directory or volume:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">local&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># the path to the volume or directory on the node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/mnt/disks/ssd1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nodeAffinity&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">required&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nodeSelectorTerms&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">matchExpressions&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">key&lt;/span>: &lt;span style="color:#ae81ff">kubernetes.io/hostname&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">operator&lt;/span>: &lt;span style="color:#ae81ff">In&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">values&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># name of the node sharing the volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node01&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ephemeral-volumes" >Ephemeral Volumes
&lt;span>
&lt;a href="#ephemeral-volumes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Note: The Kubernetes documentation recognizes configMaps and Secrets as ephemeral volumes. However, in this article, we will only discuss ephemeral volumes used for data storage (emptyDir volumes).&lt;/p>
&lt;p>Ephemeral volumes are defined within the context of a pod. This means that you cannot create an ephemeral volume on its own. Instead, define the ephemeral volume in the pod or a deployment spec.&lt;/p>
&lt;p>Ephemeral volumes are useful in a few scenarios:&lt;/p>
&lt;ol>
&lt;li>You want to share data between multiple containers in a pod&lt;/li>
&lt;li>You want to cache temporary information such as log files&lt;/li>
&lt;li>You need scratch space to store data before it is processed by another container or pod&lt;/li>
&lt;/ol>
&lt;p>If one of the containers in the pod happens to restart, data on the ephemeral volume will still exist; as long as one of the containers is mounting, it stays online. In other words, if a pod mounting the ephemeral volume is removed from a node, data on the ephemeral volume is lost. However, if a pod crashes, the data on the volume remains intact.&lt;/p>
&lt;p>As stated previously, creating an ephemeral volume is done as part of the pod or deployment template:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Pod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">test-pd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">k8s.gcr.io/test-webserver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">test-container&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMounts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">cache-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">cache-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">emptyDir&lt;/span>: {}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the template, you add a volume of type ‚ÄôemptyDir‚Äô in the ‚Äòvolumes‚Äô spec and name it. You can mount this volume in any container in the pod. The volume does not have to be mounted to the same directory in each container.&lt;/p>
&lt;h2 id="persistent-volume-claims" >Persistent Volume Claims
&lt;span>
&lt;a href="#persistent-volume-claims">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>A persistentVolumeClaim (often referred to as a ‚ÄòPVC‚Äô) is used by a pod to create a ‚Äòclaim‚Äô on storage. Using a PVC, a pod can mount multiple persistent volumes simultaneously to any directory in the pod.&lt;/p>
&lt;p>PersistentVolumeClaim‚Äôs are a Kubernetes primitive that can be deployed from a manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PersistentVolumeClaim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">fast-storage-pvc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">accessModes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">ReadWriteMany&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMode&lt;/span>: &lt;span style="color:#ae81ff">Filesystem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">requests&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storage&lt;/span>: &lt;span style="color:#ae81ff">8Gi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storageClassName&lt;/span>: &lt;span style="color:#ae81ff">fast&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Most of the options in the manifest above seem pretty obvious. The volumeMode specifies whether to consume the persistent volume as a FileSystem or block device. The resources section helps specify the amount of storage you require (8Gi in this example). We will cover the storageClassName in the next section. Finally, the accessModes are identical to those described above in the Persistent Volumes section.&lt;/p>
&lt;p>Pods access a volume by using the persistentVolumeClaim as volume. Claims must exist in the same namespace as the pod using the claim. The controller finds the claim in the pods‚Äô namespace and uses it to find a persistent volume capable of backing the claim. The volume is then mounted on the host and attached to the pod.&lt;/p>
&lt;p>To create a pod that utilizes a PVC, use the following yaml definition:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Pod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">test-pd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">k8s.gcr.io/test-webserver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">test-container&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMounts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/mnt/share&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">azfileshare&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">cache-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">persistentVolumeClaim&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">claimName&lt;/span>: &lt;span style="color:#ae81ff">azfileshare&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="storage-classes" >Storage Classes
&lt;span>
&lt;a href="#storage-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>In this article, we will only be referencing Kubernetes storage classes with respect to dynamic provisioners. If you would like to learn more, please reference the Kubernetes docs:&lt;/p>
&lt;p>&lt;a href="https://bit.ly/3ruJD2A">https://bit.ly/3ruJD2A&lt;/a>&lt;/p>
&lt;p>Storage Classes have many uses. Kubernetes is unopinionated about what a storage class represents. They can be used to represent different characteristics of storage (performance, compression method, file system modes, etc.). Storage Classes can also be used to provision persistent volumes dynamically, which will be the focus of this article.&lt;/p>
&lt;p>Storage classes are often packaged with CSI drivers. Each StorageClass contains the fields ‚Äúprovisioner‚Äù, ‚Äúparameters‚Äù, and ‚ÄúreclaimPolicy‚Äù. The provisioner field is used to determine what CSI driver is used for provisioning volumes.&lt;/p>
&lt;p>This is an example of the storage class packaged with the AzureFiles CSI driver:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">StorageClass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">storage.k8s.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">azurefileshare&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">provisioner&lt;/span>: &lt;span style="color:#ae81ff">file.csi.azure.com&lt;/span> &lt;span style="color:#75715e"># replace with &amp;#34;kubernetes.io/azure-file&amp;#34; if aks version is less than 1.21&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">mountOptions&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">dir_mode=0777&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">file_mode=0777&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">uid=0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">gid=0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">mfsymlinks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">cache=strict&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">actimeo=30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">parameters&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">skuName&lt;/span>: &lt;span style="color:#ae81ff">Standard_LRS&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can see in the above manifest that the provisioner is set to ‚Äòfile.csi.azure.com.‚Äô When a pod uses a PVC in its manifest that references this storage class, the provisioner will dynamically manage the underlying storage.&lt;/p>
&lt;p>The name of the storageClass is referenced in the persistentVolumeClaim:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PersistentVolumeClaim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">azfileshare&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">accessModes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">ReadWriteMany&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">requests&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storage&lt;/span>: &lt;span style="color:#ae81ff">8Gi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storageClassName&lt;/span>: &lt;span style="color:#ae81ff">azurefileshare&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You could then reference this PVC in a pod:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Pod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">test-pd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">k8s.gcr.io/test-webserver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">test-container&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMounts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/mnt/share&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">azfileshare&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">cache-volume&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">persistentVolumeClaim&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">claimName&lt;/span>: &lt;span style="color:#ae81ff">azfileshare&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That concludes this article. I know that is a lot of information! As always, if you have any questions or comments, please reach out.&lt;/p></description></item><item><title>Accessing Secrets Securely in Azure DevOps Pipelines</title><link>https://rnemeth90.github.io/posts/2022-02-19-accessing-secrets-ecurely-in-azure-devops-pipelines/</link><pubDate>Sat, 19 Feb 2022 16:02:50 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-02-19-accessing-secrets-ecurely-in-azure-devops-pipelines/</guid><description>&lt;p>This post will cover a secure method for accessing secrets in Azure DevOps pipelines.&lt;/p>
&lt;h2 id="why-azure-key-vault" >Why Azure Key Vault?
&lt;span>
&lt;a href="#why-azure-key-vault">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Azure Key Vault is an Azure cloud service used to securely store secrets, keys, and certificates. A secret can be any string of characters, such as API keys, passwords, URLs, etc. Azure Key Vault encrypts data at rest and in transit using HTTPS. Depending on the type of Key Vault you are using, data at rest is encrypted using software encryption (AES 256) or HSM-backed keys.&lt;/p>
&lt;p>Azure Key Vault also gives us the ability to control access to secrets, keys, and certificates using native Key Vault access policies or the newer option of Azure IAM (RBAC) integration.&lt;/p>
&lt;h2 id="what-are-variable-groups" >What are Variable Groups?
&lt;span>
&lt;a href="#what-are-variable-groups">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>It‚Äôs all in the name. Variable groups are simply a method of grouping Azure DevOps pipeline variables. If you created a release for an application named MyAwesomeApp, you could create a variable group named myawesomeapp-var-group that could then store all of the variables you reference in the release. It‚Äôs simply a method of organizing variables.&lt;/p>
&lt;p>You apply permissions to variable groups so that only certain people and pipelines/releases are able to use them.&lt;/p>
&lt;p>You can read more here about variable groups and their usage:&lt;/p>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&amp;amp;tabs=yaml#use-a-variable-group">https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&amp;amp;tabs=yaml#use-a-variable-group&lt;/a>&lt;/p>
&lt;h2 id="creating-a-key-vault-and-adding-secrets" >Creating a Key Vault and Adding Secrets
&lt;span>
&lt;a href="#creating-a-key-vault-and-adding-secrets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>&lt;strong>If you already have a Key Vault, skip this section.&lt;/strong>&lt;/p>
&lt;p>In this post, we will create a Key Vault using the AzureCLI. To create the Vault and a secret, run these commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create a resource group&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>az group create --location &amp;lt;location&amp;gt; --name &amp;lt;resource-group-name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create a KeyVault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>az keyvault create --name &amp;lt;keyvault-name&amp;gt; --resource-group &amp;lt;resource-group-name&amp;gt; --enable-soft-delete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create some secrets in the Key Vault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>az keyvault secret set --name username --vault-name &amp;lt;keyvault-name&amp;gt; --value &amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>az keyvault secret set --name password --vault-name &amp;lt;keyvault-name&amp;gt; --value &amp;lt;password&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>az keyvault secret set --name tenantId--vault-name &amp;lt;keyvault-name&amp;gt; --value &amp;lt;tenant id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will need to update the location and resource group name with whatever values you want. You will also need to update the username, password, and your Azure AD tenant ID. The username you choose will need read access to your subscription.&lt;/p>
&lt;h2 id="creating-a-variable-group" >Creating a Variable Group
&lt;span>
&lt;a href="#creating-a-variable-group">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Now we‚Äôll create the variable group in Azure DevOps.&lt;/p>
&lt;p>Go to your Azure DevOps project &amp;gt; Pipelines &amp;gt; Library and click ‚Äú+ Variable Group‚Äù:&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/02/image.png">&lt;/a>&lt;/p>
&lt;p>Give your variable group a name. Then toggle the switch ‚ÄúLink secrets from an Azure key vault as variables‚Äù. Select your Azure Subscription (you may need to authorize DevOps access to the subscription, and then select the Key Vault.&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/02/image-1.png">&lt;/a>&lt;/p>
&lt;p>Now we can add the secrets from the Key Vault to the variable group. Under ‚ÄúVariables‚Äù, click the ‚Äú+ Add‚Äù button. Select the checkbox next to any secrets you want to add to the variable group, and then click ‚ÄúOk‚Äù.&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/02/image-7.png">&lt;/a>&lt;/p>
&lt;p>Finally, click the ‚ÄúSave‚Äù button. You now have a variable group with secrets linked to a Key Vault. Notice the name of the secret is the only thing visible from the variable group. If you were to update the secret value in the Key Vault, Azure DevOps would automatically pick up the new value.&lt;/p>
&lt;h2 id="use-the-variable-group-in-a-pipeline" >Use the Variable Group in a Pipeline
&lt;span>
&lt;a href="#use-the-variable-group-in-a-pipeline">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Now that we have our variable group in place, let‚Äôs use it in a pipeline. In Azure DevOps, go to Pipelines and click ‚ÄúNew pipeline‚Äù.&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/02/image-8-1024x596.png">&lt;/a>&lt;/p>
&lt;p>Choose ‚ÄúAzure Repos Git‚Äù &amp;gt; ‚Äú&amp;lt; your git repo&amp;gt; ‚Äú, ‚ÄúStarter Pipeline‚Äù, and then paste in the following code (You will need to update the ‚ÄòazureSubscription‚Äô field with your SPN):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">trigger&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#ae81ff">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">pool&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vmImage&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">variables&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">kv-secrets&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">pr&lt;/span>: &lt;span style="color:#ae81ff">none&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">stages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">stage&lt;/span>: &lt;span style="color:#ae81ff">print_resource_groups&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">job&lt;/span>: &lt;span style="color:#ae81ff">print_resource_groups&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">continueOnError&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">task&lt;/span>: &lt;span style="color:#ae81ff">AzureCLI@2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">inputs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">azureSubscription&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;&amp;lt;Your SPN&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scriptType&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;bash&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scriptLocation&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;inlineScript&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">inlineScript&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> az login --service-principal --username $(username) --password $(password) --tenant $(tenantId)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> az group list&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now click ‚ÄúSave and Run‚Äù, and then ‚ÄúSave and Run‚Äù again.&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2022/02/image-9-1024x596.png">&lt;/a>&lt;/p>
&lt;p>Once the pipeline finishes running, you can see that it was able to read the subscription and create a list of all resource groups found.&lt;/p>
&lt;p>This is a simple example of using Key Vault credentials in a pipeline. But you can imagine how useful this could be in more complex scenarios.&lt;/p>
&lt;p>That‚Äôs all for now. If you have any questions, feel free to reach out!&lt;/p></description></item><item><title>Kubernetes Pod Eviction</title><link>https://rnemeth90.github.io/posts/2022-02-05-kubernetes-pod-eviction/</link><pubDate>Sat, 05 Feb 2022 23:49:16 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-02-05-kubernetes-pod-eviction/</guid><description>&lt;p>In this article, we will dive into the process of pod eviction in a Kubernetes cluster, how you can pod prevent pod eviction, and how you can recover from such a situation.&lt;/p>
&lt;h2 id="what-is-pod-eviction" >What is Pod Eviction?
&lt;span>
&lt;a href="#what-is-pod-eviction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Kubernetes pod eviction is a type of involuntary service disruption in which a pod is forcefully stopped on a node or fails to be scheduled on a node. Pod eviction can happen for a variety of reasons. The most common of which is resource starvation on a node. This is referred to as ‚Äúnode-pressure eviction.‚Äù&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx 0/1 Evicted &lt;span style="color:#ae81ff">0&lt;/span> 10s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="eviction-process" >Eviction Process
&lt;span>
&lt;a href="#eviction-process">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>The kubelet process running on the node monitors resources such as CPU, memory, disk space, inodes, etc. When one of these resources reaches a certain consumption level, the kubelet will first attempt to clean up resources by deleting non-running pods and images (in the case of storage starvation). The kubelet will then fail one or more pods on the node to reclaim resources. The class of the pod determines the order in which it does this.&lt;/p>
&lt;p>&lt;strong>Pod Classes&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Guaranteed: Pods that have requests and limits configured for both CPU and memory&lt;/li>
&lt;li>Burstable: Pods with a resource request configured for memory or CPU&lt;/li>
&lt;li>Best Effort: Pods without any requests or limits&lt;/li>
&lt;/ul>
&lt;p>The kubelet will first evict any ‚Äúbest-effort‚Äù pods. If this is not enough, the kubelet will evict any ‚Äúburstable‚Äù pods. Pods within the ‚Äúguaranteed‚Äù class are theoretically safe from eviction.&lt;/p>
&lt;p>During a node-pressure eviction, the kubelet sets the PodPhase for the selected pods to ‚ÄúFailed.‚Äù This causes the pods to terminate. If a daemonSet or replicaSet manages the pod, the Kubernetes controller-manager will create new pods on another node.&lt;/p>
&lt;h2 id="recovery" >Recovery
&lt;span>
&lt;a href="#recovery">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Node-pressure eviction is almost always avoidable. We can prevent this type of issue by ensuring that we properly size our clusters and create resource limits for pods.&lt;/p>
&lt;p>&lt;strong>Resource&lt;/strong> &lt;strong>Requests and Limits:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Requests: The minimum amount of resources (CPU/memory) that a container needs to start.&lt;/li>
&lt;li>Limits: The maximum amount of resources that a container is allowed to use.&lt;/li>
&lt;/ul>
&lt;p>Pod resources and requests can be defined in a pod spec or deployment spec. Below is an example of a pod spec with resource requests and limits defined:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Pod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">frontend&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">requests&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;64Mi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;250m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">limits&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;128Mi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;500m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will often need to clean up evicted pods manually. If you find that your cluster has a large amount of evicted pods, you can clean them up with the following kubectl commands:&lt;/p>
&lt;p>&lt;strong>To see all failed pods in the cluster:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get pod --all-namespaces --field-selector&lt;span style="color:#f92672">=&lt;/span>status.phase&lt;span style="color:#f92672">==&lt;/span>Failed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>To remove all failed pods in the cluster:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl delete pod --all-namespaces --field-selector&lt;span style="color:#f92672">=&lt;/span>status.phase&lt;span style="color:#f92672">==&lt;/span>Failed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I hope this article has been helpful. Please reach out if you have any questions or comments! Also, if you would like to learn more, take a look at the official Kubernetes docs:&lt;/p>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/">https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/&lt;/a>&lt;/p></description></item><item><title>Azure Kubernetes sFTP Solution</title><link>https://rnemeth90.github.io/posts/2022-01-16-azure-kubernetes-sftp-solution/</link><pubDate>Sun, 16 Jan 2022 07:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-16-azure-kubernetes-sftp-solution/</guid><description>&lt;p>In this post, we‚Äôll take a look at deploying a highly available sFTP solution to Azure Kubernetes with user files stored in an Azure NFSv4 File Share. The sFTP application reads user credentials from a file named users.conf, containing secrets from an Azure Key Vault.&lt;/p>
&lt;p>Here is the link to my Github account where you can download the code mentioned in this article:&lt;/p>
&lt;p>&lt;a href="https://github.com/rnemeth90/kubernetes-sftp">https://github.com/rnemeth90/kubernetes-sftp&lt;/a>&lt;/p>
&lt;p>We will work through the following steps in this article:&lt;/p>
&lt;ol>
&lt;li>Deploy the AzureFile CSI driver to the AKS cluster&lt;/li>
&lt;li>Create a configMap that our initContainer will&lt;/li>
&lt;li>Deploy a persistent volume claim that an Azure File share will back&lt;/li>
&lt;li>Deploy a replicaSet consisting of our initContainer and application container&lt;/li>
&lt;li>Deploy a service to serve traffic&lt;/li>
&lt;/ol>
&lt;p>First, you will need to deploy the Azure Files CSI driver to your AKS cluster. AKS uses this daemon set to dynamically provision/destroy Azure NFSv4 File Shares. The Azure Files CSI driver creates a storage account in the node pool resource group, in which it will then provision the file share.&lt;/p>
&lt;p>Deploying the Azure Files CSI driver is a simple task. You will need to run this script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -skSL https://raw.githubusercontent.com/kubernetes-sigs/azurefile-csi-driver/master/deploy/install-driver.sh | bash -s master --
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the following commands to verify that the daemon set has exists:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl -n kube-system get pod -o wide --watch -l app&lt;span style="color:#f92672">=&lt;/span>csi-azurefile-controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl -n kube-system get pod -o wide --watch -l app&lt;span style="color:#f92672">=&lt;/span>csi-azurefile-node
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure class="wp-block-coblocks-gallery-masonry masonry-grid has-border-radius-10 has-medium-gutter">&lt;figure class="wp-block-image size-large masonry-brick">[![Image gallery image](https://rnemeth90.github.io/wp-content/uploads/2022/01/image-1-1024x434.png)](https://rnemeth90.github.io/wp-content/uploads/2022/01/image-1.png)&lt;/figure>&lt;/figure>Next, you need to create a storage class by deploying this yaml file:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl create -f https://raw.githubusercontent.com/kubernetes-sigs/azurefile-csi-driver/master/deploy/example/storageclass-azurefile-nfs.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Read more about the AzureFiles CSI driver at the following Github link:&lt;/p>
&lt;p>&lt;a href="https://github.com/kubernetes-sigs/azurefile-csi-driver/blob/master/docs/install-driver-on-aks.md">https://github.com/kubernetes-sigs/azurefile-csi-driver/blob/master/docs/install-driver-on-aks.md&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ConfigMap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">creationTimestamp&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">testcm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">init.sh&lt;/span>: |-&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> #!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> CONF_FILE=&amp;#34;/etc/sftp/users.conf&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> KEYVAULT=&amp;#34;Insert name of Key Vault&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> AZ_SPN_ID=&amp;#34;Insert service principal Id&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> AZ_SPN_PASSWORD=&amp;#34;Insert service principal password&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> AZ_SPN_TENANT_ID=&amp;#34;Insert Az AAD Tenant Id&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> AZ_SUBSCRIPTION_ID=&amp;#34;Insert Az Subscription Id&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> az login --service-principal --username &amp;#34;${AZ_SPN_ID}&amp;#34; --password &amp;#34;${AZ_SPN_PASSWORD}&amp;#34; --tenant &amp;#34;${AZ_SPN_TENANT_ID}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> az account set --subscription &amp;#34;${AZ_SUBSCRIPTION_ID}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> SECRETS+=($(az keyvault secret list --vault-name $KEYVAULT --query &amp;#34;[].id&amp;#34; -o tsv))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> chmod 755 /home
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> if [[ -e $CONF_FILE ]]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> rm -rf &amp;#34;${CONF_FILE}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> touch $CONF_FILE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> touch $CONF_FILE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> fi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> for SECRET in &amp;#34;${SECRETS[@]}&amp;#34;; do
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> SECRETNAME=$(basename $SECRET | tr -d &amp;#39;\r&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> SECRETVALUE=$(az keyvault secret show --vault-name $KEYVAULT --name $SECRETNAME --query &amp;#39;value&amp;#39; | tr -d &amp;#39;&amp;#34;&amp;#39; | tr -d &amp;#39;\r&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> echo &amp;#34;$SECRETNAME:$SECRETVALUE:::upload&amp;#34; &amp;gt;&amp;gt; $CONF_FILE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> done
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> if [[ ! -s $CONF_FILE ]]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> echo &amp;#34;** ERROR: user.conf is empty&amp;#34; 1&amp;gt;&amp;amp;2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> exit 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The initContainer will use this configMap to read secrets from an Azure Key Vault and then write the secrets to the users.conf file. The users.conf file contains user account information. In the Key Vault, the secret name should be the username and the secret value should be the password. This Key Vault must exist and contain the secrets prior to deploying this solution.&lt;/p>
&lt;p>When I deployed this solution in my environment, I used an Azure DevOps pipeline to create/manage the Key Vault with Terraform and then deploy the secrets using an inline Powershell script. However, this is beyond the scope of this article, and I will not be covering it here. You will also need to create a Service Principal in your AAD tenant and grant it access to the Key Vault. The Service Principal needs to have at least read access to the Key Vault.&lt;/p>
&lt;p>Before deploying the configMap, you need to fill in values for these variables:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span> KEYVAULT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Insert name of Key Vault&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AZ_SPN_ID&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Insert service principal Id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AZ_SPN_PASSWORD&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Insert service principal password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AZ_SPN_TENANT_ID&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Insert Az AAD Tenant Id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AZ_SUBSCRIPTION_ID&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Insert Az Subscription Id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These values pertain to the service principal with read access to the Key Vault. After filling out these variables, you can deploy the configMap using kubectl.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl create -f configmap.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can deploy the PVC using this yaml file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PersistentVolumeClaim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">pvc-ftp-clientdirs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">accessModes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">ReadWriteMany&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">requests&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storage&lt;/span>: &lt;span style="color:#ae81ff">100Gi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">storageClassName&lt;/span>: &lt;span style="color:#ae81ff">azurefile-csi-nfs&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When creating the persistent volume claim for the deployment, you specify azurefile-csi-nfs as the StorageClass. This will create an NFSv4 share in a premium storage account. The reclaim policy of the storage class ensures that the file share is deleted when the associated Persistent Volume is deleted. Change the reclaim policy to ‚ÄúRetain‚Äù if you want the file shares to persist after deleting the PV. Furthermore, the storage class enables the file share to be expandable by modifying the storage request size on the PVC.&lt;/p>
&lt;p>After deploying the PVC, you can verify its existence by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get pvc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see output similar to the following (the manifest for the replicaSet is by far the most complicated of all the code referenced here):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">selector&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">strategy&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">initContainer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">chmodder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">mcr.microsoft.com/azure-cli&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/bin/sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -&lt;span style="color:#ae81ff">c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;/scripts/init.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMounts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">init-shell-script&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/scripts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">docker.io/atmoz/sftp:alpine&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">imagePullPolicy&lt;/span>: &lt;span style="color:#ae81ff">IfNotPresent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">requests&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;64Mi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;250m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">limits&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;128Mi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;500m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">livenessProbe&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tcpSocket&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">22&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">initialDelaySeconds&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">timeoutSeconds&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">periodSeconds&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">failureThreshold&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readinessProbe&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tcpSocket&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">22&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">initialDelaySeconds&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">timeoutSeconds&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">periodSeconds&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">failureThreshold&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumeMounts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">pvc-ftp-clientdirs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/home&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dnsPolicy&lt;/span>: &lt;span style="color:#ae81ff">ClusterFirst&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restartPolicy&lt;/span>: &lt;span style="color:#ae81ff">Never&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">pvc-ftp-clientdirs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">persistentVolumeClaim&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">claimName&lt;/span>: &lt;span style="color:#ae81ff">pvc-ftp-clientdirs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">init-shell-script&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">configMap&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">init-shell-script&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">emptyDir&lt;/span>: {}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You may need to change the CPU/memory requests and limits. These values worked for me, but your results may vary. You can also add/change the labels as you see fit.&lt;/p>
&lt;p>This will handle routing traffic to our pods.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">sftp-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">selector&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">sftp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">LoadBalancer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">protocol&lt;/span>: &lt;span style="color:#ae81ff">TCP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">22&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">targetPort&lt;/span>: &lt;span style="color:#ae81ff">22&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Users will be connected in a round-robin fashion to the pods. This manifest will create a service of type LoadBalancer. Which will in turn create a new public Azure Load Balancer in the resource group that contains your Azure Kubernetes Service cluster if one does not already exist. If you already have a public load balancer, a new frontend IP address will be added.&lt;/p>
&lt;p>That‚Äôs all for now. Please feel free to contact me if you have any questions.&lt;/p></description></item><item><title>WSUS: Update Files Not Downloading</title><link>https://rnemeth90.github.io/posts/2022-01-14-wsus-update-files-not-downloading/</link><pubDate>Fri, 14 Jan 2022 22:01:40 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-wsus-update-files-not-downloading/</guid><description>&lt;p>This article will discuss an issue regarding WSUS failing to download updates from Microsoft Update servers. You may notice that the home page of your WSUS console states that it has downloaded 0MB of updates:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png" alt="">&lt;/a>&lt;/p>
&lt;p>You may also see this event (or similar) in the Event Log.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png" alt="">&lt;/a>&lt;/p>
&lt;p>This problem is caused by not specifying a valid path when assigning the WSUS content drive when first installing the role. The first time you load the WSUS console after installing the role, you will be prompted to specify the path to store Windows Update files. WSUS does not like to have its content directory be the root of a partition. For example, if I were to specify ‚Äúe:‚Äù as the path for the Windows Update content, the wizard would give you an error message stating that the path is not valid. However, it doesn‚Äôt prompt you to re-enter the path if you click close. The WSUS console opens immediately after and that invalid path is where WSUS will try to store your update files. This is and has been a known bug for a while and needs to be addressed by Microsoft. Evidence of the invalid path can be found in the registry under:&lt;/p>
&lt;p>HKLM\Software\Microsoft\UpdateServices\Server\SetupContentDir&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_44.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_44.png" alt="">&lt;/a>&lt;/p>
&lt;p>If you come across this problem, you can change the ContentDir above to a valid path. Keep in mind that it cannot be the root of a partition. You need to specify a drive letter with a subfolder (eg: e:wsus).&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h54_54.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h54_54.png" alt="">&lt;/a>&lt;/p>
&lt;p>The other option is to reinstall the WSUS role. If you remove the role, the WID database is not removed, unless you remove that role as well (or manually delete the database). This means that when you reinstall the WSUS role, it will be able to use that same database and any clients that have contacted the WSUS server will immediately show up in the console. The same is true for update metadata. The new WSUS installation will still have the same approvals, denials, etc. as the old installation.&lt;/p>
&lt;p>Regardless of what option you choose, I suggest rebooting the server after you make the changes.&lt;/p></description></item><item><title>Active Directory Migration Toolkit The RPC Server is Unavailable</title><link>https://rnemeth90.github.io/posts/2022-01-14-active-directory-migration-toolkit-the-rpc-server-is-unavailable/</link><pubDate>Fri, 14 Jan 2022 21:55:56 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-active-directory-migration-toolkit-the-rpc-server-is-unavailable/</guid><description>&lt;p>When migrating computer objects using the Active Directory Migration Tool, you may encounter the following error:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_09.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_09.png" alt="">&lt;/a>&lt;/p>
&lt;p>In addition, the Migration Log may show the following error:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_20.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>This is typically caused by a host-side firewall. To resolve this, deploy a GPO to disable the Windows firewall prior to migrating the computer account. I like to create a special OU for computers (I typically name it ‚ÄúPreMigration‚Äù) that I will move computer objects to prior to migrating them. This OU will have two policies applied. One to disable the Windows Firewall and another to start the Remote Registry service. Both are required for the computer object to successfully migrate.&lt;/p></description></item><item><title>Continuous Deployment Models</title><link>https://rnemeth90.github.io/posts/2022-01-14-continuous-deployment-models/</link><pubDate>Fri, 14 Jan 2022 19:24:01 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-continuous-deployment-models/</guid><description>&lt;p>When deploying new software releases to servers or (insert -as-a-service&amp;gt; here), it‚Äôs a good idea to either deploy the releases in a controlled manner or to have a quick rollback plan. This article will be diving into blue/green deployments, canary deployments, ring-based deployments, and feature tag deployments.&lt;/p>
&lt;h2 id="bluegreen-deployments" >Blue/Green Deployments
&lt;span>
&lt;a href="#bluegreen-deployments">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Blue/green deployments are a deployment model where a new application version never gets deployed to the production servers (green) directly. Instead, it gets deployed to another set of servers (blue) first. Since the blue servers are not currently serving any traffic for users, the deployment has no impact. However, once the deployment has been completed successfully and tested, users will be directed to the new deployment (blue). You can control all user traffic or a subset of user traffic if your load balancer supports it (referred to as ‚ÄòProgressive Exposure‚Äô).&lt;/p>
&lt;p>The next release will then repeat the same process. Blue would be the current production environment, so you would first deploy to the green servers. This model requires two sets of identical hosts and a load balancer or reverse proxy in front of them. If there are any unexpected issues with the new release, it is straightforward to switch back to the previous release. The disadvantage to this type of model is that it requires having redundant environments (and potentially wasted resources). However, this is less of a concern if using container orchestration platforms such as Kubernetes.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2022/01/2022-01-19_07h57_58-1024x575.png" alt="Blue Green deployment model">&lt;/p>
&lt;h2 id="immutable-servers" >Immutable Servers
&lt;span>
&lt;a href="#immutable-servers">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>There is an alternative method of blue/green deployments called ‚Äúimmutable servers‚Äù. This method is identical to blue/green deployments as described above. However, after switching user traffic over to the servers with the new release, the old servers are destroyed. They are not used again. This type of model becomes particularly efficient when using a pipeline that is capable of creating servers for you (i.e., Azure DevOps Pipelines)&lt;/p>
&lt;h2 id="canary-deployments" >Canary Deployments
&lt;span>
&lt;a href="#canary-deployments">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>In a canary deployment, not all users are routed to the new release immediately. Only a limited percentage of users get access to the new release. These users are the canaries. They should be monitored closely, so it is important to be using Not all users are routed to the new release immediately in a canary deployment. Only a limited percentage of users get access to the latest release. These users are the canaries.&lt;/p>
&lt;p>Organizations should monitor the canaries closely, so it is essential to be using monitoring software capable of looking at the statistics of a web application from the users‚Äô perspective (for example, Application Insights). The number of canaries can increase until all traffic is directed to the new release over time. The most significant advantage of this method is limited exposure to issues. If a problem appears after the release is deployed, only a small subset of users will experience it. After you fix the issues and redeploy the release, it‚Äôs best to select a different group of users to be canaries.&lt;/p>
&lt;h2 id="ring-based-deployments" >Ring Based Deployments
&lt;span>
&lt;a href="#ring-based-deployments">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>A ring-based deployment has multiple production environments. Each serves a limited number of users, similar to a canary deployment. However, you can have as many production environments as you want with a ring-based deployment. New releases are deployed to the rings one by one over time.&lt;/p>
&lt;h2 id="feature-flag-deployments" >Feature Flag Deployments
&lt;span>
&lt;a href="#feature-flag-deployments">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Feature flags are used to expose new features to sets of users slowly. Unlike the other deployment models, they are not implemented in the infrastructure. Instead, they are typically implemented and enabled in code or database. An example would be a feature flag in a database that gives users access to a button on your web page. A developer could enable the flag for a set of users. These users would be able to see the button; other users would not. Feature flags can even toggle bug fixes or performance improvements.&lt;/p>
&lt;p>I will cover implementing blue/green deployments in Azure using Azure DevOps and App Services in a future article.&lt;/p></description></item><item><title>Deploy Azure VMs Using Azure Devops CI/CD Pipeline</title><link>https://rnemeth90.github.io/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</link><pubDate>Fri, 14 Jan 2022 18:46:35 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</guid><description>&lt;p>This article assumes that you have already created a pipeline in Azure Devops and have it linked to an Azure Devops repo. You will need to create a variable named $vmpassword and assign it the value stored in your key vault.&lt;/p>
&lt;p>To create a release pipeline that will automatically create a VM (using the password stored in key vault for the local administrator account), do the following:&lt;/p>
&lt;ol>
&lt;li>Create a new release pipeline&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-13.png" alt="">&lt;/p>
&lt;p>3. In the ‚Äúselect a template‚Äù box, choose ‚ÄúEmpty Job‚Äù&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-14.png" alt="">&lt;/p>
&lt;p>4. Select ‚ÄúTasks‚Äù in the navigation bar, and then select the appropriate stage. For simplicities sake, we will be using 1 stage within this release.&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-15.png" alt="">&lt;/p>
&lt;p>5. Click on the ‚Äú+‚Äù in the Agent job bar, and then in the ‚ÄúAdd tasks‚Äù section, type in ‚ÄúKey Vault‚Äù. Click ‚ÄúAzure Key Vault‚Äù and then click ‚ÄúAdd‚Äù. &lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-16.png" alt="">&lt;/p>
&lt;p>6. Click on the ‚ÄúAzure Key Vault:‚Äù task to configure it. Select your subscription, Key Vault, and the secrets filter. You can also create the $vmpassword variable as a variable within your devops project, rather than assigning it as a secret filter for the release. &lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-20.png" alt="">&lt;/p>
&lt;p>7. In your Key Vault, you need to grant the devops account access to the Key Vault. To do this, go to your Key Vault and create a new access policy. This policy will be assigned to a service principal that is being used by your Azure Devops project. To find the ID of this service principal, go to your project settings, and under ‚ÄúPipelines‚Äù, click on ‚ÄúService Connections‚Äù. Then select the service connection that resembles your subscription. After doing this, click ‚ÄúManage Service Principal‚Äù. In the service principal window, click ‚ÄúManifest‚Äù and then find the ‚Äúname‚Äù tag within the JSON.&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-19.png" alt="">&lt;/p>
&lt;p>8. Now go back to your key vault, and assign an access policy for this service principal. Grant the principal read and list for secrets.&lt;/p>
&lt;p>9. Add another agent job for the task (see step 6) and search for ‚Äúazure cli‚Äù. Click on ‚ÄúAdd‚Äù for Azure CLI. Configure the settings for this job as below:&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-18.png" alt="">&lt;/p>
&lt;p>10. Save and run your pipeline. Give it some time to complete, and go take a look at your newly created VM. This is just a very simple example of creating a server as part of a CI/CD pipeline. You can then deploy your code to it, run some tests, destroy them VM, etc. Completely automated.&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-21.png" alt="">&lt;/p></description></item><item><title>Azure Devops &amp;#8211; Self Hosted Agent Service Won&amp;#8217;t Start &amp;#8211; Incorrect Function</title><link>https://rnemeth90.github.io/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</link><pubDate>Fri, 14 Jan 2022 18:45:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</guid><description>&lt;p>I setup a self hosted agent for Azure Devops this morning on Server 2012 R2 (legacy Visual Studio dependencies‚Ä¶) and found that I was unable to start the service. The error I received was ‚ÄúError 1 Incorrect Function‚Äù when attempting to start the service in services.msc.&lt;/p>
&lt;p>I was attempting to run the agent from within my user profile downloads folder. I originally was not aware the service would be running from this directory. I thought it would copy its binary files to program files directory or programdata, like 99% of all other apps. The service installs and attempts to run itself as the ‚Äúnetwork service‚Äù authority. This account does not have permission to a user profile folder by default, and the installation script is not able to grant it permission for some reason (I didn‚Äôt investigate this further). I removed the agent, moved the installation files to the root of c:, and then reinstalled. The agent service is now able to start successfully.&lt;/p></description></item><item><title>Azure Tenant Maintenance &amp;#8211; Purge Empty Resource Groups</title><link>https://rnemeth90.github.io/posts/2022-01-14-azure-tenant-maintenance-purge-empty-resource-groups/</link><pubDate>Fri, 14 Jan 2022 18:43:35 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-azure-tenant-maintenance-purge-empty-resource-groups/</guid><description>&lt;p>This will be the first article in a series about maintaining Azure tenants and subscriptions.&lt;/p>
&lt;p>If you currently, or have ever, worked in a large Azure environment, you know how easily resource creep can occur. Resource Groups, VM disks and network interfaces, network security groups, etc. can easily fall out of sight and be forgotten about. This isn‚Äôt a big concern for resources that are free of cost, like resource groups. However, if you delete several virtual machines, the disks that were attached to those virtual machines linger, and you continue to pay the cost of storing them.&lt;/p>
&lt;p>In this blog post, we will review a script I created for removing empty resource groups. We will then add this script to an Azure Automation Account and link it to a schedule. We will assume you already have an Azure Automation Account in existence, and the Automation Account has a credential object named ‚ÄòAzureRunAsConnection‚Äô.&lt;/p>
&lt;p>To get started, you can download the script here:&lt;/p>
&lt;p>&lt;a href="https://github.com/rnemeth90/azure-automation/blob/master/clean-empty-resource-groups.ps1">https://github.com/rnemeth90/azure-automation/blob/master/clean-empty-resource-groups.ps1&lt;/a>&lt;/p>
&lt;p>This particular runbook will require that the ‚ÄúAZ.Resources‚Äù module be loaded in the Automation Account. To import this module, go to your automation account and then click on ‚ÄúModules‚Äù under ‚ÄúShared Resources‚Äù. Then, click on ‚ÄúBrowse Gallery‚Äù.&lt;/p>
&lt;p>&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image.png">&lt;/a>&lt;/p>
&lt;p>In the search bar, type in ‚ÄúAz.resources‚Äù, then click on the module and click ‚ÄúImport‚Äù. If you see a message like this, you will need to add any modules that az.resources depends on before importing it.&lt;/p>
&lt;p>&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image-1.png">&lt;/a>&lt;/p>
&lt;p>You can go back and add those modules using the same process, and then attempt to import the ‚ÄúAz.resources‚Äù module again. Importing these modules may take several minutes. In my experience, it takes around 10-15 minutes.&lt;/p>
&lt;p>Once these modules are imported you can import the PowerShell runbook you downloaded earlier from Github. To do that, browse to the Runbooks section of your Automation Account and then click ‚ÄúImport a Runbook‚Äù:&lt;/p>
&lt;p>&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image-2.png">&lt;/a>&lt;/p>
&lt;p>In the context menu that appears, browse to the runbook and upload it, choose ‚ÄúPowerShell‚Äù as the runbook type, and then click Create:&lt;/p>
&lt;p>&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image-3.png">&lt;/a>&lt;/p>
&lt;p>In the Editor Pane, click on ‚ÄúTest Pane‚Äù. This will bring you to the Test Pane for the runbook. This will allow you to test the runbook before running it in your environment. Click ‚ÄúStart‚Äù in the Test Pane. This particular runbook will output to screen any changes it will make, so you can see the results here.&lt;/p>
&lt;p>As you can see here, the runbook did find some empty resource groups, but did not remove them:&lt;/p>
&lt;p>&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image-4.png">&lt;/a>&lt;/p>
&lt;p>This is because we have a variable in the runbook that controls whether or not any write/update actions will be taken on resources. Click the X in the upper right corner to go back to the editor, and change the value in the screenshot below from ‚Äú0‚Äù to ‚Äú1‚Äù.&lt;/p>
&lt;p>&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image-8.png">&lt;/a>&lt;/p>
&lt;p>If you‚Äôd like, you can test the runbook again, or you can click ‚ÄúPublish‚Äù to publish it to your Automation Account. Once it‚Äôs published, you can link it to a schedule so that it runs automatically.&lt;/p>
&lt;p>Click ‚ÄúPublish‚Äù:&lt;/p>
&lt;p>&amp;lt;&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image-9.png">&lt;/a>&lt;/p>
&lt;p>Then, on the Runbook page, click ‚ÄúSchedules‚Äù, and then ‚ÄúAdd a schedule‚Äù:&lt;/p>
&lt;p>&lt;a href="https://www.rnemeth90.github.io/content/images/2021/06/image-10.png">&lt;/a>&lt;/p>
&lt;p>Fill out the wizard that pops up to create a schedule and link it to your workbook. This concludes this article.&lt;/p>
&lt;p>In the next post, we will take a look at removing empty resource groups automatically. Stay tuned.&lt;/p></description></item><item><title>Exam AZ-303: Microsoft Azure Architect Technologies Study Guide</title><link>https://rnemeth90.github.io/posts/2020-12-16-exam-az-303-microsoft-azure-architect/</link><pubDate>Wed, 16 Dec 2020 14:44:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-12-16-exam-az-303-microsoft-azure-architect/</guid><description>&lt;p>&lt;span style="font-family: arial;">I recently passed the AZ-303 exam. Below are some of the resources I used to prepare for the exam. In addition to the links below, I also used Alan Rodrigues‚Äô course on Udemy. &lt;/span>&lt;/p>
&lt;p>&lt;span style="font-family: arial;">&lt;a href="https://www.udemy.com/course/az-102-azure-administrator-certification-transition/">https://www.udemy.com/course/az-102-azure-administrator-certification-transition/&lt;/a>
&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-family: arial;">The Udemy course and Microsoft Docs are enough to pass the exam. The course has some good practice exams and labs that align well with what you‚Äôll see on the real exam regarding difficulty. I was scoring in the high 90‚Äôs on the Udemy exams. On the real exam, my score was 923. So, I think, if you comprehend the material well, and get high scores on Udemy practice exams, you‚Äôll do well on the real exam.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-family: arial;">Just wanted to share my experience, hopefully it helps.&lt;/span>&lt;/p>
&lt;p>&lt;strong>&lt;u>&lt;span style="font-size: large;">Implement and Monitor an Azure Infrastructure (50-55%)&lt;/span>&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;span style="font-size: medium;">&lt;strong>Implement cloud infrastructure monitoring&lt;/strong>&lt;/span>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>monitor security&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/security-center/security-center-introduction">What is Azure Security Center?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor performance&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure diagnostic settings on resources&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/diagnostic-settings">Create diagnostic settings to send platform logs and metrics to different destinations&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>create a performance baseline for resources&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://cloudacademy.com/course/analyzing-resource-utilization-azure/resource-baseline/">Analyzing Resource Utilization on Azure&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor for unused resources&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/cost-management-billing/costs/quick-acm-cost-analysis?tabs=azure-portal">Quickstart: Explore and analyze costs with cost analysis&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor performance capacity&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/insights/vminsights-performance">How to chart performance with Azure Monitor for VMs&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>visualize diagnostics data using Azure Monitor&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/workbooks-overview">Azure Monitor Workbooks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor health and availability&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor networking&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/insights/network-insights-overview">Azure Monitor for Networks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor service health&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/service-health/service-health-overview">Service Health overview&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor cost&lt;/p>
&lt;/li>
&lt;li>
&lt;p>monitor spend&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/cost-management-billing/costs/quick-acm-cost-analysis?tabs=azure-portal">Quickstart: Explore and analyze costs with cost analysis&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>report on spend&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/cost-management-billing/understand/download-azure-invoice">View and download your Microsoft Azure invoice&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure advanced logging&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement and configure Azure Monitor insights, including App Insights, Networks, Containers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/monitor-reference">What is monitored by Azure Monitor?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure a Log Analytics workspace&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/learn/quick-create-workspace">Create a Log Analytics workspace in the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure logging for workloads&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initiate automated responses by using Action Groups&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/action-groups">Create and manage action groups in the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure and manage advanced alerts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>collect alerts and metrics across multiple subscriptions&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/alerts-metric">Create, view, and manage metric alerts using Azure Monitor&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>view Alerts in Azure Monitor logs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/alerts-activity-log">Create, view, and manage activity log alerts by using Azure Monitor&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement storage accounts&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>select storage account options based on a use case&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal">Create a storage account&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure Azure Files and blob storage&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/files/storage-how-to-create-file-share?tabs=azure-portal">Create an Azure file share&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-portal">Quickstart: Upload, download, and list blobs with the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure network access to the storage account&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security">Configure Azure Storage firewalls and virtual networks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Shared Access Signatures and access policies&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview">Grant limited access to Azure Storage resources using shared access signatures (SAS)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/define-stored-access-policy">Define a stored access policy&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure AD authentication for storage&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad">Authorize access to blobs and queues using Azure Active Directory&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>manage access keys&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal">Manage storage account access keys&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure storage replication&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/blobs/object-replication-configure?tabs=portal">Configure object replication for block blobs&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure storage account failover&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance">Disaster recovery and storage account failover&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement VMs for Windows and Linux&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>configure High Availability&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/manage-availability">Manage the availability of Linux virtual machines&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure storage for VMs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/managed-disks-overview">Introduction to Azure managed disks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>select virtual machine size&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/sizes">Sizes for virtual machines in Azure&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure Dedicated Hosts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/dedicated-hosts-portal">Deploy VMs and scale sets to dedicated hosts using the portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>deploy and configure scale sets&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/quick-create-portal">Quickstart: Create a virtual machine scale set in the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure Azure Disk Encryption&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disk-encryption-overview">Azure Disk Encryption for Windows VMs&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;span style="font-size: medium;">&lt;strong>Automate deployment and configuration of resources&lt;/strong>&lt;/span>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>save a deployment as an Azure Resource Manager template&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/export-template-portal">Single and multi-resource export to a template in Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>modify Azure Resource Manager template&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview">What are ARM templates?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>evaluate location of new resources&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/view-activity-logs">View activity logs to monitor actions on resources&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure a virtual disk template&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/capture-image-resource">Create a managed image of a generalized VM in Azure&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>deploy from a template&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/learn/modules/deploy-vms-from-vhd-templates/">Deploy Azure virtual machines from VHD templates&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>manage a template library&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/shared-image-galleries">Shared Image Galleries overview&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>create and execute an automation runbook&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://azure.microsoft.com/en-us/blog/azure-automation-runbook-management/">Getting Started With Azure Automation ‚Äì Runbook Management&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement virtual networking&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>implement VNet to VNet connections&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-howto-vnet-vnet-resource-manager-portal">Configure a VNet-to-VNet VPN gateway connection by using the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement VNet peering&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview">Virtual network peering&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement Azure Active Directory&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>add custom domains&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/add-custom-domain">Add your custom domain name using the Azure Active Directory portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure Azure AD Identity Protection&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/overview-identity-protection">What is Identity Protection?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement self-service password reset&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-enable-sspr">Tutorial: Enable users to unlock their account or reset passwords using Azure Active Directory self-service password reset&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Conditional Access including MFA&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/howto-conditional-access-policy-all-users-mfa">Conditional Access: Require MFA for all users&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure user accounts for MFA&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-userstates">Enable per-user Azure AD Multi-Factor Authentication to secure sign-in events&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure fraud alerts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="Enable%20per-user%20Azure%20AD%20Multi-Factor%20Authentication%20to%20secure%20sign-in%20events">Fraud alert&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure bypass options&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-server-settings#one-time-bypass">One-time bypass&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure Trusted IPs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-mfasettings#trusted-ips">Trusted IPs&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure verification methods&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-sspr-howitworks#authentication-methods">Authentication methods&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement and manage guest accounts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/external-identities/b2b-quickstart-add-guest-users-portal">Quickstart: Add guest users to your directory in the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>manage multiple directories&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/enterprise-users/licensing-directory-independence">Understand how multiple Azure Active Directory organizations interact&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement and manage hybrid identities&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>install and configure Azure AD Connect&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-install-express">Getting started with Azure AD Connect using express settings&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>identity synchronization options&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/plan-connect-user-signin">Azure AD Connect user sign-in options&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure and manage password sync and password writeback&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-enable-sspr-writeback">Tutorial: Enable Azure Active Directory self-service password reset writeback to an on-premises environment&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure single sign-on&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-sso-quick-start">Azure Active Directory Seamless Single Sign-On: Quickstart&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>use Azure AD Connect Health&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/whatis-azure-ad-connect#what-is-azure-ad-connect-health">What is Azure AD Connect Health?&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;u>&lt;span style="font-size: large;">Implement Management and Security Solutions (25-30%)&lt;/span>&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;span style="font-size: medium;">&lt;strong>Manage workloads in Azure&lt;/strong>&lt;/span>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>migrate workloads using Azure Migrate&lt;/p>
&lt;/li>
&lt;li>
&lt;p>assess infrastructure&lt;/p>
&lt;/li>
&lt;li>
&lt;p>select a migration method&lt;/p>
&lt;/li>
&lt;li>
&lt;p>prepare the on-premises for migration&lt;/p>
&lt;/li>
&lt;li>
&lt;p>recommend target infrastructure&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/migrate/tutorial-migrate-hyper-v">Migrate Hyper-V VMs to Azure&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure Backup for VMs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/backup/backup-azure-vms-first-look-arm">Back up an Azure VM from the VM settings&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement disaster recovery&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/site-recovery/azure-to-azure-tutorial-enable-replication">Tutorial: Set up disaster recovery for Azure VMs&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure Update Management&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/automation/update-management/enable-from-vm">Enable Update Management for an Azure VM&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement load balancing and network security&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>implement Azure Load Balancer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-overview">What is Azure Load Balancer?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement an application gateway&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/application-gateway/overview">What is Azure Application Gateway?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement a Web Application Firewall&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/overview">What is Azure Web Application Firewall?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure Firewall&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/firewall/overview">What is Azure Firewall?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement the Azure Front Door Service&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/frontdoor/quickstart-create-front-door">Quickstart: Create a Front Door for a highly available global web application&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure Traffic Manager&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview">What is Traffic Manager?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Network Security Groups and Application Security Groups&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview">Network security groups&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-network/application-security-groups">Application security groups&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Bastion&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/bastion/">Azure Bastion documentation&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement and manage Azure governance solutions&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>create and manage hierarchical structure that contains management groups&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/governance/management-groups/overview">What are Azure management groups?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>subscriptions and resource groups&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-setup-guide/organize-resources?tabs=AzureManagementGroupsAndHierarchy">Organize your Azure resources effectively&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>assign RBAC roles&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal">Add or remove Azure role assignments using the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>create a custom RBAC role&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/custom-roles">Azure custom roles&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure access to Azure resources by assigning roles&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal">Add or remove Azure role assignments using the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure management access to Azure&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/learn/modules/manage-subscription-access-azure-rbac/">Manage access to an Azure subscription by using Azure role-based access control (RBAC)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>interpret effective permissions&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/check-access">Quickstart: Check access for a user to Azure resources&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>set up and perform an access review&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/governance/access-reviews-overview">What are Azure AD access reviews?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement and configure an Azure Policy&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/governance/policy/assign-policy-portal">Quickstart: Create a policy assignment to identify non-compliant resources&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement and configure an Azure Blueprint&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/governance/blueprints/overview">What is Azure Blueprints?&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Manage security for applications&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>implement and configure KeyVault&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/learn/modules/configure-and-manage-azure-key-vault/">Configure and manage secrets in Azure Key Vault&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement and configure Managed Identities&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=18fbca16-2224-45f6-85b0-f7bf2b39b3f3&amp;amp;nonce=ef221978-b465-49a1-9226-e8a0e4d25480&amp;amp;prompt=none&amp;amp;redirect_uri=https%3A%2F%2Fdocs.microsoft.com%2F_themes%2Fdocs.theme%2Fmaster%2Fen-us%2F_themes%2Fglobal%2Fsign-in.html&amp;amp;response_mode=fragment&amp;amp;response_type=id_token&amp;amp;scope=openid%20profile&amp;amp;sso_reload=true&amp;amp;state=silent%3A%2F%2Fhttps%3A%2F%2Fdocs.microsoft.com&amp;amp;fromOrigin=https%3A%2F%2Fdocs.microsoft.com&amp;amp;iframe-request-id=685d3411-99a9-4f94-81e4-d9b8af575600">What are managed identities for Azure resources?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>register and manage applications in Azure AD&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app">Quickstart: Register an application with the Microsoft identity platform&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;u>&lt;span style="font-size: large;">Implement Solutions for Apps (10-15%)&lt;/span>&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement an application infrastructure&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>create and configure Azure App Service&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=netcore31&amp;amp;pivots=platform-linux">Quickstart: Create an ASP.NET Core web app in Azure&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>create an App Service Web App for Containers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/learn/modules/deploy-run-container-app-service/">Deploy and run a containerized web app with Azure App Service&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>create and configure an App Service plan&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/app-service-plan-manage">Manage an App Service plan in Azure&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure an App Service&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/configure-common">Configure an App Service app in the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure networking for an App Service&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/web-sites-integrate-with-vnet">Integrate your app with an Azure virtual network&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>create and manage deployment slots&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/app-service/deploy-staging-slots">Set up staging environments in Azure App Service&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Logic Apps&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/logic-apps/quickstart-create-first-logic-app-workflow">Quickstart: Create your first Logic Apps workflow ‚Äì Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure Functions&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-first-azure-function">Create your first function in the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement container-based applicationsÔÇ∑ &lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>create a container image&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/container-registry/container-registry-quickstart-task-cli">Quickstart: Build and run a container image using Azure Container Registry Tasks&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure Azure Kubernetes Service&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal">Quickstart: Deploy an Azure Kubernetes Service (AKS) cluster using the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>publish and automate image deployment to the Azure Container Registry&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/container-instances/container-instances-using-azure-container-registry">Deploy to Azure Container Instances from Azure Container Registry&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>publish a solution on an Azure Container Instance&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/container-instances/container-instances-quickstart-portal">Quickstart: Deploy a container instance in Azure using the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;u>Implement and Manage Data Platforms (10-15%)&lt;/u>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement NoSQL databases&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>configure storage account tables&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/storage/tables/table-storage-quickstart-portal">Quickstart: Create an Azure Storage table in the Azure portal&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>select appropriate CosmosDB APIs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/learn/modules/choose-api-for-cosmos-db/">Choose the appropriate API for Azure Cosmos DB&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>set up replicas in CosmosDB&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/distribute-data-globally">Distribute your data globally with Azure Cosmos DB&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;span style="font-size: medium;">Implement Azure SQL databases&lt;/span>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>configure Azure SQL database settings&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/single-database-create-quickstart?tabs=azure-portal">Quickstart: Create an Azure SQL Database single database&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>implement Azure SQL Database managed instances&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-sql/managed-instance/sql-managed-instance-paas-overview">What is Azure SQL Managed Instance?&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>configure HA for an Azure SQL database&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/high-availability-sla">High availability for Azure SQL Database and SQL Managed Instance&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>publish an Azure SQL database&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Azure AD Sync &amp;#8211; Set-MsolDirSyncEnabled : You cannot turn off Active Directory synchronization.</title><link>https://rnemeth90.github.io/posts/2020-11-26-azure-ad-sync-set-msoldirsyncenabled/</link><pubDate>Thu, 26 Nov 2020 16:31:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-26-azure-ad-sync-set-msoldirsyncenabled/</guid><description>&lt;p>I recently ran into a situation in my lab environment that required I resync all (2000+) user accounts to Azure AD. Though this sounds complex and daunting, its actually quite simple. T&lt;/p>
&lt;p>The basic steps involve disabling sync, and then removing the user objects. This can all be done with two PowerShell commands:&lt;/p>
&lt;p>1) Set-MsolDirSyncEnabled -EnableDirSync $false&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-rGK18FXw7ns/X7_WthQR0CI/AAAAAAAAyCM/gg7MsY2fcVIcWMMbvxYzPpbpPyKwgHP8ACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image.png" alt="">&lt;/a>&lt;/p>
&lt;p>2) Get-MsolUser -All | Remove-MsolUser -force&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-miyfN7OISGo/X7_WzDCc6iI/AAAAAAAAyCQ/PtHURTTVMQ4uypzO7L1UaLfyEs0fpYGdACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-1.png" alt="">&lt;/a>&lt;/p>
&lt;p>The account that you are currently running the commands as will not be removed.&lt;/p>
&lt;p>To enable Azure AD Sync, you simply reverse the boolean operation on the Set-MsolDirSyncEnabled cmdlet above. However, I ran into an issue when trying to enable Azure AD Sync.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-R1TPVgYaEBE/X7_XM5_ljKI/AAAAAAAAyCY/VIJZnlgNEPQbhL9p3D0J3XsekBrGiNS3QCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-2.png" alt="">&lt;/a>&lt;/p>
&lt;p>After some research, it turns out you must wait a period of time (up to 12 hours in some cases) before you can make a second change to the Azure AD Sync status. This error simply means that we made a recent change to Azure AD Sync, and we must wait before making another change. To prove this, there is a ‚ÄúDirectorySynchronizationStatus‚Äù member for the Get-MsolCompanyInformation cmdlet. If we take a look at this member, we can see the status is ‚ÄúPendingDisabled‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-0OBwKDDD5xQ/X7_X1bBxXjI/AAAAAAAAyCk/FyRlaMpCDT4aBe08TL_8sLiwUBnHkcPJQCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-3.png" alt="">&lt;/a>&lt;/p>
&lt;p>Check the status of this periodically over the next 12 hours or so, and once it says ‚ÄúEnabled‚Äù or ‚ÄúDisabled‚Äù, you should be able to change the state once more.&lt;/p></description></item><item><title>Azure VM Scale Set &amp;#8211; Get Instance IP Address</title><link>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</link><pubDate>Thu, 19 Nov 2020 18:07:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</guid><description>&lt;p>If you are using VM Scale Sets in Azure, you know how important it can be to quickly obtain an instance IP address. This can of course be done using the Azure Portal. However, I am often working in a shell or VSCode, and I do not want to leave the comfort of my shell to login to the portal.&lt;/p>
&lt;p>There are a few options we have for retrieving information about a VMSS and its instances without using the Azure Portal. We can use PowerShell or the Azure CLI. Being that I am constantly flipping between Windows and Linux, I will detail both here.&lt;/p>
&lt;p>You will need to have the AZ module installed. To install this module, simple open PowerShell (as admin) and type in ‚ÄúInstall-Module -Name az‚Äù. To get the IP address of the instances within a scale set, use the following script:&lt;/p>
&lt;p>&lt;a href="https://github.com/rnemeth90/Get-VmssInstanceIpAddress">https://github.com/rnemeth90/Get-VmssInstanceIpAddress&lt;/a>&lt;/p>
&lt;p>You can also use the Azure CLI to obtain individual instance IP addresses. This method is much simpler than PowerShell, and only requires one line of code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>az vmss nic list ‚Äìresource-group myResourceGroup ‚Äìvmss-name myVmss | grep ‚Äìw ‚ÄúprivateIpAddress‚Äù
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Azure Policy &amp;#8211; Allowed Locations for Resource Deployment</title><link>https://rnemeth90.github.io/posts/2020-11-17-azure-policy-allowed-locations-for/</link><pubDate>Tue, 17 Nov 2020 17:52:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-17-azure-policy-allowed-locations-for/</guid><description>&lt;p>Azure Policy allows us to control what actions users can perform regarding creating and managing resources in Azure. We can define policies for naming standards, require that certain extensions be installed on virtual machines, audit various resources for certain configurations‚Ä¶ the possibilities are endless.&lt;/p>
&lt;p>In this article, well focus on defining what locations users can deploy resources in. To get started, login to the Azure Portal and search for ‚ÄúPolicy‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-7ao7r-Xj5Kk/X7QNKSrY3AI/AAAAAAAAx-8/xIUtw-pRL20pSMxsOaGUwnk-9XHSpup9ACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-4.png" alt="">&lt;/a>&lt;/p>
&lt;p>Click on ‚ÄúDefinitions‚Äù. Here you will find several built-in definitions that can be applied to your resources. Definitions are a json template containing the logic for what you want to accomplish. It is worth investing some time to look through these built-in definitions.&lt;/p>
&lt;p>In the ‚Äúsearch‚Äù field, type in ‚Äúlocation‚Äù. Then, click on the ‚ÄúAllowed Locations‚Äù definition.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-5FJ3EcMnG8k/X7QNP-1-5II/AAAAAAAAx_A/TH4cr4SxgbQiNVdoRlDyB_F4ukOV5bJvwCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-5.png" alt="">&lt;/a>&lt;/p>
&lt;p>Here you can see the json content of the definition. The ‚ÄúpolicyRule‚Äù section is the bread and butter of the definition. In this particular example, the policyRule states that if the location that the user is deploying a resource to is NOT a) in the list of allowed locations, b) global, or c) a b2c directory, then deny the deployment.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-WKsYDX4nao4/X7QNVcSEVJI/AAAAAAAAx_E/HIbPqLSHfBIjYRRZI27X7cLjStbnXlqaQCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-6.png" alt="">&lt;/a>&lt;/p>
&lt;p>Next, click on ‚ÄúAssign‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-Qg35QQcnGZY/X7QNarWcMbI/AAAAAAAAx_M/Et9yP9ZNyXEU1Ow8m5BwZG8RcTBaadInQCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-7.png" alt="">&lt;/a>&lt;/p>
&lt;p>You can assign the policy to a subscription or resource group. You can also create exclusions in this same window, and enable or disable the policy.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-16qmOT43oKo/X7QNfuX4KVI/AAAAAAAAx_Q/_0wak5v2CCA2yIrwLalJgvhCnBCCEJcOQCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-8.png" alt="">&lt;/a>&lt;/p>
&lt;p>Click ‚ÄúNext‚Äù, and on the Parameters page, choose the allowed locations from the drop down menu. Then click next.&lt;/p>
&lt;p>Azure Policy has the capability to remediate non-compliant resources. An example would be having a policy that requires anti-virus be installed on all servers. If Azure Policy detected a server that did NOT have anti-virus installed, it would use a managed identity to install AV software on the server. This particular policy does not need a remediation action, so we will just click ‚ÄúNext‚Äù here.&lt;/p>
&lt;p>On the Review + Create window, review the resource and then click ‚ÄúCreate‚Äù.&lt;/p>
&lt;p>Back on the Azure Policy blade, select ‚ÄúAssignments‚Äù. We can now see that our new policy is assigned.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-K8ofsNe1ALY/X7QNrf8dfkI/AAAAAAAAx_c/3R0DRk4LKWYcGP6-LJ3vgRUcUOQaZ6r3ACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-9.png" alt="">&lt;/a>&lt;/p>
&lt;p>Back on the ‚ÄúOverview‚Äù page, you can track compliance for the policy. We can see here that compliance for the ‚ÄúAllowed Locations‚Äù policy assignment has not yet been started. This typically takes an hour or so before the compliance state is updated.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-S-zq_cWBh7Y/X7QNvjMRUrI/AAAAAAAAx_k/CG194fTLqKIHqTNMmCyJzM4W9HJ_d6aPgCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-10.png" alt="">&lt;/a>&lt;/p>
&lt;p>Click on the Policy to get a more detailed view of compliance, view the definition, edit the assignment, and even create exemptions.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-9sdnYSeQZ7A/X7QNzt8EEdI/AAAAAAAAx_o/3-2_eyPVjxIFSINg8IzEhKwZzWGUgf9NQCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-11.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Replicate an Azure VM Image Between Regions</title><link>https://rnemeth90.github.io/posts/2020-11-03-replicate-azure-vm-image-between-regions/</link><pubDate>Tue, 03 Nov 2020 20:15:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-03-replicate-azure-vm-image-between-regions/</guid><description>&lt;p>Let‚Äôs say you have a VM in Azure North Central. You created this VM from a custom image that you maintain in an Azure image repository. Now, what if you wanted to create that same VM in Azure South Central, and use the same reference image? A standard image repository is limited to the region that it exists in. The answer here is to create a Shared Image Library, add the image to it, and then configure the image to replicate to other Azure regions.&lt;/p>
&lt;p>This article assumes you already have an image.&lt;/p>
&lt;p>First, create a Shared Image Gallery in Azure. Browse to the Azure portal (&lt;a href="https://portal.azure.com/">https://portal.azure.com&lt;/a>), and (from the home page) click ‚Äúcreate a resource‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-LQbh5w9zFN0/X6G5qBxrC1I/AAAAAAAAx5I/QH95DqgHJzUgkC5YhWqmQ_pOXmCygVHwQCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-12.png" alt="">&lt;/a>&lt;/p>
&lt;p>Search for ‚ÄúShared Image Gallery‚Äù and then click ‚ÄúCreate‚Äù.&lt;/p>
&lt;p>Configure a subscription, resource group, and then name the Shared Image Gallery and configure what region you want it to live in. You will want to create it in the same region as your standard image repository.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-61hBPxzwPzI/X6G5w_C7-iI/AAAAAAAAx5M/GVHvFpgE2WQwupil-OSd7nZ2nJEZRI0MgCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-13.png" alt="">&lt;/a>&lt;/p>
&lt;p>If you want to assign some tags to this new resource, continue to the next page. Otherwise, click ‚ÄúReview + Create‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-OCPyDsSbRYo/X6G52usmBSI/AAAAAAAAx5Q/nZJuX9YZzNsWU4aJwGNkZ5kulaXb5mcGgCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-14.png" alt="">&lt;/a>&lt;/p>
&lt;p>On the final page, if the validation is successful, click ‚ÄúCreate‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-gCwUW-ntoKA/X6G56AAogVI/AAAAAAAAx5Y/wcUUn2_P68MNl5wCWIqQTYGRqEvJMJm6QCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-15.png" alt="">&lt;/a>&lt;/p>
&lt;p>It should take less than a minute to create the shared image gallery. Once its created, click ‚ÄúGo to resource‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-mZQpi2f85MQ/X6G5-7FGFUI/AAAAAAAAx5c/vPOG47n736gp87Z2rftfjvL9OcGolOGxACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-16.png" alt="">&lt;/a>&lt;/p>
&lt;p>In the shared image gallery blade, click ‚ÄúAdd new image definition‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-qSWGjKuUMp4/X6G6CZsRAXI/AAAAAAAAx5g/-LYCx4Qmf98k2mbjM9CC-8mKVA-zp-8rACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-17.png" alt="">&lt;/a>&lt;/p>
&lt;p>On the next page, select the region where your existing image repository lives, give the image definition a name, and then fill out the rest of the information as needed. The publisher will typically be the name of your company/organization. The offer will typically be set to the name of the overall application, being that servers typically host one piece of an application (example: database servers vs. application servers). The SKU will typically be set to the name of the component within the application (for example, a web server or database server).&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-4ZaK5D-Y0FE/X6G6G3n8KsI/AAAAAAAAx5k/jd18bOcFQ1kP62-0zE1Vuhwx6WpRnEyGwCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-18.png" alt="">&lt;/a>&lt;/p>
&lt;p>Next, configure an image version. This should use the typical semantic format used in software development (major version, minor version, patch level). I will typically substitute the patch level with the date the image was captured. Probably not a best practice, but something that has served me well in the past.&lt;/p>
&lt;p>Next, select the source image. This will be the image that you are copying from your standard image repository. You can also configure an end of life date for the image version here if you wish. In the ‚ÄúTarget Regions‚Äù section at the bottom, select the region where you plan to create the new VM. Also select the target storage account type.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-6F59gxbQ7ws/X6G6PI4qVeI/AAAAAAAAx5w/x2SCNG8PawMUZRQS6q55kAvgsOfD8bnPACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-19.png" alt="">&lt;/a>&lt;/p>
&lt;p>You can configure some publishing options and tags on the following pages. Though, it is not required. Click ‚ÄúReview + create‚Äù. &lt;span style="mso-spacerun: yes;"> &lt;/span>&lt;span style="mso-spacerun: yes;"> &lt;/span>After the validation passes, click ‚ÄúCreate‚Äù.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-CyzD7E88UVU/X6G6TQGRu6I/AAAAAAAAx54/2yHQrYIFUp8P8JyWMuEbsfFL47UW8Il0ACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-20.png" alt="">&lt;/a>&lt;/p>
&lt;p>This process will take a few minutes to complete. Once its finished, click on ‚Äúgo to resource‚Äù. You now have an image that is available to be deployed in the north central region or the south central region.&lt;/p></description></item><item><title>Reset GRUB/root Password for vCenter/PSC Appliance</title><link>https://rnemeth90.github.io/posts/2020-10-31-reset-grubroot-password-for-vcenterpsc/</link><pubDate>Sat, 31 Oct 2020 01:22:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-31-reset-grubroot-password-for-vcenterpsc/</guid><description>&lt;p>In Redhat/Fedora/Cent, GRUB can be protected by running the grub-md5-crypt command and pasting the outputted password hash into the grub.conf file. vSphere 6.0 password protects grub by default. If you change the root password in the VAMI, the GRUB password is changed to match. If you do not change the root password, the GRUB password is ‚Äúvmware‚Äù.&lt;/p>
&lt;p>To reset the GRUB password, we need to boot into a Cent or Redhat live CD. The ISO can be obtained here: &lt;a href="https://www.centos.org/download/">https://www.centos.org/download/&lt;/a>. Its best to upload the ISO to a datastore that the appliance has access to.&lt;/p>
&lt;p>Stop the appliance and attach the ISO:&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image.png" alt="">&lt;/p>
&lt;p>Be sure to select the ‚ÄúConnect at Power On‚Äù option. Boot the VM into the ISO and select the ‚ÄúTroubleshooting‚Äù option.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-1.png" alt="">
Next, choose ‚ÄúRescure a Red hat (or CentOS depending on your ISO) Enterprise Linux System‚Äù&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-2.png" alt="">&lt;/p>
&lt;p>Select ‚ÄúContinue‚Äù to mount the VCSA 6.0‚Äôs root filesystem in Read/write mode under /mnt/sysimage. RHEL 7.2 is capable to detect the VCSA‚Äôs root volume and mounts it.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-3.png" alt="">&lt;/p>
&lt;p>The VCSA root filesystem is mounted under /mnt/sysimage and you can now access (and modify) it using the shell. Navigate to /mnt/sysimage/boot and list the contents. You‚Äôll see we now have access to the grub directory:&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-4.png" alt="">&lt;/p>
&lt;p>cd to the grub directory and list the contents. Look for a file called ‚Äúmenu.lst‚Äù. This file holds the grub boot loader password. Open this file with vi by typing ‚Äúvi menu.lst‚Äù. Navigate to the line beginning with ‚Äúpassword‚Äù using the arrow keys, and then type ‚Äúdd‚Äù to remove the line.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-5.png" alt="">
You can then save the file by pressing ‚Äú:wq‚Äù (without quotes). You can now cat the file and see that the password has been removed.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-6.png" alt="">&lt;/p>
&lt;p>Exit the shell (this will reboot the server). Detach the ISO and boot the appliance. Once the system is booted, stop the VCSA in the GRUB menu (by pressing the escape key during boot) to break the OS root password.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-7.png">&lt;/a>
Press ‚Äúe‚Äù to edit the boot commands for the kernel.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-8.png" alt="">&lt;/p>
&lt;p>Append ‚Äúinit=/bin/bash‚Äù to the line in this step and press enter.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-9.png" alt="">&lt;/p>
&lt;p>Press ‚Äúb‚Äù to boot the system.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-10.png" alt="">&lt;/p>
&lt;p>You will now boot into a bash shell where you can set the root password.&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-11.png" alt="">&lt;/p>
&lt;p>Once this is done, exit the shell by typing ‚Äúexit‚Äù. You can now boot the appliance and login with your new root password.&lt;/p></description></item><item><title>Deploy a New ADDS Forest on Server 2019 Core</title><link>https://rnemeth90.github.io/posts/2020-10-31-deploy-new-adds-forest-on-server-2019/</link><pubDate>Sat, 31 Oct 2020 01:02:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-31-deploy-new-adds-forest-on-server-2019/</guid><description>&lt;p>Prerequisites:&lt;/p>
&lt;p>Change server name and IP address
Configure time settings and NTP&lt;/p>
&lt;p>In this post we will be reviewing the basic installation of the Active Directory Domain Services role and setup of a new forest on Windows Server Core 2019.&lt;/p>
&lt;p>To get started, login to your server with administrator privileges. You will first need to type in ‚Äúpowershell‚Äù in the cmd prompt to start powershell. Once you do that, type in the following command to install the Active Directory Domain Services role:&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-LnSTbXjG2Hc/X5y3R3F-eWI/AAAAAAAAx2A/lWQBpA44Dmo-Jpbck2iPmgibU6z0DM1YwCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-12.png" alt="">&lt;/a>&lt;/p>
&lt;p>After installing the role, we‚Äôll continue by creating a new ADDS Forest and promoting this server to the primary domain controller.&lt;/p>
&lt;p>First, we‚Äôll need to gather a password. This password will not be used for a domain user account. The local administrator on this server will become the domain administrator account for the domain. The password we‚Äôre gathering in the next step will be used for Directory Services Restore Mode (DSRM). DSRM is a recovery mode used to recover domain controllers that won‚Äôt boot up. We technically only need a password, not a username for this account.&lt;/p>
&lt;p>Type in the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>$cred = Get-Credential
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the username field for the credentials prompt below, just type in anything you want, as the value will not be used. This prompt will store our username/password in a variable object. We can then access the password within the credential object by typing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>$cred.password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can see that this password is stored as a secure string object. Let‚Äôs continue on with the Directory Services installation.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-n-W0yvwr2Zs/X5y3X64NjZI/AAAAAAAAx2E/rx5urA7p_NMl3peX5g0J7Ax7biWwNADAgCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-13.png" alt="">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-0k-aZrMhyGw/X5y3ckH10pI/AAAAAAAAx2I/FS56uvXCirAaBHKwWmIRQ4xIGU_jp_GFwCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-14.png" alt="">&lt;/a>&lt;/p>
&lt;p>Once we have our credential variable, we can install a new forest and domain controller using the command below. Let us break down what this cmd is doing:&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-OF_HVfCPZIM/X5y3ijEA5YI/AAAAAAAAx2M/0vMV3CJczT8D3q5x8hzPAZVSL5DycplBACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-15.png" alt="">&lt;/a>&lt;/p>
&lt;p>Install-ADDSForest: The powershell cmdlet to create a new forest and domain controller&lt;/p>
&lt;p>-DomainName: The domain name to be used for the forest&lt;/p>
&lt;p>-DomainNetBiosName: The domain ‚ÄúShort name‚Äù to be used for the forest. This is the value used when you type in a username in the domainusername format. Example ‚ÄúmyDomainbgates‚Äù.&lt;/p>
&lt;p>-SafeModeAdministratorPassword: The value we captured in our credential prompt above. This is used for Directory Services Restore Mode. This mode can be accessed by pressing F8 while the server is booting. It is commonly used for recovering a failed domain controller.&lt;/p>
&lt;p>-DatabasePath: The path for the Active Directory database. It‚Äôs a best practice to put this database on its own disk.&lt;/p>
&lt;p>-LogPath: The directory for ADDS log files&lt;/p>
&lt;p>-DomainMode: The domain functional level. The domain functional level specifies the attributes and capabilities available to objects within the domain. The higher the level you choose, the more features will be available to you.&lt;/p>
&lt;p>-ForestMode: The forest functional level. Similar to the domain functional level but applies to the entire forest.&lt;/p>
&lt;p>-InstallDNS: Install the DNS role alongside the ADDS role.&lt;/p>
&lt;p>-WhatIf: This is a powershell ‚Äúthing‚Äù. Most cmdlets have the ‚Äúwhatif‚Äù parameter. It basically allows you to run the cmdlet in ‚Äútest‚Äù mode without actually making any changes to your environment. Once you‚Äôre happy with the output, you can remove the ‚Äúwhatif‚Äù parameter and run the command to install ADDS and promote this server to a domain controller.&lt;/p></description></item><item><title>Could not connect to VMware Directory Service via LDAP when Deploying New vCenter Appliance</title><link>https://rnemeth90.github.io/posts/2020-10-28-could-not-connect-to-vmware-directory/</link><pubDate>Wed, 28 Oct 2020 13:51:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-28-could-not-connect-to-vmware-directory/</guid><description>&lt;p>Problem:&lt;/p>
&lt;p>Deploying a brand new vCSA 6.7 appliance results in the following error during the second stage of the deployment.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h29_02.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h29_02.png" alt="">&lt;/a>&lt;span style="text-align: left;"> &lt;/span>&lt;/p>
&lt;p>Solution:&lt;/p>
&lt;p>This problem is almost always caused by DNS resolution. Once you create the appropriate A and PTR record for your appliance on a LOCAL DNS server, you should be to successfully complete the deployment. Local DNS resolution is required, you cannot use a public DNS server while installing vCenter. For example, 8.8.8.8 will not work.&lt;/p>
&lt;p>Since you have already completed Stage 1 of the deployment, you can login to the appliance via SSH and update the DNS settings. This will only work if you chose to enable SSH during Stage 2 of the deployment.&lt;/p>
&lt;p>SSH to the appliance and run ‚Äú/opt/vmware/share/vami/vami_config_net‚Äù (without quotes). Choose option 4 to update DNS settings and option 3 to update the hostname (if necessary). The deployment wizard states that a hostname is optional, but it is actually required. I have never had a successful deployment without specifying the hostname.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h33_18.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h33_18.png" alt="">&lt;/a>&lt;/p>
&lt;p>You can then verify the DNS settings have been updated in the resolve.conf:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h33_57.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_07h33_57.png" alt="">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_08h47_36.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/2020-10-28_08h47_36.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Cisco AnyConnect &amp;#8211; VPN Establishment Capability from a Remote Desktop is Disabled</title><link>https://rnemeth90.github.io/posts/2020-10-07-cisco-anyconnect-vpn-establishment/</link><pubDate>Wed, 07 Oct 2020 13:28:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-07-cisco-anyconnect-vpn-establishment/</guid><description>&lt;p>I ran into this issue this morning when attempting to setup a VPN on a Hyper-V virtual machine. After an hour of searching the Google machine and troubleshooting, I came upon this solution.&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-BYApW8vZjV8/X33B2Or4D7I/AAAAAAAAxuY/hWQwpE-fqo4xInAsx9vyUvzDJXqxe68QQCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-16.png" alt="">&lt;/a>&lt;/p>
&lt;p>Upon installation, AnyConnect pulls down a profile from the ASA containing several settings. This profile is in xml format and is located (on a Windows machine) at %programdata%CiscoCisco AnyConnect Secure Mobility ClientProfileAnyConnectProfile.xsd.&lt;/p>
&lt;p>To resolve this issue and connect to your VPN, open this file with notepad (or any text editor, run as admin), search for the ‚ÄúWindowsVPNEstablishment‚Äù tag, and modify the value. The default value is ‚ÄúLocalUsersOnly‚Äù, you will need to change it to ‚ÄúAllowRemoteUsers‚Äù. Save and close the file, then restart the machine.&lt;/p>
&lt;p>BEFORE:&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-izGUUyhtWyM/X33Bh8YdqGI/AAAAAAAAxuQ/rBbXsqWhe5wZYoGmjXwyyidGmu1kCNVmgCLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-17.png" alt="">&lt;/a>&lt;/p>
&lt;p>AFTER:&lt;/p>
&lt;p>&lt;a href="https://lh3.googleusercontent.com/-wFFu1JOXymQ/X33CVp0cImI/AAAAAAAAxug/fibXC6JHmkkilFtWv8641x20flapCibYACLcBGAsYHQ/image.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/10/image-18.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Error When Reinstalling DirSync</title><link>https://rnemeth90.github.io/posts/2019-01-14-error-when-reinstalling-dirsync/</link><pubDate>Mon, 14 Jan 2019 21:47:04 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2019-01-14-error-when-reinstalling-dirsync/</guid><description>&lt;p>Today is just not my day! After a failed attempt at installing/configuring DirSync, I removed it and tried to install and configure it again. This time did not prove any more successful. I was getting this error midway through the install process:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/1.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/1.png" alt="">&lt;/a>&lt;/p>
&lt;p>I was able to figure this out after a little while and wanted to sure what I learned. If you are seeing this error message after removing DirSync and trying to reinstall, here‚Äôs what you need to do:&lt;/p>
&lt;p>‚Ä¢ Uninstall Windows Azure Active Directory Sync tool and reboot&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/2.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/2.png" alt="">&lt;/a>&lt;/p>
&lt;p>‚Ä¢ Remove this directory and all subfolders: C:\Program Files\Windows\Azure Active Directory Sync&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/3.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/3.png" alt="">&lt;/a>&lt;/p>
&lt;p>‚Ä¢ If you created a domain account to use for DirSync, remove it. Also remove the Office 365 account you created.
‚Ä¢ Delete the Group accounts that the DirSync wizard created. Their names all begin with ‚ÄúFIM‚Äù&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/4.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/4.png" alt="">&lt;/a>&lt;/p>
&lt;p>‚Ä¢ Uninstall MSSQL
‚Ä¢ Delete the MSSQL directory: C:Program FilesMicrosoft SQL Server
‚Ä¢ Reboot!
‚Ä¢ You should be able to install and configure DirSync now.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/5.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/5.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Active Directory Migration Toolkit &amp;#8211; The RPC Server is Unavailable (hr=0x800706ba)</title><link>https://rnemeth90.github.io/posts/2018-08-21-active-directory-migration-toolkit-rpc/</link><pubDate>Tue, 21 Aug 2018 17:34:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-08-21-active-directory-migration-toolkit-rpc/</guid><description>&lt;p>When migrating computer objects using the Active Directory Migration Tool, you may encounter the following error:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_09.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_09.png" alt="">&lt;/a>&lt;/p>
&lt;p>In addition, the Migration Log may show the following error:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_20.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-03_11h20_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>This is typically caused by a host-side firewall. To resolve this, deploy a GPO to disable the Windows firewall prior to migrating the computer account. I like to create a special OU for computers (I typically name it ‚ÄúPreMigration‚Äù) that I will move computer objects to prior to migrating them. This OU will have two policies applied. One to disable the Windows Firewall and another to start the Remote Registry service. Both are required for the computer object to successfully migrate.&lt;/p></description></item><item><title>Azure Site Recovery &amp;#8211; VMware-to-Azure: Wrong IP address discovered for VM</title><link>https://rnemeth90.github.io/posts/2018-08-21-azure-site-recovery-vmware-to-azure/</link><pubDate>Tue, 21 Aug 2018 17:26:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-08-21-azure-site-recovery-vmware-to-azure/</guid><description>&lt;p>When replicating virtual machines from VMware to Azure using Site Recovery, you may encounter an issue where the Configuration server discovers the wrong IP address for a VM. This can be caused by stale entries within the infrastructurevms MySQL table that is used by ASR to track VM attributes.&lt;/p>
&lt;p>To resolve this issue, you first need to disable replication for the VM in the Azure Portal.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-21_13h20_26.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-21_13h20_26.png" alt="">&lt;/a>&lt;/p>
&lt;p>Next, login to your ASR Configuration Server and open a CMD prompt as administrator. Browse to the bin directory for your ASR installation. For example, in my case ASR is installed on the E: partition under the following directory:&lt;/p>
&lt;p>E:\Program Files (x86)Microsoft Azure Site Recoveryhomesvsystemsbin&lt;/p>
&lt;p>Type in this command to remove the VM from the ASR database (replace IP address with the IP of your VM):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-perl" data-lang="perl">&lt;span style="display:flex;">&lt;span>perl Unregister&lt;span style="color:#f92672">-&lt;/span>ASRComponent&lt;span style="color:#f92672">.&lt;/span>pl &lt;span style="color:#f92672">-&lt;/span>IPAddress &lt;span style="color:#ae81ff">10.0.0.4&lt;/span> &lt;span style="color:#f92672">-&lt;/span>Component Source
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That‚Äôs it. You should now be able to reconfigure replication for the VM, and ASR will discover the correct info about the VM.&lt;/p></description></item><item><title>Azure AD Connect No-Start-Connection</title><link>https://rnemeth90.github.io/posts/2018-07-26-azure-ad-connect-no-start-connection/</link><pubDate>Thu, 26 Jul 2018 12:22:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-26-azure-ad-connect-no-start-connection/</guid><description>&lt;p>This morning, I ran into an issue with Azure AD Connect that I had never seen before. I received an email alert from Azure AD stating that Password Synchronization was not working for my forest, and the suggested fix was to restart the ADSync service on the server. I restarted the service and then forced a sync to verify it was working.&lt;/p>
&lt;p>After forcing the sync, I opened miisclient and noticed some strange errors. We sync multiple on-prem AD forests to Azure AD, and the status for one of them was ‚Äúno-start-connection‚Äù. That error in itself does not seem significant to me. However, after clicking on the ‚Äúfailed-connection‚Äù link in the Connection Status pane, things became much more clear.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-26_08h03_05.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-26_08h03_05.png" alt="">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-26_08h03_18.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-26_08h03_18.png" alt="">&lt;/a>&lt;/p>
&lt;p>The domain controllers for the forest in question are in a datacenter that is geographically separated from the datacenter that our Azure AD Sync server lives in. The two sites are connected via a S2S VPN.&lt;/p>
&lt;p>There was obviously some type of connection issue between our two datacenters. In my case, the issue was transient, and resolved itself after a few minutes. But if you‚Äôre experiencing this error message, check your L2/L3 connection. Also, verify DNS is working and someone didn‚Äôt make changes to your firewall(s). Just walk up or down the OSI model and you‚Äôll eventually find the problem.&lt;/p></description></item><item><title>Azure AD Connect Health: Latest Data is not Available in Azure Portal</title><link>https://rnemeth90.github.io/posts/2018-07-18-azure-ad-connect-health-latest-data-is/</link><pubDate>Wed, 18 Jul 2018 16:38:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-18-azure-ad-connect-health-latest-data-is/</guid><description>&lt;p>I recently had to create a new Azure AD Connect server, and found that it was not able to report health status in the Azure Portal. After some troubleshooting/research, I was able to get the health status report working by registering the health agent on the server with Azure AD Health Services. Doing this involves running one PowerShell cmdlet on your AD Connect server and providing global administrator credentials.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_56.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_56.png" alt="">&lt;/a>&lt;/p>
&lt;p>First, let‚Äôs test the status of the agent communication:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_19.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_19.png" alt="">&lt;/a>&lt;/p>
&lt;p>If you do not receive any errors, that means the Azure AD Connect Health agent on your server is able to successfully communicate with the cloud service. Now, let‚Äôs register the agent:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_05.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_05.png" alt="">&lt;/a>&lt;/p>
&lt;p>You will be prompted for credentials. The credentials you provide need to be a global administrator account in your Azure AD tenant.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_42.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_42.png" alt="">&lt;/a>&lt;/p>
&lt;p>You should receive some output stating that the registration is successful (or it failed).&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h25_20.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h25_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>Now, just go back to the Azure Portal and refresh the page. The message stating that the
‚Äúlatest data is not available‚Äù should be gone.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h36_42.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h36_42.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Removing a Forest from Azure AD Connect</title><link>https://rnemeth90.github.io/posts/2018-07-13-removing-forest-from-azure-ad-connect/</link><pubDate>Fri, 13 Jul 2018 15:30:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-13-removing-forest-from-azure-ad-connect/</guid><description>&lt;p>In an organization with multiple Active Directory forests, you may want to sync objects from trusted forests. Adding trusted forests to Azure AD Sync is a simple process that I will likely cover in a future article. The focus of this post is the not-so-obvious process of removing a forest from Azure AD Connect. This can be a daunting and somewhat scary thing to do. Not fully understanding the process or having someone to guide you can leave you with thoughts like ‚Äúwhat happens when I remove the forest from Azure AD Sync? Do on-premises objects get deleted? Are cloud objects deleted?‚Äù. I will try to answer these questions to the best of my ability and hopefully make the process simple and stress-free for you.&lt;/p>
&lt;p>To get started, we first need to open PowerShell and disable the AD Sync scheduler. You can do this by running the ‚ÄúSet-ADSyncScheduler‚Äù cmdlet:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h47_05.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h47_05.png" alt="">&lt;/a>&lt;/p>
&lt;p>This cmdlet is included in the ADSync PowerShell module. You may need to load the module prior to using the cmdlet:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>Import-Module ADSync
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The next step is to open FIM (miisclient) located in the install directory of Microsoft Azure AD Sync. By default, this is C:Program FilesMicrosoft Azure AD SyncUIShellmiisclient.exe. Once you have FIM open, click on the Connectors tab, then right click on the connector for the forest that you want to delete, and click ‚ÄúDelete‚Äù.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h50_26.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h50_26.png" alt="">&lt;/a>&lt;/p>
&lt;p>You will then be prompted, asking if you want to just delete the Connector Space, or delete the Connector and the Connector Space. The former open removes all data, but keeps the configuration in case you want to use it again later. The latter option deleted the data and the configuration. This open should only be used if you don‚Äôt plan on syncing the forest again.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h50_09.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h50_09.png" alt="">&lt;/a>&lt;/p>
&lt;p>The connector for the forest is now deleted, but what actually happens? Your on-premises objects do not get removed for the forest, and cloud objects &lt;strong>are&lt;/strong> removed. Simple enough, right?&lt;/p>
&lt;p>Now you just need to re-enable the AD Sync Scheduler with this cmdlet:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>Set-ADSyncScheduler -SyncCycleEnabled $true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>One last thing to mention‚Ä¶ You may receive an email from the Microsoft Online Services Team stating that the identity synchronization failed due to a deletion threshold being met. By default, Azure AD Connect will not allow you to delete more than 500 objects in your cloud directory. This is to protect you from making a careless (potentially resume generating) mistake. The email will look something like this:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h56_04.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_10h56_04.png" alt="">&lt;/a>&lt;/p>
&lt;p>If you are certain that you want to proceed with deleting the objects, here are the steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Disable the deletion threshold protection. Open PowerShell on your Azure AD Sync server and type in this cmdlet: Disable-ADSyncExportDeletionThreshold. You will be prompted for credentials, sign-in with an Azure AD Global Admin account.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open FIM (miisclient), and click on the ‚ÄúConnectors‚Äù button at the top of the window. Right click on the connector of type ‚ÄúWindows Azure Active Directory‚Äù, and select ‚ÄúRun‚Ä¶‚Äù.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_11h07_39.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_11h07_39.png" alt="">&lt;/a>&lt;/p>
&lt;ol start="3">
&lt;li>Next, click Export and then click Ok.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_11h07_58.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-13_11h07_58.png" alt="">&lt;/a>&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;p>Allow the connector to run. This will take a few minutes. You can monitor the progress by clicking the Operations button.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once this completes, you need to re-enable the deletion threshold. You can do this by running this cmdlet: &lt;span style="background: #F9F9F9;">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>Enable-ADSyncExportDeletionThreshold -DeletionThreshold 500.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will be prompted for credentials again. Just type in your Azure AD Global Admin creds. You can even lower the threshold if you‚Äôd like. I set mine to 100.&lt;/p></description></item><item><title>Remove Stubborn PSC or vCenter Appliance from an SSO Domain</title><link>https://rnemeth90.github.io/posts/2017-11-08-remove-stubborn-psc-or-vcenter/</link><pubDate>Wed, 08 Nov 2017 07:56:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-11-08-remove-stubborn-psc-or-vcenter/</guid><description>&lt;p>While attempting to decommission one of our vCenter sites, I ran into an issue removing one of the PSCs. This site consisted of two PSCs and one vCenter appliance. I removed the first PSC from the SSO domain successfully, and then removed the vCenter appliance. Things became a little tricky during the removal of the final PSC. This PSC did not get removed even after running the cmsso-util command. This article will detail the steps I took in decommissioning the site, as well as removing the stubborn PSC.&lt;/p>
&lt;p>First, we need to check if vCenter is currently using the PSC we plan on decommissioning. If it is, we need to use the cmsso-util command to redirect vCenter to a different PSC. Instructions for redirecting vCenter can be found here: &lt;a href="https://kb.vmware.com/s/article/2113917?language=en_US">https://kb.vmware.com/s/article/2113917?language=en_US&lt;/a>&lt;/p>
&lt;p>To check what PSC your vCSA is currently pointing to, browse to the Advanced Settings for the vCSA in the vSphere Web Client. Filter by this key: config.vpxd.sso.admin.uri&lt;/p>
&lt;p>To remove a PSC or vCSA from an SSO domain, connect to a PSC via SSH and run these commands:&lt;/p>
&lt;p>To remove a PSC from the vSphere SSO domain:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cmsso-util unregister ‚Äìnode-pnid psc01.ad.vcplab.local ‚Äìusername administrator@your&lt;span style="color:#ae81ff">\_&lt;/span>domain&lt;span style="color:#ae81ff">\_&lt;/span>name ‚Äìpasswd vCenter&lt;span style="color:#ae81ff">\_&lt;/span>Single&lt;span style="color:#ae81ff">\_&lt;/span>Sign&lt;span style="color:#ae81ff">\_&lt;/span>On&lt;span style="color:#ae81ff">\_&lt;/span>password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To remove a vCSA from the vSphere SSO domain:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cmsso-util unregister ‚Äìnode-pnid vcsa.ad.vcplab.local ‚Äìusername administrator@your&lt;span style="color:#ae81ff">\_&lt;/span>domain&lt;span style="color:#ae81ff">\_&lt;/span>name ‚Äìpasswd vCenter&lt;span style="color:#ae81ff">\_&lt;/span>Single&lt;span style="color:#ae81ff">\_&lt;/span>Sign&lt;span style="color:#ae81ff">\_&lt;/span>On&lt;span style="color:#ae81ff">\_&lt;/span>password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After running these commands, delete the virtual appliances. You can also verify the appliances have been removed by browsing to Administration &amp;gt; System Configuration &amp;gt; Nodes in the vSphere Web Client.&lt;/p>
&lt;p>If cmsso-util fails to remove any of the nodes, you can use this command to force the removal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>vdcleavefed -h vcsa.ad.vcplab.local -u Administrator -w Passw0rd!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Upon successful completion, you should see something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>/usr/lib/vmware-vmdir/bin/vdcleavefed -h vcsa.ad.vcplab.local -u administrator* password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vdcleavefd offline &lt;span style="color:#66d9ef">for&lt;/span> server vcsa.ad.vcplab.local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Leave federation cleanup &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When specifying the username, use the SSO admin (administrator). However, do not use the full UPN (&lt;a href="mailto:administrator@vsphere.local">administrator@vsphere.local&lt;/a>). Doing so will cause the command to fail.&lt;/p></description></item><item><title>Exchange 2016 Hybrid Deploy Check: Username or Password Invalid</title><link>https://rnemeth90.github.io/posts/2017-11-07-exchange-2016-hybrid-deploy-check-username-or-password-invalid/</link><pubDate>Tue, 07 Nov 2017 13:30:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-11-07-exchange-2016-hybrid-deploy-check-username-or-password-invalid/</guid><description>&lt;p>These days, it seems every Microsoft product comes with its own unique set of head scratchers. Microsoft Exchange Server is no exception to this. I was installing Exchange 2016 earlier today, to be used as a hybrid configuration server for Office 365 (no local mailboxes). I downloaded the self depackaging executable from Microsoft, and attempted to install it. If you currently have a hybrid configuration (which we did, with Exchange 2010), the Exchange 2016 installer will detect this and run some tests to verify that the Office 365 tenant is ready for Exchange 2016 (more info here: &lt;a href="https://technet.microsoft.com/en-us/library/ms.exch.setup.hybridconfigurationstatuspage(v=exchg.160).aspx">https://technet.microsoft.com/en-us/library/ms.exch.setup.hybridconfigurationstatuspage(v=exchg.160).aspx&lt;/a>). You‚Äôll be prompted for Office 365 credentials (the user must have the Organization Management role). Seems simple enough, right? Wrong.&lt;/p>
&lt;p>After typing in the username and &lt;em>pasting&lt;/em> the password into the password field, setup came back with an error message stating the username or password was wrong. I then clicked the back button, and it crashed. I ran through this process a few more times, all with the same outcome. I even rebooted the server, which (in my opinion) should never be the resolution to a software problem. I looked through setup logs and found no indication of what the problem could be‚Ä¶&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/11/2017-11-07_12h57_08.png" alt="">&lt;/p>
&lt;p>It was on the fourth try that I typed in the password, and this seemed to work. I didn‚Äôt receive any error messages about the credentials being wrong. The Exchange setup seemed to continue on successfully. However, it then failed with a different error:&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/11/2017-11-07_13h12_02.png" alt="">&lt;/p>
&lt;p>I again looked through the setup logs and found that this error happened anytime setup tried to run the ‚ÄúGet-OrganizationConfig‚Äù cmdlet. After troubleshooting for a little while, and no resolution in sight, I turned to Google. One of the posts I came across said that this is a bug in the Exchange installer, and to try and use the Cumulative Update installer instead. Apparently, with Exchange 2016, the Cumulative Update installer‚Äôs include all of the Exchange binaries, not just the updated binaries. I downloaded the installer for CU7 (all 6 gigabytes of it‚Ä¶) and successfully installed Exchange 2016. Hope this helps anyone out there struggling with this.&lt;/p></description></item><item><title>Migrate Windows Deployment Services to New Server</title><link>https://rnemeth90.github.io/posts/2017-06-27-migrate-windows-deployment-services-to-new-server/</link><pubDate>Tue, 27 Jun 2017 09:21:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-27-migrate-windows-deployment-services-to-new-server/</guid><description>&lt;p>We have been making a great effort to move all of our internal services to Windows Server 2016. This past week, it was WDS‚Äô turn to get migrated. Migrating this role is extremely simple. Here are the steps that I took:&lt;/p>
&lt;ol>
&lt;li>Create new server and install WDS role.&lt;/li>
&lt;li>Stop WDS Service on old server&lt;/li>
&lt;li>Stop WDS Service on new server&lt;/li>
&lt;li>Use my ‚ÄúCopy-Files‚Äù PowerShell script (Available Here: &lt;a href="https://gallery.technet.microsoft.com/scriptcenter/Copy-Files-17cba2ae">Copy-Files.ps1&lt;/a>) to copy RemoteInstall Share to new server&lt;/li>
&lt;li>Start WDS Service on new Server&lt;/li>
&lt;li>Shutdown old WDS Server completely&lt;/li>
&lt;li>Update option 66/67 in DHCP scopes to reflect new WDS Server&lt;/li>
&lt;li>Update any appropriate DNS records&lt;/li>
&lt;/ol>
&lt;p>Note:&lt;/p>
&lt;p>If you are unable to start the WDS service, delete the WDS database and logs from the old server located at &amp;lt;drive letter&amp;gt;:RemoteInstallStoresMetadata*.*. You should be able to start the service after deleting these files.&lt;/p>
&lt;p>Simple enough! üôÇ&lt;/p></description></item><item><title>New Script: BulkAdd-SpamFilterWhitelist.ps1</title><link>https://rnemeth90.github.io/posts/2017-06-26-new-script-bulkadd-spamfilterwhitelist/</link><pubDate>Mon, 26 Jun 2017 22:16:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-26-new-script-bulkadd-spamfilterwhitelist/</guid><description>&lt;p>This script is capable of adding a list of domains to an Exchange Online Spam Filter policy. It can be downloaded from TechNet or Github.&lt;/p>
&lt;p>&lt;a href="https://github.com/rnemeth90/PowerShell/blob/master/BulkAdd-SpamFilterWhitelist.ps1">Github&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://gallery.technet.microsoft.com/BulkAdd-SpamFilterWhitelist-2d2b596a">TechNet&lt;/a>&lt;/p></description></item><item><title>Windows 8 File History</title><link>https://rnemeth90.github.io/posts/2017-06-22-windows-8-file-history-windows-8-file-history/</link><pubDate>Thu, 22 Jun 2017 22:42:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-22-windows-8-file-history-windows-8-file-history/</guid><description>&lt;p>File history in Windows 8 allows users to automatically ‚Äúbackup‚Äù files that are in their libraries, contacts, favorites, Skydrive, and on the desktop. If the files are lost, they can be quickly restored. You can also restore a file from a specific point in time, being that File History creates a complete history of your files over time. You will need a separate drive other than the one you have Windows 8 installed on to use File History. To begin using it, connect an external drive and search for File History on the Start Screen:&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2014-11-15_14h19_47.png" alt="">&lt;/p>
&lt;p>After opening File History, you will see this screen:&lt;/p>
&lt;p>&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2014-11-15_14h20_32.png" alt="">&lt;/p>
&lt;p>To enable File History, click the ‚ÄòTurn On‚Äô button. You can select the drive you want to use by clicking ‚ÄòSelect Drive‚Äô on the left hand side from this same screen. The first time you enable File History, it will create a full backup of all files on your computer, except for files that you do not access (system files), and files you have chosen to exclude. From then on, it will create a versioned copy of every file that has changed since the last backup.&lt;/p>
&lt;p>You can use a locally attached drive or a network share for File History. To choose how often File History backs up files; choose ‚ÄòAdvanced Settings‚Äô. From here you can also choose how much space on the drive is used, and how long saved versions of files should be kept.&lt;/p>
&lt;p>When the total space allocated to File History has been used, the feature will delete the oldest versions of files to make room for newer versions.&lt;/p></description></item><item><title>How to Permanently Remove Office 365 Users</title><link>https://rnemeth90.github.io/posts/2017-06-20-how-to-permanently-remove-office-365-users/</link><pubDate>Tue, 20 Jun 2017 18:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-20-how-to-permanently-remove-office-365-users/</guid><description>&lt;p>After deleting a user in Office 365, their account is moved to a ‚Äòrecycle bin‚Äô for 30 days. This allows the user account to be easily recovered. This can often cause issues when attempting to recreate a mailbox while a hybrid configuration is in place.&lt;/p>
&lt;p>To permanently delete the user within Office 365, first delete the user in the Office 365 Admin Portal or using Powershell. Then, connect to your Azure Active Directory environment with Powershell using the ‚ÄúConnect-MsolService‚Äù cmdlet.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h06_20.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h06_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>To see a list of user accounts currently in the recycle bin, run this cmdlet:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h09_47.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h09_47.png" alt="">&lt;/a>&lt;/p>
&lt;p>Then, to permanently delete all accounts in the recycle bin, run this cmdlet:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h10_16.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h10_16.png" alt="">&lt;/a>&lt;/p>
&lt;p>To remove a specific user, run this cmdlet:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h11_15.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-20_14h11_15.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Access is Denied When Attempting to Delete a Dynamic Distribution Group</title><link>https://rnemeth90.github.io/posts/2017-06-12-access-is-denied-when-attempting-to-delete-a-dynamic-distribution-group/</link><pubDate>Mon, 12 Jun 2017 13:41:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-06-12-access-is-denied-when-attempting-to-delete-a-dynamic-distribution-group/</guid><description>&lt;p>You may receive the error below when attempting to delete a dynamic distribution group.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h29_20.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h29_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>To resolve this, open ADUC and show advanced features (Click View &amp;gt; Advanced Features). Then find the object for the dynamic distribution group and open the properties window. Browse to the ‚ÄúObject‚Äù tab and uncheck the ‚ÄúProtect object from accidental deletion‚Äù box. Wait for ADDS to replicate or force replication yourself.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h34_20.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/06/2017-06-12_09h34_20.png" alt="">&lt;/a>&lt;/p>
&lt;p>Go back to the ECP and you should be able to delete the group.&lt;/p></description></item><item><title>Running vSphere in VMware Workstation 12</title><link>https://rnemeth90.github.io/posts/2017-05-29-running-vsphere-in-vmware-workstation-12/</link><pubDate>Mon, 29 May 2017 01:09:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2017-05-29-running-vsphere-in-vmware-workstation-12/</guid><description>&lt;p>In this post I‚Äôll be walking through how to run a vSphere lab in VMware Workstation. I recently decided to obtain VCP6-DCV. Rather than driving up my electric bill like I‚Äôve done in the past using physical servers, I‚Äôm attempting to run the entire lab on my workstation and a Synology NAS.&lt;/p>
&lt;p>If you‚Äôve ever installed ESXi, installing it in Workstation will be a familiar process for you. VMware tools is included in the installation disc, which makes installing ESXi in Workstation dramatically easier than it used to be. . The process is very simple, so I won‚Äôt be going through those steps here unless someone asks me to in the comments. I also will not be going through the process of installing Windows Server or configuring a domain controller/DNS/DHCP, as I am sure you have done so in the past if you are reading this.&lt;/p>
&lt;p>So that really only leaves us with installing vCenter. Most of the blogs I found for installing vCenter in VMware Workstation 12 were not accurate, and often left me with a broken installation. The process is somewhat straight-forward when deploying from the OVA. Let‚Äôs get started.&lt;/p>
&lt;p>First, download the OVA for vCenter here: &lt;a href="https://my.vmware.com/web/vmware/details?productId=614&amp;amp;downloadGroup=VC650">Download vCenter&lt;/a>&lt;/p>
&lt;p>Once the download has completed, click File &amp;gt; Open in Workstation. Browse to the OVA, then give your new VM a name and location if necessary. Accept the EULA when prompted.&lt;/p>
&lt;p>Be sure to read it! üòé&lt;/p>
&lt;p>Once the OVA finishes importing, do not power on the VM! There is some customization we need to do first. Close Workstation if it is open. Browse to the location on your PC that you imported the VM to. I‚Äôm using a Windows OS, so I will use File Explorer. Open the .VMX file (use Notepad or another text editor):&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-28_21h00_04.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-28_21h00_04.png" alt="">&lt;/a>&lt;/p>
&lt;p>This is the configuration file for your virtual machine. We can use it to customize the name, IPv4/6 details, DNS domain, etc. Scroll down to the last line of text, and paste this in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>guestinfo.cis.vmdir.password &lt;span style="color:#f92672">=&lt;/span> ‚Äúvmware!‚Äù
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guestinfo.cis.appliance.net.addr.family &lt;span style="color:#f92672">=&lt;/span> ‚Äúipv4‚Äù
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guestinfo.cis.appliance.net.addr &lt;span style="color:#f92672">=&lt;/span> ‚Äú10.0.0.15‚Äù
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guestinfo.cis.appliance.net.prefix &lt;span style="color:#f92672">=&lt;/span> ‚Äú24‚Äù
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guestinfo.cis.appliance.net.mode &lt;span style="color:#f92672">=&lt;/span> ‚Äústatic‚Äù
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guestinfo.cis.appliance.net.dns.servers &lt;span style="color:#f92672">=&lt;/span> ‚Äú10.0.0.10‚Äù
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guestinfo.cis.appliance.net.gateway &lt;span style="color:#f92672">=&lt;/span> ‚Äú10.0.0.1‚Äù
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guestinfo.cis.appliance.root.passwd &lt;span style="color:#f92672">=&lt;/span> ‚Äúvmware!‚Äù
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Customize the above code to your needs. You will likely need to change the IPv4 details. Save the .VMX file and close your text editor. Now you can power on the virtual machine, and vCenter will run through the installation process. The installation can take around 10-15 minute in my experience. You may see generic login screens during the installation of Photon, do not login or interrupt the installation. Once it is complete, you should see the DCUI below:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-24_10h11_00.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-24_10h11_00.png" alt="">&lt;/a>&lt;/p>
&lt;p>You should now be able to browse to the IP address or DNS name of your vCenter server. Once you complete the configuration, you can login and see the page below:
&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-24_10h10_39.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-24_10h10_39.png" alt="">&lt;/a>&lt;/p>
&lt;p>In my lab I am running 3 ESXi hosts, 1 Windows Server, and one vCenter server. Plenty to study for the VCP lab.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-24_10h11_31.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2017/05/2017-05-24_10h11_31.png" alt="">&lt;/a>&lt;/p>
&lt;p>Good luck and be sure to leave a comment if you have any questions!&lt;/p></description></item><item><title>WSUS: Update Files Not Downloading (Content File Download Failed)</title><link>https://rnemeth90.github.io/posts/2016-11-18-wsus-update-files-not-downloading/</link><pubDate>Fri, 18 Nov 2016 15:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-18-wsus-update-files-not-downloading/</guid><description>&lt;p>This article will discuss an issue regarding WSUS failing to download updates from Microsoft Update servers. You may notice that the home page of your WSUS console states that it has downloaded 0MB of updates:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png" alt="">&lt;/a>&lt;/p>
&lt;p>You may also see this event (or similar) in the Event Log.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png" alt="">&lt;/a>&lt;/p>
&lt;p>This problem is caused by not specifying a valid path when assigning the WSUS content drive when first installing the role. The first time you load the WSUS console after installing the role, you will be prompted to specify the path to store Windows Update files. WSUS does not like to have its content directory be the root of a partition. For example, if I were to specify ‚Äúe:‚Äù as the path for the Windows Update content, the wizard would give you an error message stating that the path is not valid. However, it doesn‚Äôt prompt you to re-enter the path if you click close. The WSUS console opens immediately after and that invalid path is where WSUS will try to store your update files. This is and has been a known bug for a while and needs to be addressed by Microsoft. Evidence of the invalid path can be found in the registry under:&lt;/p>
&lt;p>HKLMSoftwareMicrosoftUpdate ServicesServerSetupContentDir&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_44.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_44.png" alt="">&lt;/a>&lt;/p>
&lt;p>If you come across this problem, you can change the ContentDir above to a valid path. Keep in mind that it cannot be the root of a partition. You need to specify a drive letter with a subfolder (eg: e:wsus).&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h54_54.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h54_54.png" alt="">&lt;/a>&lt;/p>
&lt;p>The other option is to reinstall the WSUS role. If you remove the role, the WID database is not removed, unless you remove that role as well (or manually delete the database). This means that when you reinstall the WSUS role, it will be able to use that same database and any clients that have contacted the WSUS server will immediately show up in the console. The same is true for update metadata. The new WSUS installation will still have the same approvals, denials, etc. as the old installation.&lt;/p>
&lt;p>Regardless of what option you choose, I suggest rebooting the server after you make the changes.&lt;/p></description></item><item><title>WSUS: An error occurred trying to connect the WSUS server</title><link>https://rnemeth90.github.io/posts/2016-11-10-wsus-an-error-occurred-trying-to-connect-the-wsus-server/</link><pubDate>Thu, 10 Nov 2016 15:18:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-10-wsus-an-error-occurred-trying-to-connect-the-wsus-server/</guid><description>&lt;p>Ran into this error message when configuring a new WSUS server:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_00.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_00.png" alt="">&lt;/a>&lt;/p>
&lt;p>Restarted the WSUS, WID, and IIS services to no avail. I even rebooted the server. The WSUS console would work for a short period of time, and then would randomly stop working.&lt;/p>
&lt;p>I found that the WSUS app pool in IIS was being disabled anytime new clients connected to the server. I believe this was because the app pool was running out of usable memory.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h28_56.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h28_56.png" alt="">&lt;/a>&lt;/p>
&lt;p>You can manually start the app pool in IIS, but it will continue to crash.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_48.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_48.png" alt="">&lt;/a>&lt;/p>
&lt;p>The solution for me was to increase the memory limit available for the application pool:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h57_38.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h57_38.png" alt="">&lt;/a>&lt;/p>
&lt;p>By default it is only configured to use just under 2 GBs. I reconfigured it to use up to 4 GB and the WSUS console has not crashed since. After re-configuring the memory for the application pool, run an IIS reset or reboot the server.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h31_40.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h31_40.png" alt="">&lt;/a>&lt;/p>
&lt;p>UPDATE: Setting the Private Memory Limit to ‚Äú0‚Äù will allow the application pool to use whatever amount of memory it needs.&lt;/p></description></item><item><title>WDS Service: The Service did not respond in a timely fashion</title><link>https://rnemeth90.github.io/posts/2016-11-10-wds-service-the-service-did-not-respond-in-a-timely-fashion/</link><pubDate>Thu, 10 Nov 2016 02:19:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-10-wds-service-the-service-did-not-respond-in-a-timely-fashion/</guid><description>&lt;p>This was a new one for me. Usually WDS is rock solid and it just works.&lt;/p>
&lt;p>Anyway, I was getting ready to deploy some servers in my lab and found that I couldn‚Äôt get WDS to start on my deployment server. I got this error message when trying to start the service:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_29.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_29.png" alt="">&lt;/a>&lt;/p>
&lt;p>I then tried to start the service from the Services console and got this error message:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_42.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_42.png" alt="">&lt;/a>&lt;/p>
&lt;p>‚ÄúThis was just working yesterday‚Äù, I said to myself. What could possibly have happened since yesterday evening that could cause this? I looked in the event log and after scrolling through the Administrative Events, I found this:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h04_33.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h04_33.png" alt="">&lt;/a>&lt;/p>
&lt;p>The solution was so obvious it was staring me in the face, but I wanted to verify first. So I fired up a cmd prompt and ran netstat, and found this:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h06_14.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h06_14.png" alt="">&lt;/a>&lt;/p>
&lt;p>I had installed DHCP on this server the night before and totally forgot about it. Anyway, the solution was simple. I just needed to tell the WDS service to not listen on port 67. To do that, just open the WDS server properties and got to the ‚ÄúDHCP‚Äù tab. Then check the box next to ‚ÄúDo not listen on DHCP Ports‚Äù.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h08_04.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h08_04.png" alt="">&lt;/a>&lt;/p>
&lt;p>I was then able to start the DHCP service.&lt;/p></description></item><item><title>Script to Move All Disabled AD Objects to a Specified OU</title><link>https://rnemeth90.github.io/posts/2016-10-06-script-to-move-all-disabled-ad-objects-to-a-specified-ou/</link><pubDate>Thu, 06 Oct 2016 03:03:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-10-06-script-to-move-all-disabled-ad-objects-to-a-specified-ou/</guid><description>&lt;p>The title says it all. This script will move all disabled AD objects to a specified OU. This script accepts parameters that will allow you to specify whether you want to move Users or Computers and the destination OU. It also accepts a ‚Äútest mode‚Äù parameter that will run the script and output the results, without actually modifying Active Directory.&lt;/p>
&lt;p>This is revision 1 of the script. There are still several improvements I would like to make, including better error handling and recovery.&lt;/p>
&lt;p>If you have any suggestions or requests, please leave a comment.&lt;/p>
&lt;p>&lt;a href="https://drive.google.com/open?id=0B2K6VOnt6zeXMVFleWZISHZBTnc">Download Here&lt;/a>&lt;/p></description></item><item><title>Exchange 2013: Error 0x80070070 While Adding DAG Member</title><link>https://rnemeth90.github.io/posts/2016-10-04-exchange-2013-error-0x80070070-while/</link><pubDate>Tue, 04 Oct 2016 00:21:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-10-04-exchange-2013-error-0x80070070-while/</guid><description>&lt;p>Error: A server-side database availability group administrative operation failed. Error Failed to add or remove the Failover-Clustering feature. Error: The request to add or remove features on the specified server failed. A DISM session could not be opened. An error occurred accessing the temporary folder C:WindowsTEMP57ACE2DE-4CD2-4F5F-B7A0-93D867A89A12. Ensure that the path to the temporary folder exists and that you have Read/Write permissions on the folder. Error: 0x80070070&lt;/p>
&lt;p>Solution: I was attempting to remotely add the DAG member from the ECP on my workstation. I logged into the server and found that the system drive was nearly full (~100MB free). Luckily this mailbox server was a virtual machine, and I was able to quickly expand the drive using VMM. After doing this I was able to successfully add the mailbox server to the DAG.&lt;/p></description></item><item><title>Script for Setting the License for Multiple Office 365 User Accounts</title><link>https://rnemeth90.github.io/posts/2016-04-11-script-for-setting-the-license-for-multiple-office-365-user-accounts/</link><pubDate>Mon, 11 Apr 2016 01:25:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-04-11-script-for-setting-the-license-for-multiple-office-365-user-accounts/</guid><description>&lt;p>A script for setting the Office 365 license for multiple users. Requires a CSV file named users.csv. This file must in the same directory as the script. The CSV file must contain three columns. The title of the columns should be UPN, UsageLocation, and SKU.&lt;/p>
&lt;p>&lt;a href="https://drive.google.com/open?id=0B2K6VOnt6zeXZ2Z6OFZhZVoyenc">BulkSet-MsolUserLicense.ps1&lt;/a>&lt;/p></description></item><item><title>The User Profile Service service failed the logon</title><link>https://rnemeth90.github.io/posts/2015-12-30-the-user-profile-service-service-failed-the-logon/</link><pubDate>Wed, 30 Dec 2015 10:38:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-12-30-the-user-profile-service-service-failed-the-logon/</guid><description>&lt;p>One of my clients had a really strange issue the other day. He has a domain admin account in his domain and was not able to login to a server that I recently built. The server was an Exchange 2013 box, and was used in Coexistence mode to migrate his company from an Exchange 2007 box.&lt;/p>
&lt;p>He was getting this error message when attempting to login:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h38_53.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h38_53.png" alt="">&lt;/a>&lt;/p>
&lt;p>This is a classic error message that I‚Äôm sure most technicians have seen before. Usually the resolution is to go into the registry and rename the user profile key to have a ‚Äú.bak‚Äù extension and then do some other magic. However, this time, that was not the case. I looked in the registry and didn‚Äôt even see a reg key for his profile. I then looked in the c:users folder and didn‚Äôt see a folder for his profile. Strange‚Ä¶&lt;/p>
&lt;p>So what exactly was happening? Well, I took a look at the Event Viewer and found this error message:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h34_06.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h34_06.png" alt="">&lt;/a>&lt;/p>
&lt;p>I browsed to the file referenced in the error message and deleted it. Walla! He was able to login with his admin account. I‚Äôm not sure why this file was in the default user profile. It has something to do with Customer Experience Improvement Program:&lt;/p>
&lt;p>&lt;a href="http://www.nextofwindows.com/what-is-sqmdata-and-sqm-file-in-windows-7-and-how-to-delete-them">http://www.nextofwindows.com/what-is-sqmdata-and-sqm-file-in-windows-7-and-how-to-delete-them&lt;/a>&lt;/p></description></item><item><title>Azure AD Connect Password Sync &amp;#8211; Disabled and Grayed Out</title><link>https://rnemeth90.github.io/posts/2015-10-15-azure-ad-connect-password-sync-disabled/</link><pubDate>Thu, 15 Oct 2015 10:18:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-10-15-azure-ad-connect-password-sync-disabled/</guid><description>&lt;p>Ran into a problem earlier with the new Azure AD Connect Wizard. We had configured the wizard and synced around 500 AD accounts. However, password sync was not working. I opened the wizard to confirm the configuration and found that ‚ÄúPassword Hash Synchronization‚Äù was disabled. It was greyed out and could not be enabled.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_08h43_18.jpg">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_08h43_18.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>I called Microsoft and worked for a couple hours with a technician to resolve the issue. Thought I should post the resolution here in case anyone else encounters this.&lt;/p>
&lt;p>You can enable password sync by running the following script:&lt;/p>
&lt;p>Import-Module ADSync&lt;/p>
&lt;p>$adConnector = ‚Äú&amp;lt;Local AD Connector Name&amp;gt;‚Äù&lt;/p>
&lt;p>$aadConnector = ‚Äú&amp;lt;Azure AD Connector Name&amp;gt;‚Äù&lt;/p>
&lt;p>Set-ADSyncAADPasswordSyncState -ConnectorName $aadConnector ‚ÄìEnable $true&lt;/p>
&lt;p>Set-ADSyncAADPasswordSyncConfiguration -SourceConnector $adConnector -TargetConnector $aadConnector -Enable $true&lt;/p>
&lt;p>get-ADSyncAADPasswordSyncConfiguration -sourceconnector $adConnector&lt;/p>
&lt;p>You need to set the value of the $adConnector and $aadConnector variables with the names of your Connectors found in the MIISClient.&lt;/p>
&lt;p>Open the MIISClient by browsing to:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_09h39_42.jpg">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_09h39_42.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>Right click on MIISClient.exe and click ‚ÄúRun As Administrator‚Äù.&lt;/p>
&lt;p>You can obtain the names of your connectors in by going to the Connectors tab and looking at the Names column. There are two values here that you need to pay attention to. The Windows Azure Active Directory connector is your Azure Connector (obviously), and the other connector is your on-prem connector.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_09h39_31.jpg">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_09h39_31.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>Now that you have the names, just plug them into the script and run it. You can go back to the Azure AD Connect Wizard and verify that password sync is enabled. You can also go to the Event Viewer -&amp;gt; Application log and look for events 576 and 577. These two events are related to password sync and should show you all AD accounts that have successfully synced passwords.&lt;/p>
&lt;p>You can force a sync by going to this location and running ‚ÄúDirectorySyncClientCmd.exe‚Äù.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_10h21_12.jpg">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/10/2015-10-15_10h21_12.jpg" alt="">&lt;/a>&lt;/p></description></item><item><title>Finding All Mailboxes with a Forwarding Address in Exchange 2003</title><link>https://rnemeth90.github.io/posts/2015-09-07-finding-all-mailboxes-with-a-forwarding-address-in-exchange-2003/</link><pubDate>Mon, 07 Sep 2015 23:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-09-07-finding-all-mailboxes-with-a-forwarding-address-in-exchange-2003/</guid><description>&lt;p>Believe it or not, the MSP I work for still has a client who is using Exchange 2003 as their primary email service. Despite several attempts at convincing them of the power of Office 365, they refuse to migrate. Last week the CFO contacted me and requested we provide them with a report of all users who have their email forwarded to another mailbox. ‚ÄúOk, no problem.‚Äù I said helpfully as the client informed me of their request (at the time I didn‚Äôt even think about them having Exchange 2003‚Ä¶). I figured I would just connect to their server and do some quick PowerShell magic, and that would be it. Quick and painless, right? Wrong.&lt;/p>
&lt;p>I did the RDP dance and got connected to their server, and my jaw just about hit the floor when I couldn‚Äôt find the Exchange Management Shell! I asked around the office to see if any of the other guys could help, but no one knew what to do. However, after talking with one of the guys, I remembered that this is Active Directory we are dealing with. There are objects, and those objects have attributes. The mailboxes/user accounts are objects, and those objects have attributes. So what attribute is it that controls forwarding addresses? I manually found one of the users who had a forwarding address configured. Then I opened up Active Directory Users and Computers, opened up her account properties, and went to the Attribute Editor tab. I filtered for attributes that have values and was able to see the email address that her mail was forwarding to. This was the ‚ÄúaltRecipient‚Äù attribute.&lt;/p>
&lt;p>I then did an ‚ÄúAdvanced‚Äù search in Active Directory Users and Computers for any objects that have the ‚ÄúaltRecipient‚Äù attribute configured, like so:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/09/ExchangeForwarding.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/09/ExchangeForwarding.png" alt="">&lt;/a>&lt;/p>
&lt;p>This search showed me all of the mailboxes that have an alternate recipient (forwarding address) configured. Not sure if there is another way to obtain this information, but this is the way that worked for me. Hopefully this article is able to help someone in the same situation.&lt;/p></description></item><item><title>Script for Querying All AD Computers Time Source</title><link>https://rnemeth90.github.io/posts/2015-09-01-script-for-querying-all-ad-computers-time-source/</link><pubDate>Tue, 01 Sep 2015 21:05:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-09-01-script-for-querying-all-ad-computers-time-source/</guid><description>&lt;p>This script will iterate through all computers in Active Directory and return the configured time server for each computer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &lt;/span>&lt;span style="color:#e6db74">.SYNOPSIS&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Get time source for all computers in domain
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &lt;/span>&lt;span style="color:#e6db74">.EXAMPLE&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Get-TimeSource
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &lt;/span>&lt;span style="color:#e6db74">.NOTES&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Author: Ryan Nemeth - RyanNemeth@live.com
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Site: http://www.geekyryan.com
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &lt;/span>&lt;span style="color:#e6db74">.LINK&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> http://www.geekyryan.com
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &lt;/span>&lt;span style="color:#e6db74">.DESCRIPTION&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> This function will iterate through all computers/servers in a domain and return the time source
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> for each.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Write-Host -foregroundcolor Red -BackgroundColor black &lt;span style="color:#e6db74">&amp;#34;This script must be run on a domain controller and requires that the AD Powershell module be installed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$module = Get-Module -ListAvailable | Select-Object -ExpandProperty Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>($module &lt;span style="color:#f92672">-notcontains&lt;/span> &lt;span style="color:#e6db74">&amp;#34;ActiveDirectory&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host -foregroundcolor red -backgroundcolor black &lt;span style="color:#e6db74">&amp;#34;***Active Directory Powershell Module Not Found***&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host -foregroundcolor yellow &lt;span style="color:#e6db74">&amp;#34;Found Active Directory Powershell Module. Importing...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Import-Module ActiveDirectory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$computers = get-adcomputer -filter * | Select-Object -ExpandProperty Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span>($computer &lt;span style="color:#66d9ef">in&lt;/span> $computers) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $tm_source = w32tm /query /computer&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>$computer /source
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> write-host &lt;span style="color:#e6db74">&amp;#34;The time source for&amp;#34;&lt;/span> $computer &lt;span style="color:#e6db74">&amp;#34;is&amp;#34;&lt;/span> $tm_source
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/rnemeth90/PowerShell/blob/master/NTP/Get-TimeSource.ps1" alt="">&lt;/p></description></item><item><title>Error When Reinstalling DirSync</title><link>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</link><pubDate>Thu, 13 Aug 2015 18:59:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</guid><description>&lt;p>Today is just not my day! After a failed attempt at installing/configuring DirSync, I removed it and tried to install and configure it again. This time did not prove any more successful. I was getting this error midway through the install process:&lt;/p>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/1.png">&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/1.png" alt="">&lt;/a>&lt;/p>
&lt;p>I was able to figure this out after a little while and wanted to sure what I learned. If you are seeing this error message after removing DirSync and trying to reinstall, here‚Äôs what you need to do:&lt;/p>
&lt;ul>
&lt;li>Uninstall Windows Azure Active Directory Sync tool and reboot
&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/2.png">&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/2.png" alt="">&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Remove this directory and all subfolders: C:Program FilesWindows Azure Active Directory Sync
&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/3.png">&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/3.png" alt="">&lt;/a>&lt;/p>
&lt;p>If you created a domain account to use for DirSync, remove it. Also remove the Office 365 account you created.&lt;/p>
&lt;ul>
&lt;li>Delete the Group accounts that the DirSync wizard created. Their names all begin with ‚ÄúFIM‚Äù&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/4.png">&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/4.png" alt="">&lt;/a>&lt;/p>
&lt;p>Uninstall MSSQL:&lt;/p>
&lt;ul>
&lt;li>Delete the MSSQL directory: C:Program FilesMicrosoft SQL Server&lt;/li>
&lt;li>Reboot!&lt;/li>
&lt;li>You should be able to install and configure DirSync now.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/5.png">&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/5.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Failed to Mount Exchange 2010 Database</title><link>https://rnemeth90.github.io/posts/2015-08-12-failed-to-mount-exchange-2010-database/</link><pubDate>Wed, 12 Aug 2015 12:59:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-08-12-failed-to-mount-exchange-2010-database/</guid><description>&lt;p>Recently, one of my users‚Äô came to me and said he was missing two months worth of email. This was just after migrating to Exchange Online. We were using Exchange 2010 with System Center DPM for backups.&lt;/p>
&lt;p>I restored the database that the users‚Äô mailbox was on from a backup then copied it over to the Exchange server from the network share I restored it to. All was going well, until I tried to mount the darn thing.&lt;/p>
&lt;p>I was getting this error and could not for the life of me decry-pt the meaning of it. There is obviously some type of IO issue/file not found. But what could it be?&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/1-1.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/1-1.png" alt="">&lt;/a>&lt;/p>
&lt;p>I figured I‚Äôd better kick this one off with some basic troubleshooting. First, I checked the health of the database and made sure it was clean. Passed that test‚Ä¶&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/2-1.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/2-1.png" alt="">&lt;/a>&lt;/p>
&lt;p>Then ran a repair on the database, to no avail.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/3-1.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/3-1.png" alt="">&lt;/a>&lt;/p>
&lt;p>After racking my brain for a good thirty minutes, and a few failed Google searches, I found the solution. It was so simple! I created the log file directory in the folder with the database, and voila, the database mounted without a single error!&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/7.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/7.png" alt="">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/4-1.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/4-1.png" alt="">&lt;/a>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/5-1.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/5-1.png" alt="">&lt;/a>&lt;/p>
&lt;p>I was able to see the ‚Äòsupposed‚Äô location of the log file by opening the Exchange Management Shell and running the ‚ÄòGet-MailboxDatabase‚Äô cmdlet, like so:&lt;/p>
&lt;p>&lt;em>Get-MailBoxDatabase ‚ÄìIdentity &lt;Recovery DB Name> | FL Name, ServerName, EDBFilePath, LogFolderPath&lt;/em>&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/08/6.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/08/6.png" alt="">&lt;/a>&lt;/p>
&lt;p>I‚Äôm not sure why the database mounting process isn‚Äôt capable of creating the log file directory‚Ä¶ I think Microsoft would have thought and planned for a situation like this. Hope this helps!&lt;/p></description></item><item><title>Ping Sweeping with FPing</title><link>https://rnemeth90.github.io/posts/2015-03-09-ping-sweeping-with-fping/</link><pubDate>Mon, 09 Mar 2015 01:08:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-03-09-ping-sweeping-with-fping/</guid><description>&lt;p>I generally use NMAP for any type of host discovery, but recently started experimenting with FPing. One thing I found is that, when performing a ping sweep, not only do I see the hosts that replied to the ping, but FPing also sends any unreachable IP addresses to stdout (which is super annoying and ugly if you ask me‚Ä¶).&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/03/2015-03-08_21h04_50.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/03/2015-03-08_21h04_50.png" alt="">&lt;/a>&lt;/p>
&lt;p>Anyway, after a bit of research, I found a nifty way to suppress these messages. Linux allows us to redirect all error messages to /dev/null. So instead of just running the vanilla fping -a -g‚Ä¶. you would run the program and output all error messages /dev/null, like so:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/03/2015-03-08_21h07_14.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/03/2015-03-08_21h07_14.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Powershell: SID to Username</title><link>https://rnemeth90.github.io/posts/2014-12-08-powershell-sid-to-username-powershell-sid-to-username/</link><pubDate>Mon, 08 Dec 2014 13:43:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-powershell-sid-to-username-powershell-sid-to-username/</guid><description>&lt;p>This is a simple script to convert a SID to a username&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Returns a username based on a SID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Author: Ryan Nemeth&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Date: 12/2/2014&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$SID = read-host &lt;span style="color:#960050;background-color:#1e0010">‚Äú&lt;/span>Please enter the SID&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">‚Äù&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$object = New-Object System.Security.Principal.SecurityIdentifier($SID)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$User = $object.Translate( \[System.Security.Principal.NTAccount\])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>write-host &lt;span style="color:#960050;background-color:#1e0010">‚Äú&lt;/span>The user is&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">‚Äù&lt;/span> $User.Value
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>DHCP Address Negotiation Process</title><link>https://rnemeth90.github.io/posts/2014-12-08-dhcp-address-negotiation-process/</link><pubDate>Mon, 08 Dec 2014 03:08:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-dhcp-address-negotiation-process/</guid><description>&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/12/2014-12-07_22h07_33.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/12/2014-12-07_22h07_33.png" alt="">&lt;/a>&lt;/p></description></item><item><title>Unlock a Domain User from CMD Line</title><link>https://rnemeth90.github.io/posts/2014-12-08-unlock-domain-user-from-cmd-line/</link><pubDate>Mon, 08 Dec 2014 02:11:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-unlock-domain-user-from-cmd-line/</guid><description>&lt;p>To unlock a domain user from the command line, use this command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>net user &amp;amp;lt;username&amp;amp;gt; /domain /active:yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This can also be done using Powershell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Powershell" data-lang="Powershell">&lt;span style="display:flex;">&lt;span>Unlock-ADAccount -identity &lt;span style="color:#960050;background-color:#1e0010">‚Äú&lt;/span>CN=John,OU=myUsers,DC=myDomain,DC=local&lt;span style="color:#960050;background-color:#1e0010">‚Äù&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>The Case of Transitive Trusts and Dropped RPC Connections</title><link>https://rnemeth90.github.io/posts/2014-11-25-the-case-of-transitive-trusts-and-dropped-rpc-connections/</link><pubDate>Tue, 25 Nov 2014 01:27:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-25-the-case-of-transitive-trusts-and-dropped-rpc-connections/</guid><description>&lt;p>I was at a client earlier this morning, working to get a transitive forest trust setup between their two domains. Setting up the trust on ServerA to DomainB went without issue. However, when trying to create the trust between ServerB and DomainA, I received this error: The secure channel reset on Active Directory Domain Controller (Your domain controller) of domain (Your domain) to domain (your other domain) failed with error: RPC server is unavailable.&lt;/p>
&lt;p>Troubleshooting (as always) started off with the basics: is the firewall on or off, are the services running, are the names being properly resolved, etc. Well, the Windows Firewall on both servers was off and
the RPC services were running. So what now?? I fired up NMAP on ServerB and did a syn scan on ServerA. After reviewing the output, I could see that the ports were open. I then went over to ServerA and opened up the Services MSC console. The RPC services appeared to be running. Being that they are system services and you cannot manually interact with them, I was unable to manually restart them. Just out of curiosity,&lt;/p>
&lt;p>I opened a command prompt while connected to that server and ran Netstat -A. This is when I had the ‚ÄúAHA!‚Äù moment. Nothing was listening on any of the RPC ports! I rebooted the server (something I don‚Äôt really like to do..), logged in and ran Netstat -A again. This time, RPC was listening. I went back over to ServerB, walked through the New Trust Wizard, and success! Oh, the feeling of victory!&lt;/p></description></item><item><title>Creating Applocker Policies</title><link>https://rnemeth90.github.io/posts/2014-11-17-creating-applocker-policies/</link><pubDate>Mon, 17 Nov 2014 01:40:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-17-creating-applocker-policies/</guid><description>&lt;p>Application Control Policies can be used to restrict what programs a user is allowed to run. They can be created at the local Group Policy level or the Domain GPO level. There are 4 different types of Applocker RULES that you can implement, depending on what type of executable you want to control access to.&lt;/p>
&lt;p>Executable Rules ‚Äì EXE‚Äôs, COM‚Äôs, etc.&lt;/p>
&lt;p>Script Rules ‚Äì batch files, VB scripts, etc.&lt;/p>
&lt;p>AppX Rules ‚Äì AppX Packages (Windows 8.1/Server 2012 R2 Metro Interface programs)&lt;/p>
&lt;p>Windows Installer Rules ‚Äì Windows Installer Packages and MSU Packages&lt;/p>
&lt;p>After choosing what type of executable file you want to control, you can choose the corresponding rule type. Then, you will be able to choose the criteria for that rule type. Applocker rule criteria are things such as file path, publisher, and file hash. Criteria allow you to be more granular with your selections. Rather than saying you want to block access to ALL executable‚Äôs on a computer, you can choose to block access to executable‚Äôs published by a certain vendor, or found in a specified directory.&lt;/p>
&lt;p>Applocker can be found in the Group Policy Editor at: Computer Configuration\Windows Settings\Security Settings. Application Control Policies. By right-clicking on the Applocker node, you can configure rule enforcement. You have the option to enforce rules or audit rules based on rule type. Auditing will allow&lt;/p>
&lt;p>you get a good grasp on what Applocker will do in your environment if you are unsure.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_20h18_31.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_20h18_31.png" alt="">&lt;/a>&lt;/p>
&lt;p>Clicking the Advanced tab of this window will allow you to configure rule enforcement for Dynamic Link Libraries. It‚Äôs best to leave DLL rule enforcement disabled, because it can cause a system to suffer dramatic performance hits.&lt;/p>
&lt;p>Underneath the Applocker node, you will find nodes for the 4 different rule types. You can create new rules by right clicking on any of these nodes and clicking ‚ÄúCreate New Rule‚Äù. Before creating any rules, I advise you to create the default rules. Doing this will ensure that users are still able to run programs in the Program Files directory and the Windows directory. Also, members of the built-in Administrators group will be allowed to run ANY files.&lt;/p>
&lt;p>When creating custom Applocker rules, you can choose to allow or deny the program, and what group the rule will apply to (by default, the ‚ÄúEveryone‚Äù special identity is always selected).&lt;/p>
&lt;p>You will also be able to choose the criteria for the executable that you are controlling.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_20h26_30.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_20h26_30.png" alt="">&lt;/a>&lt;/p>
&lt;p>If the executable has a digital signature from the software publisher, choose ‚ÄúPublisher‚Äù. Doing so will give you even more options:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_20h28_47.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_20h28_47.png" alt="">&lt;/a>&lt;/p>
&lt;p>This allows you to really drill down and get granular with the rule. Microsoft allows us to control access to the file based on the Publisher, the Product Name, the File Name, and even the File Version.&lt;/p>
&lt;p>Creating rules based on File Path criteria is not advised, being that if the file jumps directories, the rule will no longer apply. I also don‚Äôt advise using the File Hash criteria. My reason behind this is, if the file gets updated, the hash changes. If that happens, the rule is no longer valid.&lt;/p>
&lt;p>After choosing the criteria type you would like to use, you can choose to create exceptions, if any. When multiple rules conflict, the order of precedence is Publisher, File Hash, and then File Path. So Publisher rules will always override File Hash rules, File Hash rules will always override File Path rules, and you get the point‚Ä¶&lt;/p>
&lt;p>Finally, in order for your endpoint workstations to process Applocker rules, the Application Identity Service must be running. I like to control this with the same GPO that I configure Applocker in.&lt;/p></description></item><item><title>TCP/IP Network Fundamentals</title><link>https://rnemeth90.github.io/posts/2014-11-16-tcpip-network-fundamentals/</link><pubDate>Sun, 16 Nov 2014 21:20:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-16-tcpip-network-fundamentals/</guid><description>&lt;p>Going over the basics of network fundamentals and all the models and ideas behind them. The most pushed idea is the OSI networking model which consists of 7 layers, all of which deal with a certain aspect of the networking model.&lt;/p>
&lt;p>A P S T N D P&lt;/p>
&lt;p>From the top down this represents the following&lt;/p>
&lt;p>Layer 7: Application ‚Äì This layer is the channel between software and external requests. For example, a web server would work with this layer to process HTTP requests.&lt;/p>
&lt;p>Layer 6: Presentation ‚Äì This layer organizes data formats such as JPEG, Text, ASCII, etc&lt;/p>
&lt;p>Layer 5: Session ‚Äì This layer deals with session control; How a conversation should start, function, and end. It can be considered the broken between the layer below and the layers above. It will ensure all the data is proper when being passed up or down.&lt;/p>
&lt;p>Layer 4: Transport ‚Äì This layer is solely focused on data delivery. It deals with many protocols, but most notably it deals with TCP and UDP packets, any checksum errors, and error recovery&lt;/p>
&lt;p>Layer 3: Network ‚Äì This layer deals with logical addressing and routing. It deals with the actual delivery of packets across multiple networks.&lt;/p>
&lt;p>Layer 2: Data Link ‚Äì This layer deals with the rules of how data can be transmitted over a wire such as CSMA/CD and the like. It also deals with encapsulating frames to be transported over a local network&lt;/p>
&lt;p>Layer 1: Physical ‚Äì The actual hardware and electrical signaling to move data over the network. Network cards, cabling, and other hardware are part of this layer&lt;/p>
&lt;p>Generic overview of the OSI model above lets work on the idea of some older and modern networks.&lt;/p>
&lt;p>Hubs ‚Äì Devices that simply take a signal and regenerate it out of all ports that are connected.&lt;/p>
&lt;p>Switches ‚Äì Devices that take a signal and make some sort of smart decision to provide a single path from one port to another&lt;/p>
&lt;p>Routers ‚Äì Devices that make decisions based upon higher level information (logical addressing) and will make intelligent decisions on how to handle that data, both incoming and outgoing. Segments networks into two different ones.&lt;/p>
&lt;p>Bridge ‚Äì A device that segments a network in two.&lt;/p>
&lt;p>Collision Domain ‚Äì The bounds where a collision may occur. This is relevant for networks utilizing half-duplex communication and for older devices such as hubs.&lt;/p>
&lt;p>Broadcast Domain ‚Äì The bounds where a broadcast can reach.&lt;/p>
&lt;p>Collision Domains: Forgive the visio art, it will get better‚Ä¶ hopefully&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h18_36.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h18_36.png" alt="">&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://xenodez.pleasedonthack.us/?attachment_id=49">&amp;lt;span style=&amp;ldquo;color: windowtext; font-family: &amp;ldquo;Verdana&amp;rdquo;,sans-serif; font-size: 9.0pt; mso-no-proof: yes; text-decoration: none; text-underline: none;&amp;quot;&amp;gt;&lt;/a>&lt;/p>
&lt;p>Every computer connected to that hub is in the collision domain noted by the circle. With a hub, the signal gets sent to every device connected to it, regardless of whether it was meant to go to that machine or not. When the PC at the top left sends information at the same time as the PC on the bottom right, a collision is likely to occur&lt;/p>
&lt;p>&lt;a href="http://xenodez.pleasedonthack.us/?attachment_id=52">&amp;lt;span style=&amp;ldquo;color: windowtext; font-family: &amp;ldquo;Verdana&amp;rdquo;,sans-serif; font-size: 9.0pt; mso-no-proof: yes; text-decoration: none; text-underline: none;&amp;quot;&amp;gt;&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h18_45.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h18_45.png" alt="">&lt;/a>&lt;/p>
&lt;p>Every computer connected to this switch is limited in its collision domain to the port on the switch and the network card in the PC. The reason being that switches do not just take a signal and send it out of all the ports, it is intelligent enough to be able to send information directly to the PC it needs to. This is further mitigated by the fact that a computer connected to a switch may operate at full-duplex, allowing both simultaneous sending and receiving of information.&lt;/p>
&lt;p>Collisions and how they are handled:&lt;/p>
&lt;p>The way computers avoid collision in this sense is via something called CSMA/CD or Carrier Sense Multiple Access/Collision Avoidance. The way it works is this, a computer will wait until the line is silent before sending information. Every computer will listen to determine whether the line is truly clear. If two computers were to send at the same time, and a collision were to occur, the computers will immediately trigger a random back off time in which they will not try resending that information until the timer is up.&lt;/p>
&lt;p>Unicast vs Broadcast vs Multicast&lt;/p>
&lt;p>The idea between these concepts is fairly simple. Unicast deals with a transmission that is intended for one recipient. A broadcast is a transmission that is meant for all recipients that are able to hear it. Multicast is intended for a specific group of recipients.&lt;/p></description></item><item><title>BranchCache</title><link>https://rnemeth90.github.io/posts/2014-11-16-branchcache/</link><pubDate>Sun, 16 Nov 2014 21:16:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-16-branchcache/</guid><description>&lt;p>Branchcache is a technology unique to Windows 7 and Windows Server 2008 R2. It provides faster connection to shared files across wide area networks. Branchcache works by caching content hosted on remote servers on a local caching server in the LAN. When a client queries for data on a remote server, it first looks in the local caching server. If the data is not found there, the remote server is accessed and transfer‚Äôs the data to the local caching server, where it is then accessed by the client who originally made the request. That way, all future client requests will not have to go across the wide area network, rather opting to access the local caching server until the data changes.&lt;/p>
&lt;p>Branchcache is only available on Windows 7 clients running Enterprise or Ultimate, and Windows Server 2008 R2. Branchcache becomes active when the round trip latency time from client to remote server exceeds 80 milliseconds.&lt;/p>
&lt;p>Branchcache is available in two modes: distributed cache mode and hosted cache mode. What you just read above was the basics of hosted cached mode. Distributed cache mode works differently to achieve the same results. When a client accesses data across the WAN, it stores that data in its own cache. This way, if another client needs access to the data, it can retrieve it locally. Also, this allows each client to host part of the cache, rather than one machine hosting the entire cache.&lt;/p>
&lt;p>There are two steps to configuring Branchcache on a Windows 7 client. I will not include the server configuration at this point in time.&lt;/p>
&lt;p>Enable Branchcache (Hosted or Distributed, Server 08 R2 will be required for Hosted mode)&lt;/p>
&lt;p>Configure the appropriate ports within the Windows Firewall&lt;/p>
&lt;p>You can enable Branchcache from within Group Policy or by using the Netsh command. When using Group Policy, navigate to Computer Configuration &amp;gt; Administrative Templates &amp;gt; Network &amp;gt; Branchcache. From here you can turn on Branchcache and enable the mode you want to use. You can also set the percentage of disk space to be used for caching. After this, open the Windows Firewall and unblock the Branchcache ports. You only need to do this when configuring Branchcache via Group Policy. Using the Netsh command automatically configures the firewall. Here are the basic commands for Netsh:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Netsh Branchcache set service mode&lt;span style="color:#f92672">=&lt;/span>distributed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Netsh Branchcache reset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Netsh Branchcache show status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Netsh Branchcache set cachesize
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>*Configuring Branchcache must be done from an administrative command prompt.&lt;/p></description></item><item><title>File History</title><link>https://rnemeth90.github.io/posts/2014-11-15-file-history/</link><pubDate>Sat, 15 Nov 2014 20:02:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-15-file-history/</guid><description>&lt;p>File history in Windows 8 allows users to automatically ‚Äúbackup‚Äù files that are in their libraries, contacts, favorites, Skydrive, and on the desktop. If the files are lost, they can be quickly restored. You can also restore a file from a specific point in time, being that File History creates a complete history of your files over time. You will need a separate drive other than the one you have Windows 8 installed on to use File History. To begin using it, connect an external drive and search for File History on the Start Screen:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-15_14h19_47.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-15_14h19_47.png" alt="">&lt;/a>&lt;/p>
&lt;p>After opening File History, you will see this screen:&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-15_14h20_32.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-15_14h20_32.png" alt="">&lt;/a>&lt;/p>
&lt;p>To enable File History, click the ‚ÄòTurn On‚Äô button. You can select the drive you want to use by clicking ‚ÄòSelect Drive‚Äô on the left hand side from this same screen. The first time you enable File History, it will create a full backup of all files on your computer, except for files that you do not access (system files), and files you have chosen to exclude. From then on, it will create a versioned copy of every file that has changed since the last backup.&lt;/p>
&lt;p>You can use a locally attached drive or a network share for File History. To choose how often File History backs up files; choose ‚ÄòAdvanced Settings‚Äô. From here you can also choose how much space on the drive is used, and how long saved versions of files should be kept.&lt;/p>
&lt;p>When the total space allocated to File History has been used, the feature will delete the oldest versions of files to make room for newer versions.&lt;/p></description></item><item><title>Layer 2 Switching Fundamentals</title><link>https://rnemeth90.github.io/posts/2012-11-16-layer-2-switching-fundamentals/</link><pubDate>Fri, 16 Nov 2012 21:26:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2012-11-16-layer-2-switching-fundamentals/</guid><description>&lt;p>Switches are devices that support a large number of ports to connect devices to the network.&lt;/p>
&lt;h3 id="design" >Design:
&lt;span>
&lt;a href="#design">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h22_54.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h22_54.png" alt="">&lt;/a>&lt;/p>
&lt;p>More towards a CCNP or CCDA topic, but designing a network when it comes to the switching side can be done in three building blocks. The access layer, the distribution layer, and the core layer. The access layer generally has a high port density, can support VLANs, QoS, and access lists. The distribution layer will aggregate multiple access layer switches. These are also generally Layer 3 switches to allow routing among an enterprise. It will need to be able to handle the volume of traffic in addition to supporting the same features as the access layer switches. The core layer is the device which will need the highest bandwidth backplane to deal with all of the traffic.&lt;/p>
&lt;h3 id="how-switches-handle-traffic" >How switches handle traffic:
&lt;span>
&lt;a href="#how-switches-handle-traffic">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>A switch is an intelligent device that can make some decisions on how to handle the data it is given. Switches can be divided into two categories for these decisions: Layer 2 or Layer 3 switches. For the CCNA we will only be interested in the layer 2 switches. Layer 2 switches operate at the data link layer. This layer deals primarily with MAC addresses. A Layer 2 switch will build a CAM table full of dynamically learned MAC addresses. The way it learns these addresses is by inspecting the layer 2 header/trailer and learning the source MAC addresses on the frames it receives. A frame is what a packet is encapsulated in when it moves from device to device across the network.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h23_04.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/2014-11-16_16h23_04.png" alt="">&lt;/a>&lt;/p>
&lt;p>With this example the switch has learned PC1/PC2/and PC3‚Ä≤s MAC addresses. If a packet came in on Fa0/4 from PC4, the switch would look at the source MAC address and put an entry for 4444.4444.4444 on Fa0/4. A switch will route traffic based on this table. There are a few decisions it must make to determine how to handle traffic. When it first receives a frame it will consult it‚Äôs CAM table to determine whether or not it has the source MAC address listed for that port. If not, it will add it to the CAM table. In the example above, PC1 sent a frame to the switch, the switch noticed PC1‚Ä≤s MAC address was not in it‚Äôs table and added it. The next thing it looks at is the destination MAC address. The CAM table is again consulted. If it finds a match the switch will send the frame directly to the recipient it needs to on whatever port it is on. In the example above, PC1 sends a frame to PC3. Because the switch sees 1111.1111.1111 sending to 3333.3333.3333 and has an entry for 3333.3333.3333 it will send the frame out of port Fa0/3 to the recipient. If a destination is not in the CAM table the switch will need to try to find the recipient. In this case the switch will decide to broadcast the frame out of every port EXCEPT the one it came in on. In this example, PC1 sends a frame destined for PC4. The switch will see a frame from 1111.1111.1111 to 4444.4444.4444. PC4‚Ä≤s MAC address is not in it‚Äôs table. The switch will then send the frame out of every port except for Fa0/1 (the source). When PC2 and PC3 get this frame, it will determine if the frame was meant for it, and if not it will ignore it. PC4 will also make the same decision and PC4 will respond. Once PC4 has responded the switch will be able to add PC4‚Ä≤s MAC address to it‚Äôs table on Fa0/4.&lt;/p></description></item><item><title>User Account Control</title><link>https://rnemeth90.github.io/posts/2012-11-15-user-account-control-copy/</link><pubDate>Thu, 15 Nov 2012 16:01:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2012-11-15-user-account-control-copy/</guid><description>&lt;p>Many people rarely pay close attention to those pesky User Account Control prompts that pop up when attempting to run a program as an administrator. When a user logs into her account, she is assigned a security token based on the level of access that she has (basic user or admin). This token is what defines what programs are allowed to do. Using this concept, the users session is incapable of making changes that would affect the entire system.&lt;/p>
&lt;p>For a standard user, a token with the most basic privileges is assigned. Administrators have two tokens assigned, the first token contains all privileges usually awarded to an administrator (unrestricted), and the second is similar to that awarded to a basic user. This way, all programs that the administrator runs, including the Windows Shell, are run in basic user mode (this is why administrators still receive UAC prompts, but do not get asked for credentials). When an application requests higher privileges, the higher integrity token is used.&lt;/p>
&lt;p>User Account Control prompts each have their own meaning based on the color (blue, grey, yellow, or red. The blue prompt (Figure 1) means that a built in Windows component that is signed by Microsoft is requesting administrative privileges to continue. This prompt has a multicolored shield in the upper left corner. The grey prompt (Figure 2) means a software application that is signed by a third party developer is requesting admin privileges. This prompt has a yellow shield with a black exclamation mark in the upper left corner. The yellow prompt (Figure 3) signifies that a unsigned executable is requesting administrator privileges. This prompt also had a yellow shield with black exclamation mark in the upper left corner, and looks somewhat generic. Finally, the red prompt (Figure 4) means a program that was specifically blocked by an administrator has attempted to run.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BBlue.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BBlue.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 1&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BGrey.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BGrey.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 2&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BYellow.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BYellow.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 3&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BRED.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BRED.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 4&lt;/p></description></item><item><title>User Account Control</title><link>https://rnemeth90.github.io/posts/2012-11-15-user-account-control/</link><pubDate>Thu, 15 Nov 2012 16:01:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2012-11-15-user-account-control/</guid><description>&lt;p>Many people rarely pay close attention to those pesky User Account Control prompts that pop up when attempting to run a program as an administrator. When a user logs into her account, she is assigned a security token based on the level of access that she has (basic user or admin). This token is what defines what programs are allowed to do. Using this concept, the users session is incapable of making changes that would affect the entire system.&lt;/p>
&lt;p>For a standard user, a token with the most basic privileges is assigned. Administrators have two tokens assigned, the first token contains all privileges usually awarded to an administrator (unrestricted), and the second is similar to that awarded to a basic user. This way, all programs that the administrator runs, including the Windows Shell, are run in basic user mode (this is why administrators still receive UAC prompts, but do not get asked for credentials). When an application requests higher privileges, the higher integrity token is used.&lt;/p>
&lt;p>User Account Control prompts each have their own meaning based on the color (blue, grey, yellow, or red. The blue prompt (Figure 1) means that a built in Windows component that is signed by Microsoft is requesting administrative privileges to continue. This prompt has a multicolored shield in the upper left corner. The grey prompt (Figure 2) means a software application that is signed by a third party developer is requesting admin privileges. This prompt has a yellow shield with a black exclamation mark in the upper left corner. The yellow prompt (Figure 3) signifies that a unsigned executable is requesting administrator privileges. This prompt also had a yellow shield with black exclamation mark in the upper left corner, and looks somewhat generic. Finally, the red prompt (Figure 4) means a program that was specifically blocked by an administrator has attempted to run.&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BBlue.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BBlue.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 1&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BGrey.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BGrey.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 2&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BYellow.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BYellow.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 3&lt;/p>
&lt;p>&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BRED.png">&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2014/11/UAC2BRED.png" alt="">&lt;/a>&lt;/p>
&lt;p>Figure 4&lt;/p></description></item><item><title>About</title><link>https://rnemeth90.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/about/</guid><description>&lt;img src="https://geekyryan.com/wp-content/uploads/2022/01/image.png" alt="drawing" width="200"/>
&lt;p>My name is Ryan Nemeth and this is my personal blog. I write down my thoughts regarding Microsoft Azure, Kubernetes, cloud-native technologies, and software development. I find that documenting these things not only helps others but also helps reinforce my own knowledge as well. I may also blog about life or other random things from time to time.&lt;/p>
&lt;p>This blog has had many lives over the years. It originally started as a Blogger blog way back in 2012, moved to Wordpress for a while, then back to blogger, then to Ghost (running on a small droplet over @ DigitalOcean), then back to Wordpress again, and now here on Github pages. That&amp;rsquo;s a lot of change (such is life)! So if you happen to come across a page that has some weird formatting, missing images, etc. Please be kind and let me know so that I may fix it.&lt;/p>
&lt;p>I&amp;rsquo;m currently working remote as a Senior DevOps Engineer/SRE for Aprimo on the Systems team.&lt;/p>
&lt;p>Before joining Aprimo, I was a cloud architect for a software company specializing in HCM software.&lt;/p>
&lt;p>The opinions expressed here are my own personal opinions, and do not represent my employer‚Äôs view in any way.&lt;/p>
&lt;p>Contact me through &lt;a href="https://www.linkedin.com/in/ryan-nemeth-b0b1504b/">LinkedIn&lt;/a> or &lt;a href="https://github.com/rnemeth90">Github&lt;/a>.
&lt;br>
&lt;br>&lt;/p>
&lt;h2 id="currently-reading" >Currently Reading:
&lt;span>
&lt;a href="#currently-reading">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Kubernetes-Patterns-Designing-Cloud-Native-Applications-ebook/dp/B07QH3JCC6/ref=sr_1_1?keywords=kubernetes+patterns&amp;amp;qid=1659346980&amp;amp;s=digital-text&amp;amp;sprefix=kubernetes+patt%2Cdigital-text%2C83&amp;amp;sr=1-1">Kubernetes Patterns&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Self-Taught-Computer-Scientist-Beginners-Science/dp/1119724414/ref=sr_1_1?keywords=the+self+taught+computer+scientist&amp;amp;qid=1659346654&amp;amp;sprefix=the+self+taught+computer+%2Caps%2C82&amp;amp;sr=8-1">The Self-Taught Computer Scientist&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Microservices-Second-Christian-Horsdal-Gammelgaard/dp/1617297925/ref=sr_1_2_sspa?crid=QPYAG2EFADPZ&amp;amp;keywords=microservices+in+.net&amp;amp;qid=1659346935&amp;amp;s=digital-text&amp;amp;sprefix=microservices+in+.ne%2Cdigital-text%2C73&amp;amp;sr=1-2-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUEzTFFTTVdJNjA0V1FCJmVuY3J5cHRlZElkPUEwNDU1MTc3MlE1VENVUEdQSVVCVSZlbmNyeXB0ZWRBZElkPUEwOTk5NzAwU0lOUUlWMzBEVTNNJndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ==">Microservices in .NET&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/10-NET-Cross-Platform-Development-websites/dp/1801077363/ref=sr_1_1?keywords=c%23+10+and+.net+6&amp;amp;qid=1659346562&amp;amp;sprefix=c%23+10+and+.net+%2Caps%2C81&amp;amp;sr=8-1">C# 10 and .NET 6&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Learning-Go-Idiomatic-Real-World-Programming/dp/1492077216/ref=sr_1_1?crid=YF687N53959K&amp;amp;keywords=learning+go&amp;amp;qid=1659346533&amp;amp;sprefix=learning+go%2Caps%2C102&amp;amp;sr=8-1">Learning Go&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/C-Players-Guide-5th/dp/0985580151/ref=sr_1_1?crid=1UMSSS98U2DA4&amp;amp;keywords=c%23+players+guide&amp;amp;qid=1659346365&amp;amp;sprefix=c+players+guid%2Caps%2C80&amp;amp;sr=8-1">C# Players Guide&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM/ref=sr_1_1?crid=10U2VHYBRS2FA&amp;amp;keywords=clean+code&amp;amp;qid=1659347015&amp;amp;s=digital-text&amp;amp;sprefix=clean+cod%2Cdigital-text%2C88&amp;amp;sr=1-1">Clean Code&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Site-Reliability-Engineering-Production-Systems-ebook/dp/B01DCPXKZ6/ref=sr_1_1?keywords=site+reliability+engineering&amp;amp;qid=1659346602&amp;amp;sprefix=site+reli%2Caps%2C79&amp;amp;sr=8-1">Site Reliability Engineering&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Hands-Azure-Developers-ecosystems-containers/dp/1789340624/ref=sr_1_1?keywords=hands-on+azure+for+developers&amp;amp;qid=1659346632&amp;amp;sprefix=hands+on+azure+for+deve%2Caps%2C83&amp;amp;sr=8-1">Hands-On Azure for Developers&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure-ebook/dp/B07YP1XSZ9/ref=sr_1_1?keywords=kubernetes+up+and+running&amp;amp;qid=1659346866&amp;amp;s=digital-text&amp;amp;sprefix=kubernetes+up+and%2Cdigital-text%2C75&amp;amp;sr=1-1">Kubernetes Up and Running&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.amazon.com/Kubernetes-Best-Practices-Blueprints-Applications-ebook/dp/B081J62KLW/ref=sr_1_1?crid=1OLDKB8KZ2G7N&amp;amp;keywords=kubernetes+best+practices&amp;amp;qid=1659346894&amp;amp;s=digital-text&amp;amp;sprefix=kubernetes+best+practice%2Cdigital-text%2C64&amp;amp;sr=1-1">Kubernetes Best Practices&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>