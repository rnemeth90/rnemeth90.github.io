<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tils on GeekyRyan</title><link>https://rnemeth90.github.io/til/</link><description>Recent content in Tils on GeekyRyan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 24 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/til/index.xml" rel="self" type="application/rss+xml"/><item><title>Anacron</title><link>https://rnemeth90.github.io/til/2025-08-24-anacron/</link><pubDate>Sun, 24 Aug 2025 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/til/2025-08-24-anacron/</guid><description>&lt;p&gt;Anacron is designed for tasks that need to run periodically (daily, weekly, monthly) on systems that are not continuously powered on. If a scheduled cron task is missed because the system is off, anacron will run the task once the system is available.&lt;/p&gt;
&lt;p&gt;On many systems, anacron is pre-installed. If not, install it with:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;$ sudo apt install anacron
Anacron&amp;#39;s configuration is in the /etc/anacrontab file, which includes helpful comments and examples. Hereâ€™s an excerpt:

$ sudo vim /etc/anacrontab
# See anacron(8) and anacrontab(5) for details.
# These entries replace cron&amp;#39;s job entries.
1 5 cron.daily run-parts --report /etc/cron.daily
7 10 cron.weekly run-parts --report /etc/cron.weekly
@monthly 15 cron.monthly run-parts --report /etc/cron.monthly
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The syntax in the anacrontab file consists of four fields:&lt;/p&gt;</description></item><item><title>Linux Process Control Blocks</title><link>https://rnemeth90.github.io/til/2025-08-23-linux-pcb/</link><pubDate>Sat, 23 Aug 2025 16:01:00 +0000</pubDate><guid>https://rnemeth90.github.io/til/2025-08-23-linux-pcb/</guid><description>&lt;p&gt;The process control block in Linux (formally named the task_struct) is a data structure maintained by the kernel that contains all of the necessary information to maintain a process on the system. The task_struct is a large struct in the kernel containing many fields. Some example fields are process id (pid), file descriptors, environment variables, the command used to start the process, memory maps, etc. The information specific to a process can be viewed in the &lt;code&gt;/proc/&amp;lt;pid&amp;gt;/&lt;/code&gt; directory. You can learn more in the man pages &lt;code&gt;man procfs&lt;/code&gt;. You can find other relevant man pages with &lt;code&gt;apropos proc&lt;/code&gt;&lt;/p&gt;</description></item></channel></rss>