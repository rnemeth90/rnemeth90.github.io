<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github-Actions on GeekyRyan</title><link>https://rnemeth90.github.io/tags/github-actions/</link><description>Recent content in Github-Actions on GeekyRyan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 23 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/tags/github-actions/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Golang App with Github Actions</title><link>https://rnemeth90.github.io/posts/2022-12-24-gh-actions-copy/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-12-24-gh-actions-copy/</guid><description>&lt;p>In this article, we&amp;rsquo;ll take a quick look at building a Golang app with Github actions. This process can be applied to just about any app
written in any language though. We&amp;rsquo;ll cover the following:&lt;/p>
&lt;ol>
&lt;li>What are github actions?&lt;/li>
&lt;li>Setting up the workflow to build, test, and deploy a binary&lt;/li>
&lt;/ol>
&lt;p>Github Actions is a cross-platform CI/CD pipeline that allows you to build, test, package, and release your software. Actions can be triggered manually or based on events that happen within your Github repo. They are powerful and I suggest you read more at the &lt;a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions" class="external-link" target="_blank" rel="noopener">Official Docs&lt;/a>&lt;/p></description></item></channel></rss>