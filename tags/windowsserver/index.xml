<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WindowsServer on GeekyRyan</title><link>https://rnemeth90.github.io/tags/windowsserver/</link><description>Recent content in WindowsServer on GeekyRyan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 31 Oct 2020 01:02:00 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/tags/windowsserver/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy a New ADDS Forest on Server 2019 Core</title><link>https://rnemeth90.github.io/posts/2020-10-31-deploy-new-adds-forest-on-server-2019/</link><pubDate>Sat, 31 Oct 2020 01:02:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-10-31-deploy-new-adds-forest-on-server-2019/</guid><description>&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;p&gt;Change server name and IP address
Configure time settings and NTP&lt;/p&gt;
&lt;p&gt;In this post we will be reviewing the basic installation of the Active Directory Domain Services role and setup of a new forest on Windows Server Core 2019.&lt;/p&gt;
&lt;p&gt;To get started, login to your server with administrator privileges. You will first need to type in “powershell” in the cmd prompt to start powershell. Once you do that, type in the following command to install the Active Directory Domain Services role:&lt;/p&gt;</description></item><item><title>WSUS: Update Files Not Downloading (Content File Download Failed)</title><link>https://rnemeth90.github.io/posts/2016-11-18-wsus-update-files-not-downloading/</link><pubDate>Fri, 18 Nov 2016 15:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-18-wsus-update-files-not-downloading/</guid><description>&lt;p&gt;This article will discuss an issue regarding WSUS failing to download updates from Microsoft Update servers. You may notice that the home page of your WSUS console states that it has downloaded 0MB of updates:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-18_10h02_21.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may also see this event (or similar) in the Event Log.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-15_16h39_32.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This problem is caused by not specifying a valid path when assigning the WSUS content drive when first installing the role. The first time you load the WSUS console after installing the role, you will be prompted to specify the path to store Windows Update files. WSUS does not like to have its content directory be the root of a partition. For example, if I were to specify “e:” as the path for the Windows Update content, the wizard would give you an error message stating that the path is not valid. However, it doesn’t prompt you to re-enter the path if you click close. The WSUS console opens immediately after and that invalid path is where WSUS will try to store your update files. This is and has been a known bug for a while and needs to be addressed by Microsoft. Evidence of the invalid path can be found in the registry under:&lt;/p&gt;</description></item><item><title>WSUS: An error occurred trying to connect the WSUS server</title><link>https://rnemeth90.github.io/posts/2016-11-10-wsus-an-error-occurred-trying-to-connect-the-wsus-server/</link><pubDate>Thu, 10 Nov 2016 15:18:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-10-wsus-an-error-occurred-trying-to-connect-the-wsus-server/</guid><description>&lt;p&gt;Ran into this error message when configuring a new WSUS server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_00.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-12-21_14h56_00.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Restarted the WSUS, WID, and IIS services to no avail. I even rebooted the server. The WSUS console would work for a short period of time, and then would randomly stop working.&lt;/p&gt;
&lt;p&gt;I found that the WSUS app pool in IIS was being disabled anytime new clients connected to the server. I believe this was because the app pool was running out of usable memory.&lt;/p&gt;</description></item><item><title>WDS Service: The Service did not respond in a timely fashion</title><link>https://rnemeth90.github.io/posts/2016-11-10-wds-service-the-service-did-not-respond-in-a-timely-fashion/</link><pubDate>Thu, 10 Nov 2016 02:19:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-11-10-wds-service-the-service-did-not-respond-in-a-timely-fashion/</guid><description>&lt;p&gt;This was a new one for me. Usually WDS is rock solid and it just works.&lt;/p&gt;
&lt;p&gt;Anyway, I was getting ready to deploy some servers in my lab and found that I couldn’t get WDS to start on my deployment server. I got this error message when trying to start the service:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_29.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_29.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I then tried to start the service from the Services console and got this error message:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_42.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2016/11/2016-11-09_21h02_42.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Script to Move All Disabled AD Objects to a Specified OU</title><link>https://rnemeth90.github.io/posts/2016-10-06-script-to-move-all-disabled-ad-objects-to-a-specified-ou/</link><pubDate>Thu, 06 Oct 2016 03:03:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2016-10-06-script-to-move-all-disabled-ad-objects-to-a-specified-ou/</guid><description>&lt;p&gt;The title says it all. This script will move all disabled AD objects to a specified OU. This script accepts parameters that will allow you to specify whether you want to move Users or Computers and the destination OU. It also accepts a “test mode” parameter that will run the script and output the results, without actually modifying Active Directory.&lt;/p&gt;
&lt;p&gt;This is revision 1 of the script. There are still several improvements I would like to make, including better error handling and recovery.&lt;/p&gt;</description></item><item><title>The User Profile Service service failed the logon</title><link>https://rnemeth90.github.io/posts/2015-12-30-the-user-profile-service-service-failed-the-logon/</link><pubDate>Wed, 30 Dec 2015 10:38:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-12-30-the-user-profile-service-service-failed-the-logon/</guid><description>&lt;p&gt;One of my clients had a really strange issue the other day. He has a domain admin account in his domain and was not able to login to a server that I recently built. The server was an Exchange 2013 box, and was used in Coexistence mode to migrate his company from an Exchange 2007 box.&lt;/p&gt;
&lt;p&gt;He was getting this error message when attempting to login:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h38_53.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2015/12/2015-12-30_09h38_53.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a classic error message that I’m sure most technicians have seen before. Usually the resolution is to go into the registry and rename the user profile key to have a “.bak” extension and then do some other magic. However, this time, that was not the case. I looked in the registry and didn’t even see a reg key for his profile. I then looked in the c:users folder and didn’t see a folder for his profile. Strange…&lt;/p&gt;</description></item><item><title>Finding All Mailboxes with a Forwarding Address in Exchange 2003</title><link>https://rnemeth90.github.io/posts/2015-09-07-finding-all-mailboxes-with-a-forwarding-address-in-exchange-2003/</link><pubDate>Mon, 07 Sep 2015 23:13:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-09-07-finding-all-mailboxes-with-a-forwarding-address-in-exchange-2003/</guid><description>&lt;p&gt;Believe it or not, the MSP I work for still has a client who is using Exchange 2003 as their primary email service. Despite several attempts at convincing them of the power of Office 365, they refuse to migrate. Last week the CFO contacted me and requested we provide them with a report of all users who have their email forwarded to another mailbox. “Ok, no problem.” I said helpfully as the client informed me of their request (at the time I didn’t even think about them having Exchange 2003…). I figured I would just connect to their server and do some quick PowerShell magic, and that would be it. Quick and painless, right? Wrong.&lt;/p&gt;</description></item><item><title>Script for Querying All AD Computers Time Source</title><link>https://rnemeth90.github.io/posts/2015-09-01-script-for-querying-all-ad-computers-time-source/</link><pubDate>Tue, 01 Sep 2015 21:05:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-09-01-script-for-querying-all-ad-computers-time-source/</guid><description>&lt;p&gt;This script will iterate through all computers in Active Directory and return the configured time server for each computer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-Powershell" data-lang="Powershell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt;&amp;lt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; .&lt;/span&gt;&lt;span class="sd"&gt;SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; Get time source for all computers in domain
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; .&lt;/span&gt;&lt;span class="sd"&gt;EXAMPLE&lt;/span&gt;&lt;span class="cm"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; Get-TimeSource
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; .&lt;/span&gt;&lt;span class="sd"&gt;NOTES&lt;/span&gt;&lt;span class="cm"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; Author: Ryan Nemeth - RyanNemeth@live.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; Site: http://www.geekyryan.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; .&lt;/span&gt;&lt;span class="sd"&gt;LINK&lt;/span&gt;&lt;span class="cm"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; http://www.geekyryan.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; .&lt;/span&gt;&lt;span class="sd"&gt;DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; This function will iterate through all computers/servers in a domain and return the time source
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; for each.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="n"&gt;-foregroundcolor&lt;/span&gt; &lt;span class="n"&gt;Red&lt;/span&gt; &lt;span class="n"&gt;-BackgroundColor&lt;/span&gt; &lt;span class="n"&gt;black&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;This script must be run on a domain controller and requires that the AD Powershell module be installed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$module&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-Module&lt;/span&gt; &lt;span class="n"&gt;-ListAvailable&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select-Object&lt;/span&gt; &lt;span class="n"&gt;-ExpandProperty&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$module&lt;/span&gt; &lt;span class="o"&gt;-notcontains&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ActiveDirectory&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="n"&gt;-foregroundcolor&lt;/span&gt; &lt;span class="n"&gt;red&lt;/span&gt; &lt;span class="n"&gt;-backgroundcolor&lt;/span&gt; &lt;span class="n"&gt;black&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;***Active Directory Powershell Module Not Found***&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="n"&gt;-foregroundcolor&lt;/span&gt; &lt;span class="n"&gt;yellow&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Found Active Directory Powershell Module. Importing...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="n"&gt;ActiveDirectory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$computers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get-adcomputer&lt;/span&gt; &lt;span class="n"&gt;-filter&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select-Object&lt;/span&gt; &lt;span class="n"&gt;-ExpandProperty&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$computer&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$computers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;$tm_source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w32tm&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;computer&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$computer&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;The time source for&amp;#34;&lt;/span&gt; &lt;span class="nv"&gt;$computer&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;is&amp;#34;&lt;/span&gt; &lt;span class="nv"&gt;$tm_source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src="https://github.com/rnemeth90/PowerShell/blob/master/NTP/Get-TimeSource.ps1" alt=""&gt;&lt;/p&gt;</description></item><item><title>Error When Reinstalling DirSync</title><link>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</link><pubDate>Thu, 13 Aug 2015 18:59:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</guid><description>&lt;p&gt;Today is just not my day! After a failed attempt at installing/configuring DirSync, I removed it and tried to install and configure it again. This time did not prove any more successful. I was getting this error midway through the install process:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/1.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was able to figure this out after a little while and wanted to sure what I learned. If you are seeing this error message after removing DirSync and trying to reinstall, here’s what you need to do:&lt;/p&gt;</description></item><item><title>Failed to Mount Exchange 2010 Database</title><link>https://rnemeth90.github.io/posts/2015-08-12-failed-to-mount-exchange-2010-database/</link><pubDate>Wed, 12 Aug 2015 12:59:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-08-12-failed-to-mount-exchange-2010-database/</guid><description>&lt;p&gt;Recently, one of my users’ came to me and said he was missing two months worth of email. This was just after migrating to Exchange Online. We were using Exchange 2010 with System Center DPM for backups.&lt;/p&gt;
&lt;p&gt;I restored the database that the users’ mailbox was on from a backup then copied it over to the Exchange server from the network share I restored it to. All was going well, until I tried to mount the darn thing.&lt;/p&gt;</description></item><item><title>Powershell: SID to Username</title><link>https://rnemeth90.github.io/posts/2014-12-08-powershell-sid-to-username-powershell-sid-to-username/</link><pubDate>Mon, 08 Dec 2014 13:43:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-powershell-sid-to-username-powershell-sid-to-username/</guid><description>&lt;p&gt;This is a simple script to convert a SID to a username&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-Powershell" data-lang="Powershell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# Returns a username based on a SID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# Author: Ryan Nemeth&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;# Date: 12/2/2014&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$SID&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;read-host&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;SID&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="err"&gt;”&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$object&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;Principal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;SecurityIdentifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$SID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$User&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;Translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;\[&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;Principal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NTAccount&lt;/span&gt;&lt;span class="p"&gt;\])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="nv"&gt;$User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;Value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unlock a Domain User from CMD Line</title><link>https://rnemeth90.github.io/posts/2014-12-08-unlock-domain-user-from-cmd-line/</link><pubDate>Mon, 08 Dec 2014 02:11:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-12-08-unlock-domain-user-from-cmd-line/</guid><description>&lt;p&gt;To unlock a domain user from the command line, use this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;net user &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;lt&lt;span class="p"&gt;;&lt;/span&gt;username&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;gt&lt;span class="p"&gt;;&lt;/span&gt; /domain /active:yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This can also be done using Powershell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-Powershell" data-lang="Powershell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;Unlock-ADAccount&lt;/span&gt; &lt;span class="n"&gt;-identity&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;John&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;OU&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;myUsers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;myDomain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>The Case of Transitive Trusts and Dropped RPC Connections</title><link>https://rnemeth90.github.io/posts/2014-11-25-the-case-of-transitive-trusts-and-dropped-rpc-connections/</link><pubDate>Tue, 25 Nov 2014 01:27:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-25-the-case-of-transitive-trusts-and-dropped-rpc-connections/</guid><description>&lt;p&gt;I was at a client earlier this morning, working to get a transitive forest trust setup between their two domains. Setting up the trust on ServerA to DomainB went without issue. However, when trying to create the trust between ServerB and DomainA, I received this error: The secure channel reset on Active Directory Domain Controller (Your domain controller) of domain (Your domain) to domain (your other domain) failed with error: RPC server is unavailable.&lt;/p&gt;</description></item><item><title>Creating Applocker Policies</title><link>https://rnemeth90.github.io/posts/2014-11-17-creating-applocker-policies/</link><pubDate>Mon, 17 Nov 2014 01:40:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-17-creating-applocker-policies/</guid><description>&lt;p&gt;Application Control Policies can be used to restrict what programs a user is allowed to run. They can be created at the local Group Policy level or the Domain GPO level. There are 4 different types of Applocker RULES that you can implement, depending on what type of executable you want to control access to.&lt;/p&gt;
&lt;p&gt;Executable Rules – EXE’s, COM’s, etc.&lt;/p&gt;
&lt;p&gt;Script Rules – batch files, VB scripts, etc.&lt;/p&gt;
&lt;p&gt;AppX Rules – AppX Packages (Windows 8.1/Server 2012 R2 Metro Interface programs)&lt;/p&gt;</description></item><item><title>BranchCache</title><link>https://rnemeth90.github.io/posts/2014-11-16-branchcache/</link><pubDate>Sun, 16 Nov 2014 21:16:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2014-11-16-branchcache/</guid><description>&lt;p&gt;Branchcache is a technology unique to Windows 7 and Windows Server 2008 R2. It provides faster connection to shared files across wide area networks. Branchcache works by caching content hosted on remote servers on a local caching server in the LAN. When a client queries for data on a remote server, it first looks in the local caching server. If the data is not found there, the remote server is accessed and transfer’s the data to the local caching server, where it is then accessed by the client who originally made the request. That way, all future client requests will not have to go across the wide area network, rather opting to access the local caching server until the data changes.&lt;/p&gt;</description></item></channel></rss>