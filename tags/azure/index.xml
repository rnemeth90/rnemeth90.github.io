<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure on GeekyRyan</title><link>https://rnemeth90.github.io/tags/azure/</link><description>Recent content in Azure on GeekyRyan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 03 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Chaining YAML Pipelines in Azure Devops</title><link>https://rnemeth90.github.io/posts/2022-11-03-chaining-yaml-pipelines-in-azure-devops-copy/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-11-03-chaining-yaml-pipelines-in-azure-devops-copy/</guid><description>&lt;p&gt;In this article, we&amp;rsquo;ll take a quick look at chaining two pipelines together in Azure Devops, so that the completion of one pipeline, triggers the other to run.
Microsoft documentation is leaps and bounds ahead of where it used to be. However, I still feel like there is a lot of room for improvement, as it took me a while to
figure this out.&lt;/p&gt;
&lt;p&gt;Our two pipelines will exist in the same repository. We have a dependent-pipeline, that we only want to run once the source-pipeline is finished. This is useful if you have
some infrastructure you want to build, prior to deploying something to that infrastructure.&lt;/p&gt;</description></item><item><title>Update Azure Devops SPN Secret</title><link>https://rnemeth90.github.io/posts/2022-09-12-update-azure-devops-spn-secret/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-09-12-update-azure-devops-spn-secret/</guid><description>&lt;p&gt;If you need to update the secret for a service principal in Azure Devops, prior to it expiring, you may be surprised to find that this cannot be done via the Azure Portal.&lt;/p&gt;
&lt;p&gt;In this article, I&amp;rsquo;ll show you two methods for updating a secret for a service principal prior to expiration.&lt;/p&gt;
&lt;h1 id="update-the-secret-via-the-azure-devops-portal"&gt;
 Update the secret via the Azure Devops Portal:
 &lt;a class="heading-link" href="#update-the-secret-via-the-azure-devops-portal"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Go to &amp;ldquo;Service Connections&amp;rdquo; in the Azure Devops portal&lt;/li&gt;
&lt;li&gt;Find the SPN you want to update, then click &amp;ldquo;Manage Service Principal&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Then on the service principal page, click Certificates &amp;amp; Secrets&lt;/li&gt;
&lt;li&gt;Create a &amp;ldquo;New Client Secret&amp;rdquo;, take note of the value&lt;/li&gt;
&lt;li&gt;Delete the &amp;lsquo;old&amp;rsquo; secret&lt;/li&gt;
&lt;li&gt;Return to the Service Connection in the Azure Devops portal&lt;/li&gt;
&lt;li&gt;Click Edit - click the verify button. It should tell you the client certificate has expired&lt;/li&gt;
&lt;li&gt;Now you need to make an arbitrary change and save it. I just type a character in the optional description and save.&lt;/li&gt;
&lt;li&gt;Now edit again and click verify, it will now pick up the new client secret and all is happy.&lt;/li&gt;
&lt;li&gt;You can now remove whatever you added to the description.&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Accessing Secrets Securely in Azure DevOps Pipelines</title><link>https://rnemeth90.github.io/posts/2022-02-19-accessing-secrets-ecurely-in-azure-devops-pipelines/</link><pubDate>Sat, 19 Feb 2022 16:02:50 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-02-19-accessing-secrets-ecurely-in-azure-devops-pipelines/</guid><description>&lt;p&gt;This post will cover a secure method for accessing secrets in Azure DevOps pipelines.&lt;/p&gt;
&lt;h2 id="why-azure-key-vault"&gt;
 Why Azure Key Vault?
 &lt;a class="heading-link" href="#why-azure-key-vault"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Azure Key Vault is an Azure cloud service used to securely store secrets, keys, and certificates. A secret can be any string of characters, such as API keys, passwords, URLs, etc. Azure Key Vault encrypts data at rest and in transit using HTTPS. Depending on the type of Key Vault you are using, data at rest is encrypted using software encryption (AES 256) or HSM-backed keys.&lt;/p&gt;</description></item><item><title>Azure Kubernetes sFTP Solution</title><link>https://rnemeth90.github.io/posts/2022-01-16-azure-kubernetes-sftp-solution/</link><pubDate>Sun, 16 Jan 2022 07:00:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-16-azure-kubernetes-sftp-solution/</guid><description>&lt;p&gt;In this post, we’ll take a look at deploying a highly available sFTP solution to Azure Kubernetes with user files stored in an Azure NFSv4 File Share. The sFTP application reads user credentials from a file named users.conf, containing secrets from an Azure Key Vault.&lt;/p&gt;
&lt;p&gt;Here is the link to my Github account where you can download the code mentioned in this article:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rnemeth90/kubernetes-sftp" class="external-link" target="_blank" rel="noopener"&gt;https://github.com/rnemeth90/kubernetes-sftp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will work through the following steps in this article:&lt;/p&gt;</description></item><item><title>Continuous Deployment Models</title><link>https://rnemeth90.github.io/posts/2022-01-14-continuous-deployment-models/</link><pubDate>Fri, 14 Jan 2022 19:24:01 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-continuous-deployment-models/</guid><description>&lt;p&gt;When deploying new software releases to servers or (insert -as-a-service&amp;gt; here), it’s a good idea to either deploy the releases in a controlled manner or to have a quick rollback plan. This article will be diving into blue/green deployments, canary deployments, ring-based deployments, and feature tag deployments.&lt;/p&gt;
&lt;h2 id="bluegreen-deployments"&gt;
 Blue/Green Deployments
 &lt;a class="heading-link" href="#bluegreen-deployments"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Blue/green deployments are a deployment model where a new application version never gets deployed to the production servers (green) directly. Instead, it gets deployed to another set of servers (blue) first. Since the blue servers are not currently serving any traffic for users, the deployment has no impact. However, once the deployment has been completed successfully and tested, users will be directed to the new deployment (blue). You can control all user traffic or a subset of user traffic if your load balancer supports it (referred to as ‘Progressive Exposure’).&lt;/p&gt;</description></item><item><title>Deploy Azure VMs Using Azure Devops CI/CD Pipeline</title><link>https://rnemeth90.github.io/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</link><pubDate>Fri, 14 Jan 2022 18:46:35 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</guid><description>&lt;p&gt;This article assumes that you have already created a pipeline in Azure Devops and have it linked to an Azure Devops repo. You will need to create a variable named $vmpassword and assign it the value stored in your key vault.&lt;/p&gt;
&lt;p&gt;To create a release pipeline that will automatically create a VM (using the password stored in key vault for the local administrator account), do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new release pipeline&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://www.rnemeth90.github.io/content/images/2021/01/image-13.png" alt=""&gt;&lt;/p&gt;</description></item><item><title>Azure Devops &amp;#8211; Self Hosted Agent Service Won&amp;#8217;t Start &amp;#8211; Incorrect Function</title><link>https://rnemeth90.github.io/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</link><pubDate>Fri, 14 Jan 2022 18:45:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</guid><description>&lt;p&gt;I setup a self hosted agent for Azure Devops this morning on Server 2012 R2 (legacy Visual Studio dependencies…) and found that I was unable to start the service. The error I received was “Error 1 Incorrect Function” when attempting to start the service in services.msc.&lt;/p&gt;
&lt;p&gt;I was attempting to run the agent from within my user profile downloads folder. I originally was not aware the service would be running from this directory. I thought it would copy its binary files to program files directory or programdata, like 99% of all other apps. The service installs and attempts to run itself as the “network service” authority. This account does not have permission to a user profile folder by default, and the installation script is not able to grant it permission for some reason (I didn’t investigate this further). I removed the agent, moved the installation files to the root of c:, and then reinstalled. The agent service is now able to start successfully.&lt;/p&gt;</description></item><item><title>Exam AZ-303: Microsoft Azure Architect Technologies Study Guide</title><link>https://rnemeth90.github.io/posts/2020-12-16-exam-az-303-microsoft-azure-architect/</link><pubDate>Wed, 16 Dec 2020 14:44:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-12-16-exam-az-303-microsoft-azure-architect/</guid><description>&lt;p&gt;&lt;span style="font-family: arial;"&gt;I recently passed the AZ-303 exam. Below are some of the resources I used to prepare for the exam. In addition to the links below, I also used Alan Rodrigues’ course on Udemy. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: arial;"&gt;&lt;a href="https://www.udemy.com/course/az-102-azure-administrator-certification-transition/" class="external-link" target="_blank" rel="noopener"&gt;https://www.udemy.com/course/az-102-azure-administrator-certification-transition/&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: arial;"&gt;The Udemy course and Microsoft Docs are enough to pass the exam. The course has some good practice exams and labs that align well with what you’ll see on the real exam regarding difficulty. I was scoring in the high 90’s on the Udemy exams. On the real exam, my score was 923. So, I think, if you comprehend the material well, and get high scores on Udemy practice exams, you’ll do well on the real exam.&lt;/span&gt;&lt;/p&gt;</description></item><item><title>Azure AD Sync &amp;#8211; Set-MsolDirSyncEnabled : You cannot turn off Active Directory synchronization.</title><link>https://rnemeth90.github.io/posts/2020-11-26-azure-ad-sync-set-msoldirsyncenabled/</link><pubDate>Thu, 26 Nov 2020 16:31:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-26-azure-ad-sync-set-msoldirsyncenabled/</guid><description>&lt;p&gt;I recently ran into a situation in my lab environment that required I resync all (2000+) user accounts to Azure AD. Though this sounds complex and daunting, its actually quite simple. T&lt;/p&gt;
&lt;p&gt;The basic steps involve disabling sync, and then removing the user objects. This can all be done with two PowerShell commands:&lt;/p&gt;
&lt;p&gt;1) Set-MsolDirSyncEnabled -EnableDirSync $false&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lh3.googleusercontent.com/-rGK18FXw7ns/X7_WthQR0CI/AAAAAAAAyCM/gg7MsY2fcVIcWMMbvxYzPpbpPyKwgHP8ACLcBGAsYHQ/image.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2) Get-MsolUser -All | Remove-MsolUser -force&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lh3.googleusercontent.com/-miyfN7OISGo/X7_WzDCc6iI/AAAAAAAAyCQ/PtHURTTVMQ4uypzO7L1UaLfyEs0fpYGdACLcBGAsYHQ/image.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2020/11/image-1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The account that you are currently running the commands as will not be removed.&lt;/p&gt;</description></item><item><title>Azure VM Scale Set &amp;#8211; Get Instance IP Address</title><link>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</link><pubDate>Thu, 19 Nov 2020 18:07:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</guid><description>&lt;p&gt;If you are using VM Scale Sets in Azure, you know how important it can be to quickly obtain an instance IP address. This can of course be done using the Azure Portal. However, I am often working in a shell or VSCode, and I do not want to leave the comfort of my shell to login to the portal.&lt;/p&gt;
&lt;p&gt;There are a few options we have for retrieving information about a VMSS and its instances without using the Azure Portal. We can use PowerShell or the Azure CLI. Being that I am constantly flipping between Windows and Linux, I will detail both here.&lt;/p&gt;</description></item><item><title>Azure Policy &amp;#8211; Allowed Locations for Resource Deployment</title><link>https://rnemeth90.github.io/posts/2020-11-17-azure-policy-allowed-locations-for/</link><pubDate>Tue, 17 Nov 2020 17:52:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-17-azure-policy-allowed-locations-for/</guid><description>&lt;p&gt;Azure Policy allows us to control what actions users can perform regarding creating and managing resources in Azure. We can define policies for naming standards, require that certain extensions be installed on virtual machines, audit various resources for certain configurations… the possibilities are endless.&lt;/p&gt;
&lt;p&gt;In this article, well focus on defining what locations users can deploy resources in. To get started, login to the Azure Portal and search for “Policy”.&lt;/p&gt;</description></item><item><title>Replicate an Azure VM Image Between Regions</title><link>https://rnemeth90.github.io/posts/2020-11-03-replicate-azure-vm-image-between-regions/</link><pubDate>Tue, 03 Nov 2020 20:15:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2020-11-03-replicate-azure-vm-image-between-regions/</guid><description>&lt;p&gt;Let’s say you have a VM in Azure North Central. You created this VM from a custom image that you maintain in an Azure image repository. Now, what if you wanted to create that same VM in Azure South Central, and use the same reference image? A standard image repository is limited to the region that it exists in. The answer here is to create a Shared Image Library, add the image to it, and then configure the image to replicate to other Azure regions.&lt;/p&gt;</description></item><item><title>Azure Site Recovery &amp;#8211; VMware-to-Azure: Wrong IP address discovered for VM</title><link>https://rnemeth90.github.io/posts/2018-08-21-azure-site-recovery-vmware-to-azure/</link><pubDate>Tue, 21 Aug 2018 17:26:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-08-21-azure-site-recovery-vmware-to-azure/</guid><description>&lt;p&gt;When replicating virtual machines from VMware to Azure using Site Recovery, you may encounter an issue where the Configuration server discovers the wrong IP address for a VM. This can be caused by stale entries within the infrastructurevms MySQL table that is used by ASR to track VM attributes.&lt;/p&gt;
&lt;p&gt;To resolve this issue, you first need to disable replication for the VM in the Azure Portal.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-21_13h20_26.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/08/2018-08-21_13h20_26.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next, login to your ASR Configuration Server and open a CMD prompt as administrator. Browse to the bin directory for your ASR installation. For example, in my case ASR is installed on the E: partition under the following directory:&lt;/p&gt;</description></item><item><title>Azure AD Connect No-Start-Connection</title><link>https://rnemeth90.github.io/posts/2018-07-26-azure-ad-connect-no-start-connection/</link><pubDate>Thu, 26 Jul 2018 12:22:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-26-azure-ad-connect-no-start-connection/</guid><description>&lt;p&gt;This morning, I ran into an issue with Azure AD Connect that I had never seen before. I received an email alert from Azure AD stating that Password Synchronization was not working for my forest, and the suggested fix was to restart the ADSync service on the server. I restarted the service and then forced a sync to verify it was working.&lt;/p&gt;
&lt;p&gt;After forcing the sync, I opened miisclient and noticed some strange errors. We sync multiple on-prem AD forests to Azure AD, and the status for one of them was “no-start-connection”. That error in itself does not seem significant to me. However, after clicking on the “failed-connection” link in the Connection Status pane, things became much more clear.&lt;/p&gt;</description></item><item><title>Azure AD Connect Health: Latest Data is not Available in Azure Portal</title><link>https://rnemeth90.github.io/posts/2018-07-18-azure-ad-connect-health-latest-data-is/</link><pubDate>Wed, 18 Jul 2018 16:38:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-18-azure-ad-connect-health-latest-data-is/</guid><description>&lt;p&gt;I recently had to create a new Azure AD Connect server, and found that it was not able to report health status in the Azure Portal. After some troubleshooting/research, I was able to get the health status report working by registering the health agent on the server with Azure AD Health Services. Doing this involves running one PowerShell cmdlet on your AD Connect server and providing global administrator credentials.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_56.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://rnemeth90.github.io/wp-content/uploads/2018/07/2018-07-18_12h23_56.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Removing a Forest from Azure AD Connect</title><link>https://rnemeth90.github.io/posts/2018-07-13-removing-forest-from-azure-ad-connect/</link><pubDate>Fri, 13 Jul 2018 15:30:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2018-07-13-removing-forest-from-azure-ad-connect/</guid><description>&lt;p&gt;In an organization with multiple Active Directory forests, you may want to sync objects from trusted forests. Adding trusted forests to Azure AD Sync is a simple process that I will likely cover in a future article. The focus of this post is the not-so-obvious process of removing a forest from Azure AD Connect. This can be a daunting and somewhat scary thing to do. Not fully understanding the process or having someone to guide you can leave you with thoughts like “what happens when I remove the forest from Azure AD Sync? Do on-premises objects get deleted? Are cloud objects deleted?”. I will try to answer these questions to the best of my ability and hopefully make the process simple and stress-free for you.&lt;/p&gt;</description></item><item><title>Error When Reinstalling DirSync</title><link>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</link><pubDate>Thu, 13 Aug 2015 18:59:00 +0000</pubDate><guid>https://rnemeth90.github.io/posts/2015-08-13-error-when-reinstalling-dirsync/</guid><description>&lt;p&gt;Today is just not my day! After a failed attempt at installing/configuring DirSync, I removed it and tried to install and configure it again. This time did not prove any more successful. I was getting this error midway through the install process:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://geekyryan.com/wp-content/uploads/2015/08/1.png" class="external-link" target="_blank" rel="noopener"&gt;&lt;img src="https://geekyryan.com/wp-content/uploads/2015/08/1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was able to figure this out after a little while and wanted to sure what I learned. If you are seeing this error message after removing DirSync and trying to reinstall, here’s what you need to do:&lt;/p&gt;</description></item></channel></rss>