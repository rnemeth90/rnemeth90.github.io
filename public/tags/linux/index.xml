<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on GeekyRyan</title>
    <link>https://rnemeth90.github.io/tags/linux/</link>
    <description>Recent content in Linux on GeekyRyan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Jul 2022 18:18:50 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scheduled Kubernetes Worker Node Maintenance with Kured</title>
      <link>https://rnemeth90.github.io/posts/2022-07-15-scheduled-kubernetes-worker-node-maintenance-with-kured/</link>
      <pubDate>Fri, 15 Jul 2022 18:18:50 +0000</pubDate>
      
      <guid>https://rnemeth90.github.io/posts/2022-07-15-scheduled-kubernetes-worker-node-maintenance-with-kured/</guid>
      <description>If you manage Linux nodes, you know how vital performing regular maintenance is. Installing software patches that modify Linux kernel headers requires a reboot. Normally, as in the past, we would cordon and drain the node and then manually reboot, wait for it to come back online, verify its health, and add it back to the cluster. That’s a lot of manual work! How can we automate this?
Weaveworks created a great tool for simplifying these steps: Kured (the Kubernetes Reboot Daemon).</description>
    </item>
    
    <item>
      <title>Running Docker in WSL v1</title>
      <link>https://rnemeth90.github.io/posts/2022-06-26-running-docker-in-wsl-v1/</link>
      <pubDate>Sun, 26 Jun 2022 15:00:28 +0000</pubDate>
      
      <guid>https://rnemeth90.github.io/posts/2022-06-26-running-docker-in-wsl-v1/</guid>
      <description>I have somewhat of a niche issue, where I have no network connectivity while connecting to my work VPN inside of WSL v2. I have found others complaining about this issue on Github. Though no one seems to know how to fix it and I have not had the time to properly investigate.
Because of this, I’m required to continue using WSL v1. Though, with WSL v1, Docker does not work.</description>
    </item>
    
    <item>
      <title>Remove Kubernetes Namespace Stuck in the Terminating State</title>
      <link>https://rnemeth90.github.io/posts/2022-06-04-remove-kubernetes-namespace-stuck-in-the-terminating-state/</link>
      <pubDate>Sat, 04 Jun 2022 18:29:41 +0000</pubDate>
      
      <guid>https://rnemeth90.github.io/posts/2022-06-04-remove-kubernetes-namespace-stuck-in-the-terminating-state/</guid>
      <description>In this post, we will discuss how to remove a Kubernetes namespace that is stuck in the ‘terminating’ state.
A namespace is like a container. You can use it to store related objects in a Kubernetes environment. Maybe you are hosting a blog in Kubernetes. This blog will likely have a database, a frontend website, a load balancer (service) to spread the incoming traffic among ‘x’ number of frontend containers (pods), and maybe some middle-tier or utility applications.</description>
    </item>
    
    <item>
      <title>Azure VM Scale Set &amp;#8211; Get Instance IP Address</title>
      <link>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</link>
      <pubDate>Thu, 19 Nov 2020 18:07:00 +0000</pubDate>
      
      <guid>https://rnemeth90.github.io/posts/2020-11-19-azure-vm-scale-set-get-instance-ip/</guid>
      <description>If you are using VM Scale Sets in Azure, you know how important it can be to quickly obtain an instance IP address. This can of course be done using the Azure Portal. However, I am often working in a shell or VSCode, and I do not want to leave the comfort of my shell to login to the portal.
There are a few options we have for retrieving information about a VMSS and its instances without using the Azure Portal.</description>
    </item>
    
    <item>
      <title>Reset GRUB/root Password for vCenter/PSC Appliance</title>
      <link>https://rnemeth90.github.io/posts/2020-10-31-reset-grubroot-password-for-vcenterpsc/</link>
      <pubDate>Sat, 31 Oct 2020 01:22:00 +0000</pubDate>
      
      <guid>https://rnemeth90.github.io/posts/2020-10-31-reset-grubroot-password-for-vcenterpsc/</guid>
      <description>In Redhat/Fedora/Cent, GRUB can be protected by running the grub-md5-crypt command and pasting the outputted password hash into the grub.conf file. vSphere 6.0 password protects grub by default. If you change the root password in the VAMI, the GRUB password is changed to match. If you do not change the root password, the GRUB password is “vmware”.
To reset the GRUB password, we need to boot into a Cent or Redhat live CD.</description>
    </item>
    
    <item>
      <title>Ping Sweeping with FPing</title>
      <link>https://rnemeth90.github.io/posts/2015-03-09-ping-sweeping-with-fping/</link>
      <pubDate>Mon, 09 Mar 2015 01:08:00 +0000</pubDate>
      
      <guid>https://rnemeth90.github.io/posts/2015-03-09-ping-sweeping-with-fping/</guid>
      <description>I generally use NMAP for any type of host discovery, but recently started experimenting with FPing. One thing I found is that, when performing a ping sweep, not only do I see the hosts that replied to the ping, but FPing also sends any unreachable IP addresses to stdout (which is super annoying and ugly if you ask me…).

Anyway, after a bit of research, I found a nifty way to suppress these messages.</description>
    </item>
    
  </channel>
</rss>
