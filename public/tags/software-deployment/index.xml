<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software deployment on GeekyRyan</title>
    <link>https://rnemeth90.github.io/tags/software-deployment/</link>
    <description>Recent content in software deployment on GeekyRyan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Jan 2022 19:24:01 +0000</lastBuildDate><atom:link href="https://rnemeth90.github.io/tags/software-deployment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Continuous Deployment Models</title>
      <link>https://rnemeth90.github.io/posts/2022-01-14-continuous-deployment-models/</link>
      <pubDate>Fri, 14 Jan 2022 19:24:01 +0000</pubDate>
      
      <guid>https://rnemeth90.github.io/posts/2022-01-14-continuous-deployment-models/</guid>
      <description>When deploying new software releases to servers or (insert -as-a-service&amp;gt; here), itâ€™s a good idea to either deploy the releases in a controlled manner or to have a quick rollback plan. This article will be diving into blue/green deployments, canary deployments, ring-based deployments, and feature tag deployments.
Blue/Green Deployments Blue/green deployments are a deployment model where a new application version never gets deployed to the production servers (green) directly. Instead, it gets deployed to another set of servers (blue) first.</description>
    </item>
    
  </channel>
</rss>
