<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on GeekyRyan</title>
    <link>http://localhost:1313/tags/devops/</link>
    <description>Recent content in Devops on GeekyRyan</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 29 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mounting Multiple Kubernetes Secrets into One Directory</title>
      <link>http://localhost:1313/posts/2024-06-29-mount-multiple-kubernetes-secrets-into-one-directory/</link>
      <pubDate>Sat, 29 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2024-06-29-mount-multiple-kubernetes-secrets-into-one-directory/</guid>
      <description>Introduction Link to heading Combining multiple Kubernetes secrets into a single directory can streamline secret management in your applications. This guide walks you through the process of achieving this in Kubernetes, ensuring efficient and organized secret management.&#xA;Creating Secrets Link to heading First, create your secrets using the kubectl create secret command:&#xA;kubectl create secret generic secret-one --from-literal=key1=value1 kubectl create secret generic secret-two --from-literal=key2=value2 Each secret can contain multiple key-value pairs, and you can add more secrets as needed.</description>
    </item>
    <item>
      <title>Using try/catch/finally Blocks in PowerShell</title>
      <link>http://localhost:1313/posts/2023-08-15-powershell-try-catch/</link>
      <pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-08-15-powershell-try-catch/</guid>
      <description>Despite being a great language, PowerShell is not impervious to errors. Errors that occur within your code can stop it&amp;rsquo;s execution or even cause unexpected changes in the resources that your script is managing. Learning to handle these errors gracefully is the foundation of defensive coding. Today, we&amp;rsquo;ll take a quick look at how PowerShell handles errors with Try-Catch-Finally blocks. They allow you to gracefully handle errors and perform cleanup operations, ensuring that your script doesn&amp;rsquo;t crash when the unexpected occurs.</description>
    </item>
    <item>
      <title>Golang: When Identical Strings are Not Equal</title>
      <link>http://localhost:1313/posts/2023-01-24-golang-strings-not-equal/</link>
      <pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-01-24-golang-strings-not-equal/</guid>
      <description>This will be a quick and dirty post, so please forgive any spelling/grammar mistakes.&#xA;I was writing a little CLI tool in Golang to track todo items. Just a dumb little app to help hone my skills a bit, but still something useful that serves a purpose to me. I don&amp;rsquo;t write a ton of code at work (mostly just scripting/pipelines when I do), so I&amp;rsquo;m constantly working on something like this in my spare time.</description>
    </item>
    <item>
      <title>Handling Graceful Shutdown in a .NET App Hosted in Kubernetes</title>
      <link>http://localhost:1313/posts/2022-12-28-graceful-shutdown-in-kubernetes-dotnet-pod/</link>
      <pubDate>Wed, 28 Dec 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-12-28-graceful-shutdown-in-kubernetes-dotnet-pod/</guid>
      <description>I was recently involved with troubleshooting some API&amp;rsquo;s hosted in Kubernetes throwing http/502&amp;rsquo;s. This was incredibly difficult to diagnose because it seemingly happened at random, and I had never encountered anything like this. Being that I had never dealt with this in the past, and I (nor my team) was able to figure it out within a reasonable amount of time, I turned to google. My searches resulted in various blogs and SO posts of other people experiencing similar issues, but none of their resolutions worked for us.</description>
    </item>
    <item>
      <title>Chaining YAML Pipelines in Azure Devops</title>
      <link>http://localhost:1313/posts/2022-11-03-chaining-yaml-pipelines-in-azure-devops-copy/</link>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-11-03-chaining-yaml-pipelines-in-azure-devops-copy/</guid>
      <description>In this article, we&amp;rsquo;ll take a quick look at chaining two pipelines together in Azure Devops, so that the completion of one pipeline, triggers the other to run. Microsoft documentation is leaps and bounds ahead of where it used to be. However, I still feel like there is a lot of room for improvement, as it took me a while to figure this out.&#xA;Our two pipelines will exist in the same repository.</description>
    </item>
    <item>
      <title>Update Azure Devops SPN Secret</title>
      <link>http://localhost:1313/posts/2022-09-12-update-azure-devops-spn-secret/</link>
      <pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-09-12-update-azure-devops-spn-secret/</guid>
      <description>If you need to update the secret for a service principal in Azure Devops, prior to it expiring, you may be surprised to find that this cannot be done via the Azure Portal.&#xA;In this article, I&amp;rsquo;ll show you two methods for updating a secret for a service principal prior to expiration.&#xA;Update the secret via the Azure Devops Portal: Link to heading Go to &amp;ldquo;Service Connections&amp;rdquo; in the Azure Devops portal Find the SPN you want to update, then click &amp;ldquo;Manage Service Principal&amp;rdquo; Then on the service principal page, click Certificates &amp;amp; Secrets Create a &amp;ldquo;New Client Secret&amp;rdquo;, take note of the value Delete the &amp;lsquo;old&amp;rsquo; secret Return to the Service Connection in the Azure Devops portal Click Edit - click the verify button.</description>
    </item>
    <item>
      <title>Running Docker in WSL v1</title>
      <link>http://localhost:1313/posts/2022-06-26-running-docker-in-wsl-v1/</link>
      <pubDate>Sun, 26 Jun 2022 15:00:28 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-06-26-running-docker-in-wsl-v1/</guid>
      <description>I have somewhat of a niche issue, where I have no network connectivity while connecting to my work VPN inside of WSL v2. I have found others complaining about this issue on Github. Though no one seems to know how to fix it and I have not had the time to properly investigate.&#xA;Because of this, I’m required to continue using WSL v1. Though, with WSL v1, Docker does not work.</description>
    </item>
    <item>
      <title>Accessing Secrets Securely in Azure DevOps Pipelines</title>
      <link>http://localhost:1313/posts/2022-02-19-accessing-secrets-ecurely-in-azure-devops-pipelines/</link>
      <pubDate>Sat, 19 Feb 2022 16:02:50 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-02-19-accessing-secrets-ecurely-in-azure-devops-pipelines/</guid>
      <description>This post will cover a secure method for accessing secrets in Azure DevOps pipelines.&#xA;Why Azure Key Vault? Link to heading Azure Key Vault is an Azure cloud service used to securely store secrets, keys, and certificates. A secret can be any string of characters, such as API keys, passwords, URLs, etc. Azure Key Vault encrypts data at rest and in transit using HTTPS. Depending on the type of Key Vault you are using, data at rest is encrypted using software encryption (AES 256) or HSM-backed keys.</description>
    </item>
    <item>
      <title>Kubernetes Pod Eviction</title>
      <link>http://localhost:1313/posts/2022-02-05-kubernetes-pod-eviction/</link>
      <pubDate>Sat, 05 Feb 2022 23:49:16 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-02-05-kubernetes-pod-eviction/</guid>
      <description>In this article, we will dive into the process of pod eviction in a Kubernetes cluster, how you can pod prevent pod eviction, and how you can recover from such a situation.&#xA;What is Pod Eviction? Link to heading Kubernetes pod eviction is a type of involuntary service disruption in which a pod is forcefully stopped on a node or fails to be scheduled on a node. Pod eviction can happen for a variety of reasons.</description>
    </item>
    <item>
      <title>Continuous Deployment Models</title>
      <link>http://localhost:1313/posts/2022-01-14-continuous-deployment-models/</link>
      <pubDate>Fri, 14 Jan 2022 19:24:01 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-01-14-continuous-deployment-models/</guid>
      <description>When deploying new software releases to servers or (insert -as-a-service&amp;gt; here), it’s a good idea to either deploy the releases in a controlled manner or to have a quick rollback plan. This article will be diving into blue/green deployments, canary deployments, ring-based deployments, and feature tag deployments.&#xA;Blue/Green Deployments Link to heading Blue/green deployments are a deployment model where a new application version never gets deployed to the production servers (green) directly.</description>
    </item>
    <item>
      <title>Deploy Azure VMs Using Azure Devops CI/CD Pipeline</title>
      <link>http://localhost:1313/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</link>
      <pubDate>Fri, 14 Jan 2022 18:46:35 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-01-14-deploy-azure-vms-using-azure-devops-ci-cd-pipeline/</guid>
      <description>This article assumes that you have already created a pipeline in Azure Devops and have it linked to an Azure Devops repo. You will need to create a variable named $vmpassword and assign it the value stored in your key vault.&#xA;To create a release pipeline that will automatically create a VM (using the password stored in key vault for the local administrator account), do the following:&#xA;Create a new release pipeline 3.</description>
    </item>
    <item>
      <title>Azure Devops &amp;#8211; Self Hosted Agent Service Won&amp;#8217;t Start &amp;#8211; Incorrect Function</title>
      <link>http://localhost:1313/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</link>
      <pubDate>Fri, 14 Jan 2022 18:45:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-01-14-azure-devops-self-hosted-agent-service-wont-start-incorrect-function/</guid>
      <description>I setup a self hosted agent for Azure Devops this morning on Server 2012 R2 (legacy Visual Studio dependencies…) and found that I was unable to start the service. The error I received was “Error 1 Incorrect Function” when attempting to start the service in services.msc.&#xA;I was attempting to run the agent from within my user profile downloads folder. I originally was not aware the service would be running from this directory.</description>
    </item>
  </channel>
</rss>
