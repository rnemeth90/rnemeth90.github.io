<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on GeekyRyan</title>
    <link>http://localhost:1313/categories/github/</link>
    <description>Recent content in Github on GeekyRyan</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 23 Dec 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Golang App with Github Actions</title>
      <link>http://localhost:1313/posts/2022-12-24-gh-actions-copy/</link>
      <pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-12-24-gh-actions-copy/</guid>
      <description>In this article, we&amp;rsquo;ll take a quick look at building a Golang app with Github actions. This process can be applied to just about any app written in any language though. We&amp;rsquo;ll cover the following:&#xA;What are github actions? Setting up the workflow to build, test, and deploy a binary Github Actions is a cross-platform CI/CD pipeline that allows you to build, test, package, and release your software. Actions can be triggered manually or based on events that happen within your Github repo.</description>
    </item>
  </channel>
</rss>
